var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.241,1,0.921]],["body/components/AppComponent.html",[0,0.423,1,1.542,2,0.192,3,0.192,4,1.257,5,1.402,6,1.402,7,0.192,8,2.885,9,0.741,10,1.337,11,1.793,12,3.953,13,1.549,14,3.953,15,1.549,16,3.953,17,0.291,18,1.257,19,2.983,20,2.983,21,1.257,22,2.114,23,2.357,24,0.489,25,2.885,26,0.923,27,0.041,28,1.774,29,2.885,30,1.018,31,1.723,32,1.015,33,1.921,34,2.885,35,1.257,36,0.523,37,2.885,38,0.146,39,0.192,40,0.102,41,0.06,42,2.773,43,3.948,44,3.982,45,3.245,46,2.779,47,2.779,48,2.779,49,1.018,50,1.921,51,1.549,52,0.549,53,2.114,54,1.402,55,4.851,56,0.923,57,1.402,58,0.917,59,1.402,60,1.018,61,1.402,62,1.018,63,1.402,64,1.131,65,1.402,66,1.018,67,1.402,68,1.018,69,1.402,70,0.917,71,0.917,72,0.917,73,0.825,74,1.131,75,1.402,76,0.917,77,1.257,78,1.402,79,0.917,80,1.257,81,1.402,82,0.917,83,1.257,84,1.402,85,0.917,86,1.018,87,1.402,88,0.027,89,0.027]],["title/modules/AppModule.html",[90,1.136,91,1.578]],["body/modules/AppModule.html",[1,1.884,2,0.245,3,0.245,7,0.245,27,0.041,38,0.285,39,0.245,40,0.164,41,0.077,49,1.297,88,0.032,89,0.032,90,1.817,91,3.168,92,0.944,93,3.123,94,2.468,95,2.851,96,3.018,97,3.018,98,3.018,99,3.018,100,2.672,101,3.259,102,2.584,103,2.584,104,3.676,105,3.806,106,2.584,107,2.26,108,3.259,109,3.676,110,3.676,111,3.018]],["title/components/BoxComponent.html",[0,0.241,58,0.921]],["body/components/BoxComponent.html",[0,0.437,1,1.005,2,0.211,3,0.211,4,1.378,5,1.537,6,1.537,7,0.211,9,0.812,10,1.353,11,1.116,13,1.648,15,1.648,17,0.319,20,3.097,24,0.319,27,0.041,35,1.005,36,0.573,38,0.16,39,0.211,40,0.112,41,0.066,49,1.116,50,2.044,51,1.648,52,0.584,53,2.195,54,1.537,56,0.967,57,1.537,58,1.601,59,1.537,60,1.116,61,1.537,62,1.116,63,1.537,64,1.239,65,1.537,66,1.116,67,1.537,68,1.116,69,1.537,70,1.005,71,1.005,72,1.005,73,0.904,74,1.239,75,1.537,76,1.005,77,1.378,78,1.537,79,1.005,80,1.378,81,1.537,82,1.005,83,1.378,84,1.537,85,1.005,86,1.116,87,1.537,88,0.029,89,0.029,112,3.162,113,0.377,114,2.044,115,5.036,116,3.453,117,0.966,118,4.206,119,4.206,120,4.206,121,4.206,122,4.206,123,4.206,124,4.206,125,4.206,126,4.206,127,4.206,128,1.601,129,3.162,130,3.162]],["title/directives/ClickStopPropagation.html",[52,0.402,72,0.921]],["body/directives/ClickStopPropagation.html",[2,0.245,3,0.245,7,0.245,9,0.944,10,1.065,17,0.371,24,0.371,27,0.041,30,1.297,38,0.186,39,0.245,40,0.13,41,0.077,52,0.705,72,1.474,73,1.649,74,2.09,88,0.032,89,0.032,113,0.439,117,1.065,131,3.676,132,4.636,133,4.636,134,3.057,135,3.806,136,4.636,137,4.636,138,5.333,139,3.57,140,3.018,141,3.676,142,3.676,143,3.806,144,3.676,145,2.584,146,3.676,147,3.018]],["title/interfaces/Configuration.html",[148,1.023,149,2.037]],["body/interfaces/Configuration.html",[0,0.367,2,0.155,3,0.155,7,0.155,10,0.533,11,0.819,13,0.91,15,0.91,17,0.234,18,1.077,22,1.012,23,1.647,24,0.342,26,0.475,27,0.042,35,0.738,36,0.615,38,0.203,39,0.155,40,0.142,41,0.083,46,3.637,70,0.738,71,1.704,73,1.339,88,0.023,89,0.023,92,0.596,113,0.525,114,2.275,117,0.533,128,0.738,148,1.413,149,3.548,150,1.906,151,2.382,152,1.13,153,4.461,154,2.375,155,2.321,156,3.245,157,3.613,158,2.321,159,2.782,160,2.382,161,1.632,162,1.845,163,1.632,164,2.461,165,1.906,166,1.632,167,1.906,168,3.006,169,3.613,170,1.906,171,1.632,172,1.906,173,1.906,174,1.906,175,1.012,176,1.906,177,1.845,178,1.906,179,1.906,180,1.427,181,1.012,182,1.906,183,1.128,184,2.782,185,1.906,186,1.906,187,2.782,188,1.906,189,2.782,190,3.286,191,1.906,192,1.906,193,1.264,194,1.906,195,1.128,196,1.906,197,1.906,198,1.906,199,1.906,200,1.128,201,1.632,202,1.906,203,1.906,204,1.906,205,1.906,206,1.906,207,1.906,208,1.906,209,1.906,210,1.906,211,1.906,212,1.906,213,1.906,214,1.906,215,1.906,216,1.906]],["title/modules/CoreModule.html",[90,1.136,100,1.408]],["body/modules/CoreModule.html",[2,0.143,3,0.143,7,0.143,26,0.441,27,0.042,38,0.291,39,0.143,40,0.15,41,0.045,49,0.76,58,1.72,60,1.91,62,1.91,64,2.121,66,1.91,68,1.91,70,1.72,72,1.512,76,1.72,79,1.72,82,1.72,85,1.72,88,0.022,89,0.022,90,1.256,92,0.553,93,2.355,94,1.558,95,1.971,100,2.92,101,2.253,102,1.513,103,1.513,108,2.692,145,1.513,162,1.745,163,1.513,217,1.767,218,1.767,219,1.767,220,3.328,221,2.152,222,3.205,223,1.767,224,3.205,225,2.152,226,2.152,227,1.767,228,1.767,229,2.152,230,2.152,231,1.767,232,1.767,233,2.152,234,2.152,235,2.631,236,2.152,237,1.971,238,1.767,239,2.631,240,2.152,241,2.152,242,1.323,243,1.513,244,2.152,245,2.152,246,2.152,247,2.152,248,2.152,249,2.152,250,2.152,251,2.152,252,1.767,253,2.152]],["title/directives/DebounceInputDirective.html",[52,0.402,76,0.921]],["body/directives/DebounceInputDirective.html",[0,0.368,2,0.156,3,0.156,7,0.156,9,0.6,10,0.782,17,0.236,18,1.082,21,1.082,24,0.533,26,0.904,27,0.042,30,1.558,31,1.924,32,0.874,36,0.728,38,0.224,39,0.156,40,0.083,41,0.049,51,1.335,52,0.702,56,0.478,76,1.082,77,2.459,88,0.023,89,0.023,113,0.279,117,0.782,128,1.557,134,2.556,135,2.795,139,2.824,140,1.918,143,2.795,147,1.918,152,0.6,160,2.824,161,3.103,175,1.484,181,1.484,200,1.952,254,2.336,255,2.795,256,3.405,257,2.824,258,2.824,259,4.018,260,2.668,261,4.152,262,5.183,263,4.415,264,2.795,265,4.415,266,3.103,267,4.415,268,4.415,269,2.715,270,3.624,271,3.405,272,3.405,273,2.336,274,2.795,275,2.336,276,2.336,277,2.336,278,1.202,279,2.715,280,2.336,281,2.795,282,3.624,283,2.336,284,0.825,285,1.642,286,2.336,287,3.405,288,4.255,289,3.405,290,2.336,291,4.415,292,4.415,293,2.336,294,2.336,295,2.394,296,2.094,297,3.405,298,2.336,299,2.336,300,2.336,301,2.336,302,2.336,303,2.336,304,2.336,305,2.336,306,2.336,307,2.336,308,2.336,309,2.336,310,2.336,311,2.336,312,2.336,313,2.336,314,2.336,315,2.336]],["title/components/FormErrorsComponent.html",[0,0.241,60,1.023]],["body/components/FormErrorsComponent.html",[0,0.393,1,0.857,2,0.18,3,0.18,4,1.176,5,1.311,6,1.311,7,0.18,9,0.692,10,1.325,11,0.952,13,1.479,15,1.479,17,0.272,24,0.381,27,0.041,35,1.199,36,0.684,38,0.191,39,0.18,40,0.096,41,0.056,49,0.952,50,1.834,51,1.479,52,0.524,53,2.054,54,1.311,56,0.891,57,1.311,58,0.857,59,1.311,60,1.663,61,1.311,62,0.952,63,1.311,64,1.057,65,1.311,66,0.952,67,1.311,68,0.952,69,1.311,70,0.857,71,0.857,72,0.857,73,0.771,74,1.057,75,1.311,76,0.857,77,1.176,78,1.311,79,0.857,80,1.176,81,1.311,82,0.857,83,1.176,84,1.311,85,0.857,86,1.751,87,1.311,88,0.026,89,0.026,113,0.322,114,1.834,117,0.867,128,1.498,227,3.869,228,3.572,316,4.351,317,2.697,318,3.773,319,3.773,320,3.773,321,3.773,322,3.773,323,4.351,324,4.96,325,4.351,326,3.097,327,3.773,328,3.097,329,2.697,330,3.773,331,4.713,332,2.697,333,2.697,334,2.697,335,1.896,336,2.697,337,2.697,338,3.773,339,3.773,340,4.713,341,4.713,342,3.773,343,3.773,344,4.713,345,3.773,346,3.773,347,4.713,348,3.773,349,3.773,350,3.773,351,3.773,352,3.773,353,3.773,354,3.773,355,3.773]],["title/interfaces/Item.html",[148,1.023,164,1.782]],["body/interfaces/Item.html",[0,0.378,2,0.143,3,0.143,7,0.143,10,0.495,11,0.76,13,0.844,15,0.844,17,0.217,18,1.019,22,1.397,23,1.558,24,0.458,26,0.441,27,0.042,35,1.645,36,0.823,38,0.194,39,0.143,40,0.136,41,0.088,46,2.983,70,0.684,71,1.699,73,1.48,88,0.022,89,0.022,92,0.553,113,0.604,114,1.861,117,0.495,128,0.684,148,1.352,149,3.464,150,1.767,151,1.513,152,1.352,153,4.324,154,2.062,156,3.328,157,2.631,159,1.767,160,2.253,161,1.513,162,1.745,163,1.513,164,2.79,165,2.631,166,2.253,167,2.631,168,3.113,169,3.725,170,1.767,171,3.19,172,1.767,173,2.631,174,1.767,175,1.397,176,2.631,177,2.086,178,1.767,179,2.631,180,1.971,181,1.397,182,1.767,183,1.046,184,2.631,185,1.767,186,1.767,187,2.631,188,1.767,189,2.631,190,3.144,191,1.767,192,1.767,193,1.172,194,1.767,195,1.046,196,1.767,197,1.767,198,1.767,199,1.767,200,1.046,201,1.513,202,1.767,203,1.767,204,1.767,205,1.767,206,1.767,207,1.767,208,1.767,209,1.767,210,1.767,211,1.767,212,1.767,213,1.767,214,1.767,215,1.767,216,1.767,356,2.152,357,2.152,358,2.152,359,2.152,360,2.152]],["title/components/NavbarComponent.html",[0,0.241,62,1.023]],["body/components/NavbarComponent.html",[0,0.446,1,0.903,2,0.189,3,0.189,4,1.238,5,1.38,6,1.38,7,0.189,9,0.729,10,1.334,11,1.002,13,1.533,15,1.533,17,0.286,24,0.394,27,0.042,31,1.238,32,0.729,38,0.144,39,0.189,40,0.101,41,0.059,47,3.387,48,2.749,49,1.002,50,1.9,51,2.047,52,0.543,53,2.1,54,1.38,56,1.146,57,1.38,58,0.903,59,1.38,60,1.002,61,1.38,62,1.701,63,1.38,64,1.113,65,1.38,66,1.002,67,1.38,68,1.002,69,1.38,70,0.903,71,0.903,72,0.903,73,0.812,74,1.113,75,1.38,76,0.903,77,1.238,78,1.38,79,0.903,80,1.238,81,1.38,82,0.903,83,1.238,84,1.38,85,0.903,86,1.002,87,1.38,88,0.027,89,0.027,92,1.004,113,0.339,114,1.9,117,0.898,128,1.422,156,2.404,242,2.404,295,2.749,361,2.84,362,4.819,363,3.21,364,3.911,365,3.911,366,3.911,367,3.911,368,1.949,369,3.911,370,1.9,371,2.84]],["title/interfaces/Notification.html",[148,1.023,372,2.379]],["body/interfaces/Notification.html",[0,0.31,2,0.176,3,0.176,7,0.176,17,0.266,18,1.181,20,2.87,24,0.471,27,0.042,35,1.73,36,0.846,38,0.218,39,0.176,40,0.132,41,0.055,71,1.181,88,0.025,89,0.025,113,0.315,116,3.05,134,2.023,148,1.311,152,1.374,154,1.282,171,3.877,175,1.619,177,1.437,180,1.622,193,1.437,195,1.282,200,1.805,239,2.166,261,4.038,269,2.284,274,3.05,278,1.311,288,2.166,363,3.05,368,1.15,372,4.743,373,2.638,374,4.667,375,5.103,376,2.638,377,2.638,378,2.638,379,2.638,380,3.05,381,2.638,382,3.715,383,2.166,384,1.622,385,1.622,386,2.638,387,2.638,388,1.855,389,2.638,390,2.638,391,2.638,392,2.638,393,3.715,394,3.715,395,3.715,396,2.166,397,2.638,398,2.638,399,3.715,400,3.715,401,3.715,402,2.638,403,3.715,404,2.638,405,2.638,406,2.638,407,2.638,408,3.715,409,2.638,410,2.638,411,2.638,412,2.638,413,2.638]],["title/classes/Password.html",[41,0.06,414,2.037]],["body/classes/Password.html",[2,0.196,3,0.196,7,0.196,17,0.297,21,1.274,24,0.404,26,1.081,27,0.042,28,1.81,31,1.283,32,1.029,33,1.431,35,0.936,36,0.727,38,0.149,40,0.104,41,0.083,56,0.82,86,1.415,88,0.027,89,0.027,113,0.351,117,0.921,128,0.936,152,1.029,175,1.747,183,1.431,252,4.334,284,1.415,335,2.07,414,3.712,415,2.944,416,4.016,417,5.498,418,3.29,419,4.008,420,4.892,421,4.892,422,4.008,423,4.008,424,4.008,425,4.008,426,4.892,427,4.008,428,4.008,429,2.944,430,3.29,431,2.944,432,2.944,433,2.944,434,4.008,435,4.892,436,2.944,437,2.944,438,4.008,439,2.944,440,2.944,441,2.944,442,2.417,443,2.944,444,2.944,445,2.944,446,2.944]],["title/components/PopoverComponent.html",[0,0.241,66,1.023]],["body/components/PopoverComponent.html",[0,0.395,1,0.76,2,0.159,3,0.159,4,1.042,5,1.162,6,1.162,7,0.159,9,0.614,10,1.301,11,0.844,13,1.357,15,1.357,17,0.241,18,1.1,19,2.744,21,1.1,22,2.22,24,0.526,26,0.709,27,0.041,28,2.129,30,1.437,31,2.064,32,1.045,35,0.76,36,0.809,38,0.175,39,0.159,40,0.085,41,0.05,42,1.47,43,3.137,44,2.842,48,3.137,49,0.844,50,1.682,51,1.357,52,0.48,53,1.945,54,1.162,56,0.913,57,1.162,58,0.76,59,1.162,60,0.844,61,1.162,62,0.844,63,1.162,64,0.937,65,1.162,66,1.575,67,1.162,68,0.844,69,1.162,70,0.76,71,0.76,72,0.76,73,0.684,74,0.937,75,1.162,76,0.76,77,1.042,78,1.162,79,0.76,80,1.042,81,1.162,82,0.76,83,1.042,84,1.162,85,0.76,86,0.844,87,1.162,88,0.024,89,0.024,94,1.162,113,0.285,117,0.795,128,1.505,152,0.614,164,2.129,181,1.509,195,1.682,242,1.47,243,1.68,257,2.861,260,2.43,264,2.842,266,3.137,281,2.842,282,2.842,284,0.844,285,2.861,296,2.744,326,2.842,328,3.663,384,2.129,447,2.39,448,2.842,449,3.462,450,3.462,451,5.398,452,3.462,453,3.462,454,4.07,455,2.744,456,2.39,457,3.462,458,2.39,459,3.462,460,2.39,461,3.462,462,2.129,463,2.39,464,2.39,465,4.462,466,2.39,467,3.462,468,2.39,469,2.39,470,2.39,471,2.39,472,2.39,473,2.39,474,2.39,475,2.39]],["title/directives/ShowPasswordDirective.html",[52,0.402,79,0.921]],["body/directives/ShowPasswordDirective.html",[2,0.204,3,0.204,7,0.204,9,0.785,10,0.944,17,0.308,21,1.306,23,1.485,24,0.415,26,0.626,27,0.041,30,1.451,32,1.055,36,0.554,38,0.155,39,0.204,40,0.108,41,0.064,47,2.148,52,0.719,56,0.626,73,0.874,79,1.306,80,1.791,88,0.028,89,0.028,92,1.055,113,0.365,114,1.485,117,0.944,128,1.306,134,1.664,152,0.785,154,1.997,168,3.282,181,1.791,183,2.257,257,3.265,258,2.148,260,1.664,266,3.492,284,1.078,368,1.332,370,2.414,414,3.492,462,2.527,476,3.056,477,2.238,478,2.148,479,3.492,480,3.265,481,3.492,482,3.056,483,2.889,484,3.056,485,2.509,486,2.509,487,2.148,488,4.11,489,3.056,490,5.183,491,5.338,492,4.644,493,4.644,494,3.056,495,3.056,496,3.056,497,3.056,498,3.056,499,3.056,500,4.11,501,3.056,502,4.11,503,3.056,504,4.11,505,3.056,506,3.056,507,3.056,508,3.056,509,3.056,510,3.056]],["title/injectables/SideBarService.html",[162,1.578,278,1.023]],["body/injectables/SideBarService.html",[0,0.431,2,0.225,3,0.225,7,0.225,17,0.341,18,1.398,19,3.18,21,1.398,22,2.394,23,2.67,24,0.521,26,1,27,0.042,30,1.724,31,1.475,32,0.869,33,1.645,38,0.172,39,0.225,40,0.12,41,0.07,42,3.18,71,1.838,88,0.03,89,0.03,113,0.404,162,2.394,177,2.394,193,2.394,195,2.137,278,1.724,296,3.378,384,2.704,385,2.704,455,3.003,511,3.384,512,3.384,513,3.384,514,3.384,515,3.384]],["title/components/SidePanelComponent.html",[0,0.241,68,1.023]],["body/components/SidePanelComponent.html",[0,0.436,1,0.834,2,0.175,3,0.175,4,2.14,5,1.275,6,1.275,7,0.175,9,0.674,10,1.319,11,0.926,13,1.45,15,1.45,17,0.265,18,1.176,22,2.22,24,0.373,27,0.042,32,0.95,36,0.671,38,0.188,39,0.175,40,0.093,41,0.055,43,2.602,49,0.926,50,1.798,51,1.45,52,0.514,53,2.029,54,1.275,56,0.953,57,1.275,58,0.834,59,1.275,60,0.926,61,1.275,62,0.926,63,1.275,64,1.028,65,1.275,66,0.926,67,1.275,68,1.643,69,1.275,70,0.834,71,0.834,72,0.834,73,0.75,74,1.028,75,1.275,76,0.834,77,1.144,78,1.275,79,0.834,80,1.144,81,1.275,82,0.834,83,1.144,84,1.275,85,0.834,86,0.926,87,1.275,88,0.025,89,0.025,92,0.95,113,0.313,117,0.85,145,2.602,152,0.674,183,2.263,200,1.798,201,1.845,231,3.822,232,3.519,237,3.287,238,2.154,284,0.926,368,1.144,370,1.798,516,4.287,517,2.624,518,4.462,519,3.701,520,4.182,521,3.701,522,3.701,523,3.701,524,2.624,525,2.624,526,2.624]],["title/injectables/SidePanelService.html",[237,1.782,278,1.023]],["body/injectables/SidePanelService.html",[0,0.419,2,0.21,3,0.21,4,2.395,7,0.21,17,0.318,18,1.333,19,3.091,21,1.333,22,2.191,23,2.617,24,0.543,26,0.965,27,0.042,30,1.664,31,1.372,32,0.808,33,1.53,38,0.16,39,0.21,40,0.112,41,0.066,42,3.091,56,0.645,88,0.029,89,0.029,113,0.376,152,0.808,177,2.283,193,2.283,195,2.038,237,2.578,278,1.664,284,1.111,296,3.311,384,2.578,385,2.578,455,2.899,518,4.687,520,4.64,527,3.149,528,3.149,529,4.193,530,3.149,531,4.193,532,3.149,533,3.149,534,3.149,535,3.149,536,3.149,537,3.149]],["title/directives/SpinningIconDirective.html",[52,0.402,82,0.921]],["body/directives/SpinningIconDirective.html",[2,0.222,3,0.222,7,0.222,9,0.855,10,1,17,0.336,21,1.383,24,0.489,26,0.891,27,0.041,30,1.71,36,0.789,38,0.169,39,0.222,40,0.118,41,0.069,52,0.673,56,0.891,73,1.47,74,2.144,82,1.383,83,2.384,88,0.03,89,0.03,92,1.117,113,0.397,117,1,134,1.813,139,2.341,152,1.117,156,3.16,168,2.675,260,1.813,284,1.536,368,1.451,370,2.114,478,2.341,479,3.613,480,3.407,481,3.613,483,3.059,487,2.341,538,3.33,539,3.613,540,3.33,541,4.351,542,3.33,543,3.33,544,3.33,545,3.572,546,4.351,547,4.351,548,3.572]],["title/pipes/ToId.html",[220,1.782,279,1.782]],["body/pipes/ToId.html",[2,0.251,3,0.251,7,0.251,9,0.968,21,1.199,24,0.38,26,0.965,27,0.041,32,0.968,33,2.29,35,1.498,36,0.684,38,0.191,39,0.251,40,0.134,41,0.079,56,1.052,86,1.663,88,0.032,89,0.032,113,0.45,152,0.968,175,2.053,181,1.644,220,3.31,278,1.331,279,3.16,284,1.331,388,3.312,549,3.772,550,5.54,551,4.712,552,4.712,553,4.712,554,3.772,555,4.712,556,4.712,557,4.712,558,3.772,559,3.772,560,3.772]],["title/directives/ValidatorsDirective.html",[52,0.402,85,0.921]],["body/directives/ValidatorsDirective.html",[2,0.201,3,0.201,7,0.201,9,0.773,10,0.935,17,0.304,21,1.294,24,0.498,26,0.833,27,0.041,30,1.436,32,1.268,36,0.546,38,0.153,39,0.201,40,0.107,41,0.096,51,1.595,52,0.754,56,0.616,85,1.294,86,1.918,88,0.028,89,0.028,92,1.045,113,0.359,117,0.935,128,1.727,152,0.773,154,2.4,181,1.774,258,2.117,260,1.64,269,2.502,270,3.341,284,1.063,285,2.861,368,1.312,370,2.4,416,3.341,462,3.036,477,2.216,478,2.117,479,3.471,480,3.241,481,3.471,483,2.861,485,3.784,486,2.472,487,2.117,545,3.341,548,3.341,561,3.011,562,4.938,563,4.938,564,4.07,565,4.07,566,3.011,567,3.341,568,3.341,569,4.07,570,3.011,571,4.07,572,4.07,573,3.011,574,3.011,575,3.011,576,4.07,577,4.07]],["title/dependencies.html",[92,0.896,578,1.983]],["body/dependencies.html",[27,0.041,39,0.263,88,0.033,89,0.033,92,1.013,94,2.548,106,3.406,107,2.98,223,3.24,242,2.427,243,2.774,335,2.774,383,3.978,579,3.946,580,5.926,581,3.946,582,3.946,583,3.946,584,3.946,585,3.946,586,2.774,587,3.24,588,3.946,589,3.946,590,3.24,591,3.946,592,3.946,593,3.24,594,3.946,595,3.946,596,3.946,597,3.946,598,3.946]],["title/interfaces/differences.html",[148,1.023,477,1.578]],["body/interfaces/differences.html",[2,0.118,3,0.118,7,0.118,11,0.623,17,0.178,18,1.399,20,1.086,24,0.342,26,1.087,27,0.042,28,1.086,32,0.984,33,1.34,35,1.078,36,0.615,38,0.172,39,0.118,40,0.136,41,0.037,53,1.202,56,0.564,88,0.036,89,0.019,113,0.211,148,0.973,151,3.437,154,2.376,166,1.242,175,1.67,183,2.14,200,1.34,235,1.45,269,1.695,278,0.973,368,0.77,370,0.858,380,2.263,385,1.086,388,1.242,418,3.145,430,1.45,442,1.45,455,2.085,462,2.555,477,2.818,568,2.263,586,1.242,587,2.263,599,1.767,600,3.391,601,4.155,602,4.155,603,4.155,604,1.767,605,3.831,606,1.767,607,3.831,608,1.767,609,2.757,610,1.767,611,1.767,612,1.767,613,1.767,614,1.767,615,1.767,616,2.757,617,2.757,618,3.391,619,1.767,620,2.757,621,1.767,622,1.767,623,1.767,624,1.767,625,2.757,626,1.767,627,1.767,628,1.767,629,1.767,630,1.767,631,1.767,632,1.767,633,1.767,634,1.767,635,1.767,636,1.767,637,1.767,638,1.767,639,1.767,640,1.767,641,1.767,642,1.767,643,1.767,644,3.391,645,4.155,646,1.767,647,1.767,648,1.767,649,1.767,650,1.767,651,1.767,652,4.403,653,1.767,654,1.767,655,1.767,656,1.767,657,1.767,658,1.767,659,1.767,660,1.767,661,1.767,662,1.767,663,1.767,664,3.391,665,3.831,666,2.757,667,1.767,668,1.767,669,1.767,670,2.757,671,1.767,672,2.757,673,1.767,674,1.767,675,2.757,676,1.767,677,1.767,678,1.767,679,4.155,680,1.767,681,3.391,682,1.767,683,1.767,684,1.767,685,1.767,686,1.767,687,1.767,688,1.767,689,1.767,690,1.767,691,1.767,692,1.767,693,1.767,694,1.767,695,1.767,696,1.767,697,1.767,698,1.767,699,2.757,700,2.757,701,1.767,702,1.767,703,1.767,704,1.767,705,1.767,706,1.767,707,1.767,708,1.767,709,1.767,710,1.767,711,1.767,712,1.45,713,1.767]],["title/index.html",[17,0.244,539,1.698,714,2.416]],["body/index.html",[0,0.363,1,1.058,27,0.041,38,0.27,40,0.172,41,0.069,45,2.733,58,1.058,88,0.03,89,0.03,90,1.899,91,1.813,93,2.047,94,1.618,95,2.047,100,1.618,105,3.572,106,2.341,107,2.047,108,2.341,111,2.733,180,2.047,295,2.341,396,2.733,448,2.733,477,1.813,539,3.059,567,3.979,578,2.733,586,2.341,590,3.572,593,4.219,715,5.332,716,3.33,717,4.351,718,3.33,719,3.33,720,4.351,721,3.33,722,3.33,723,4.846,724,4.351,725,3.33,726,3.33,727,3.33,728,5.139,729,3.33,730,3.33,731,3.33,732,3.33,733,3.33,734,4.846,735,3.33,736,4.351,737,4.351,738,4.351,739,3.33,740,3.33,741,4.846,742,4.351,743,3.33,744,3.33,745,3.33,746,3.33,747,3.33,748,3.33,749,3.33,750,3.33,751,3.33,752,3.33,753,3.33,754,3.33,755,3.33]],["title/modules.html",[90,1.554]],["body/modules.html",[27,0.036,88,0.036,89,0.036,90,1.791,91,2.488,100,2.22,107,3.251,255,4.341,756,5.288,757,5.288]],["title/overview.html",[758,3.255]],["body/overview.html",[0,0.237,1,1.702,27,0.041,40,0.101,41,0.059,49,1.004,52,0.395,58,1.702,60,1.89,62,1.89,64,2.098,66,1.89,68,1.89,70,1.702,72,1.423,76,1.702,79,1.702,82,1.702,85,1.702,88,0.027,89,0.027,90,1.535,91,2.915,92,0.731,93,1.75,94,1.383,95,1.75,96,2.336,97,2.336,98,2.336,99,2.336,100,2.963,101,2.753,102,2,103,2,148,1.004,217,2.336,218,2.336,219,2.336,220,3.292,278,1.004,279,1.75,712,3.215,758,2.336,759,2.846,760,2.846,761,2.846,762,3.916]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.2.5",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":712,"title":{},"body":{"interfaces/differences.html":{},"overview.html":{}}}],["12",{"_index":433,"title":{},"body":{"classes/Password.html":{}}}],["12):string",{"_index":444,"title":{},"body":{"classes/Password.html":{}}}],["2",{"_index":759,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["2.5.6",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":507,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["4",{"_index":762,"title":{},"body":{"overview.html":{}}}],["4.1.1",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["4000",{"_index":629,"title":{},"body":{"interfaces/differences.html":{}}}],["5",{"_index":761,"title":{},"body":{"overview.html":{}}}],["500",{"_index":272,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["500m",{"_index":271,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["6.0.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":760,"title":{},"body":{"overview.html":{}}}],["_",{"_index":610,"title":{},"body":{"interfaces/differences.html":{}}}],["_.isequal(valu",{"_index":643,"title":{},"body":{"interfaces/differences.html":{}}}],["_.reduce(a",{"_index":641,"title":{},"body":{"interfaces/differences.html":{}}}],["_.reduce(b",{"_index":658,"title":{},"body":{"interfaces/differences.html":{}}}],["_notif",{"_index":398,"title":{},"body":{"interfaces/Notification.html":{}}}],["_notif.msg",{"_index":401,"title":{},"body":{"interfaces/Notification.html":{}}}],["_notif.titl",{"_index":403,"title":{},"body":{"interfaces/Notification.html":{}}}],["_open",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["a.hasownproperty(key",{"_index":659,"title":{},"body":{"interfaces/differences.html":{}}}],["a[key",{"_index":646,"title":{},"body":{"interfaces/differences.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_",{"_index":446,"title":{},"body":{"classes/Password.html":{}}}],["absolut",{"_index":495,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["abstractcontrol",{"_index":435,"title":{},"body":{"classes/Password.html":{}}}],["ac",{"_index":437,"title":{},"body":{"classes/Password.html":{}}}],["ac.value.passphras",{"_index":439,"title":{},"body":{"classes/Password.html":{}}}],["ac.value.recheckpassphras",{"_index":440,"title":{},"body":{"classes/Password.html":{}}}],["access",{"_index":721,"title":{},"body":{"index.html":{}}}],["accueil",{"_index":185,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["action",{"_index":365,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual_compon",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["add",{"_index":180,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"index.html":{}}}],["addev",{"_index":387,"title":{},"body":{"interfaces/Notification.html":{}}}],["adipis",{"_index":124,"title":{},"body":{"components/BoxComponent.html":{}}}],["afterviewcheck",{"_index":485,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["agent",{"_index":724,"title":{},"body":{"index.html":{}}}],["allow",{"_index":720,"title":{},"body":{"index.html":{}}}],["amet",{"_index":122,"title":{},"body":{"components/BoxComponent.html":{}}}],["angular/anim",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{}}}],["angular/form",{"_index":335,"title":{},"body":{"components/FormErrorsComponent.html":{},"classes/Password.html":{},"dependencies.html":{}}}],["angular/http",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":586,"title":{},"body":{"dependencies.html":{},"interfaces/differences.html":{},"index.html":{}}}],["angular2csv",{"_index":612,"title":{},"body":{"interfaces/differences.html":{}}}],["angular2csv(row",{"_index":684,"title":{},"body":{"interfaces/differences.html":{}}}],["anim",{"_index":546,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["api",{"_index":616,"title":{},"body":{"interfaces/differences.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["app.compon",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"index.html":{},"overview.html":{}}}],["appear",{"_index":571,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["applic",{"_index":717,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":157,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["argument",{"_index":140,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["around",{"_index":450,"title":{},"body":{"components/PopoverComponent.html":{}}}],["array",{"_index":154,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["attach",{"_index":319,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["au",{"_index":341,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["autoexport",{"_index":751,"title":{},"body":{"index.html":{}}}],["automat",{"_index":752,"title":{},"body":{"index.html":{}}}],["b",{"_index":640,"title":{},"body":{"interfaces/differences.html":{}}}],["b.hasownproperty(key",{"_index":642,"title":{},"body":{"interfaces/differences.html":{}}}],["b[key",{"_index":644,"title":{},"body":{"interfaces/differences.html":{}}}],["badinput",{"_index":577,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["base",{"_index":716,"title":{},"body":{"index.html":{}}}],["besid",{"_index":207,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["between",{"_index":600,"title":{},"body":{"interfaces/differences.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"interfaces/differences.html":{}}}],["bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/PopoverComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":243,"title":{},"body":{"modules/CoreModule.html":{},"components/PopoverComponent.html":{},"dependencies.html":{}}}],["bottom",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["box",{"_index":115,"title":{},"body":{"components/BoxComponent.html":{}}}],["box'},{'nam",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["box.component.html",{"_index":127,"title":{},"body":{"components/BoxComponent.html":{}}}],["box.component.scss",{"_index":126,"title":{},"body":{"components/BoxComponent.html":{}}}],["box/box.compon",{"_index":234,"title":{},"body":{"modules/CoreModule.html":{}}}],["boxcompon",{"_index":58,"title":{"components/BoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":757,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["bubbl",{"_index":133,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["build",{"_index":736,"title":{},"body":{"index.html":{}}}],["button",{"_index":425,"title":{},"body":{"classes/Password.html":{}}}],["call",{"_index":135,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["caractèr",{"_index":344,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["chang",{"_index":285,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ValidatorsDirective.html":{}}}],["changes.debouncetim",{"_index":307,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["changes.debouncetime.currentvalu",{"_index":310,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["changes['open'].currentvalu",{"_index":473,"title":{},"body":{"components/PopoverComponent.html":{}}}],["charact",{"_index":556,"title":{},"body":{"pipes/ToId.html":{}}}],["charset",{"_index":445,"title":{},"body":{"classes/Password.html":{}}}],["check",{"_index":416,"title":{},"body":{"classes/Password.html":{},"directives/ValidatorsDirective.html":{}}}],["child",{"_index":137,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["class",{"_index":41,"title":{"classes/Password.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{},"overview.html":{}}}],["cleartimeout(notif.timeout",{"_index":405,"title":{},"body":{"interfaces/Notification.html":{}}}],["click",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["click(ev",{"_index":141,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["click?:array|str",{"_index":178,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["clickstoppropag",{"_index":72,"title":{"directives/ClickStopPropagation.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["close",{"_index":296,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["closehint",{"_index":216,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["cluster_appmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["code",{"_index":745,"title":{},"body":{"index.html":{}}}],["cog",{"_index":186,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["column",{"_index":665,"title":{},"body":{"interfaces/differences.html":{}}}],["column.nam",{"_index":670,"title":{},"body":{"interfaces/differences.html":{}}}],["column.prop",{"_index":677,"title":{},"body":{"interfaces/differences.html":{}}}],["columns.foreach((column",{"_index":676,"title":{},"body":{"interfaces/differences.html":{}}}],["commit",{"_index":750,"title":{},"body":{"index.html":{}}}],["commonli",{"_index":614,"title":{},"body":{"interfaces/differences.html":{}}}],["commonmodul",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{}}}],["commonservic",{"_index":235,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/differences.html":{}}}],["compat",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":386,"title":{},"body":{"interfaces/Notification.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"index.html":{},"overview.html":{}}}],["component,input",{"_index":333,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["component_templ",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["conf",{"_index":184,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["configur",{"_index":149,"title":{"interfaces/Configuration.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["confirmpassword",{"_index":438,"title":{},"body":{"classes/Password.html":{}}}],["consectetur",{"_index":123,"title":{},"body":{"components/BoxComponent.html":{}}}],["console.log(this.popov",{"_index":474,"title":{},"body":{"components/PopoverComponent.html":{}}}],["const",{"_index":183,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"classes/Password.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["constructor",{"_index":368,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["constructor(priv",{"_index":487,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["constructor(publ",{"_index":201,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/SidePanelComponent.html":{}}}],["constructor(render",{"_index":478,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["constructor(sidepanel",{"_index":524,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["contain",{"_index":116,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Notification.html":{}}}],["content",{"_index":363,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Notification.html":{}}}],["context",{"_index":520,"title":{},"body":{"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["contient",{"_index":340,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["control",{"_index":193,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["core",{"_index":590,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/dist",{"_index":734,"title":{},"body":{"index.html":{}}}],["coremodul",{"_index":100,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["correspondr",{"_index":348,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["coverag",{"_index":746,"title":{},"body":{"index.html":{}}}],["createsubsript",{"_index":263,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["css",{"_index":194,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["csv",{"_index":587,"title":{},"body":{"dependencies.html":{},"interfaces/differences.html":{}}}],["cursor",{"_index":497,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["d",{"_index":634,"title":{},"body":{"interfaces/differences.html":{}}}],["d===0",{"_index":638,"title":{},"body":{"interfaces/differences.html":{}}}],["databl",{"_index":661,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable._internalcolumn",{"_index":668,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable.column",{"_index":667,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable.rows.map((row",{"_index":674,"title":{},"body":{"interfaces/differences.html":{}}}],["datatablecompon",{"_index":663,"title":{},"body":{"interfaces/differences.html":{}}}],["de",{"_index":351,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["debounc",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["debounceinputdirect",{"_index":76,"title":{"directives/DebounceInputDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["debouncetim",{"_index":267,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["debouncetime(this.debouncetim",{"_index":304,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["decimalsepar",{"_index":687,"title":{},"body":{"interfaces/differences.html":{}}}],["declar",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":466,"title":{},"body":{"components/PopoverComponent.html":{}}}],["deeper",{"_index":648,"title":{},"body":{"interfaces/differences.html":{}}}],["default",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["defi",{"_index":715,"title":{},"body":{"index.html":{}}}],["defin",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["delay",{"_index":391,"title":{},"body":{"interfaces/Notification.html":{}}}],["delet",{"_index":408,"title":{},"body":{"interfaces/Notification.html":{}}}],["delete(id",{"_index":409,"title":{},"body":{"interfaces/Notification.html":{}}}],["deleteal",{"_index":413,"title":{},"body":{"interfaces/Notification.html":{}}}],["depend",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":269,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["descript",{"_index":113,"title":{},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["description?:str",{"_index":174,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["destruct",{"_index":289,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["develop",{"_index":735,"title":{},"body":{"index.html":{}}}],["die",{"_index":297,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["differ",{"_index":477,"title":{"interfaces/differences.html":{}},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{}}}],["differences(a",{"_index":639,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.different.length",{"_index":635,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.missing_from_first.length",{"_index":636,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.missing_from_second.length",{"_index":637,"title":{},"body":{"interfaces/differences.html":{}}}],["direct",{"_index":52,"title":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"overview.html":{}}}],["directives/debounceinput.direct",{"_index":244,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/showpassword.direct",{"_index":248,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/spinningicon.direct",{"_index":245,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/stoppropagation.direct",{"_index":246,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/validators.direct",{"_index":247,"title":{},"body":{"modules/CoreModule.html":{}}}],["displat",{"_index":173,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["display",{"_index":114,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["div",{"_index":488,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["doc",{"_index":747,"title":{},"body":{"index.html":{}}}],["documentaion",{"_index":743,"title":{},"body":{"index.html":{}}}],["doit",{"_index":347,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["dolor",{"_index":120,"title":{},"body":{"components/BoxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["dynam",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":166,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/differences.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/ValidatorsDirective.html":{}}}],["elementref",{"_index":481,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["elit",{"_index":125,"title":{},"body":{"components/BoxComponent.html":{}}}],["email",{"_index":355,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["emit",{"_index":274,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["encapsul",{"_index":318,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["equal",{"_index":631,"title":{},"body":{"interfaces/differences.html":{}}}],["equalityobjects(a,b",{"_index":632,"title":{},"body":{"interfaces/differences.html":{}}}],["errors.compon",{"_index":229,"title":{},"body":{"modules/CoreModule.html":{}}}],["errors.component.html",{"_index":322,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.scss",{"_index":321,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.t",{"_index":317,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.ts:23",{"_index":329,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.ts:27",{"_index":332,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors/form",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{}}}],["eval",{"_index":725,"title":{},"body":{"index.html":{}}}],["event",{"_index":134,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["event.preventdefault",{"_index":314,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["event.stoppropag",{"_index":147,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["event.typ",{"_index":212,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["eventemitt",{"_index":160,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{}}}],["exampl",{"_index":117,"title":{},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{},"overview.html":{}}}],["exportas:'spin",{"_index":544,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["exportascsv(datat",{"_index":662,"title":{},"body":{"interfaces/differences.html":{}}}],["ey",{"_index":491,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["fa",{"_index":168,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["fals",{"_index":455,"title":{},"body":{"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["fb.group",{"_index":419,"title":{},"body":{"classes/Password.html":{}}}],["fetch",{"_index":390,"title":{},"body":{"interfaces/Notification.html":{}}}],["fieldsepar",{"_index":685,"title":{},"body":{"interfaces/differences.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["filenam",{"_index":664,"title":{},"body":{"interfaces/differences.html":{}}}],["filter((",{"_index":671,"title":{},"body":{"interfaces/differences.html":{}}}],["first",{"_index":568,"title":{},"body":{"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["flat",{"_index":697,"title":{},"body":{"interfaces/differences.html":{}}}],["flat(obj",{"_index":700,"title":{},"body":{"interfaces/differences.html":{}}}],["flat(obj[key",{"_index":704,"title":{},"body":{"interfaces/differences.html":{}}}],["flatten(obj",{"_index":698,"title":{},"body":{"interfaces/differences.html":{}}}],["flow",{"_index":292,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["folder",{"_index":744,"title":{},"body":{"index.html":{}}}],["form",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{}}}],["formcontrol",{"_index":334,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["formerror",{"_index":320,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["formerrors'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["formerrorscompon",{"_index":60,"title":{"components/FormErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["formpassphrases.valid",{"_index":427,"title":{},"body":{"classes/Password.html":{}}}],["forroot",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{}}}],["front.gitimport",{"_index":732,"title":{},"body":{"index.html":{}}}],["function",{"_index":175,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["g",{"_index":167,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["gener",{"_index":742,"title":{},"body":{"index.html":{}}}],["generatepassword",{"_index":428,"title":{},"body":{"classes/Password.html":{}}}],["generatepassword(length",{"_index":429,"title":{},"body":{"classes/Password.html":{}}}],["generatepassword(length:numb",{"_index":443,"title":{},"body":{"classes/Password.html":{}}}],["get",{"_index":714,"title":{"index.html":{}},"body":{}}],["gi",{"_index":560,"title":{},"body":{"pipes/ToId.html":{}}}],["git@github.com:defi",{"_index":729,"title":{},"body":{"index.html":{}}}],["go",{"_index":189,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["goodinput",{"_index":576,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["goodinput/badinout",{"_index":572,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["goto(data",{"_index":202,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["graphql",{"_index":618,"title":{},"body":{"interfaces/differences.html":{}}}],["happen",{"_index":136,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["header",{"_index":380,"title":{},"body":{"interfaces/Notification.html":{},"interfaces/differences.html":{}}}],["hey",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["hint",{"_index":206,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["hintclass",{"_index":197,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["home",{"_index":169,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["host",{"_index":486,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["hostel",{"_index":480,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["hostlisten",{"_index":139,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["hostlistener(\"click",{"_index":144,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["hostlistener('keyup",{"_index":312,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["hover",{"_index":209,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["htmlid",{"_index":551,"title":{},"body":{"pipes/ToId.html":{}}}],["http://localhost:3000",{"_index":626,"title":{},"body":{"interfaces/differences.html":{}}}],["i'm",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/PopoverComponent.html":{}}}],["i\\'m",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":156,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["icon?:str",{"_index":170,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["icon]'},{'nam",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["id",{"_index":171,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{}}}],["id?:str",{"_index":172,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["if(input.typ",{"_index":501,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["if(typeof",{"_index":702,"title":{},"body":{"interfaces/differences.html":{}}}],["ignor",{"_index":678,"title":{},"body":{"interfaces/differences.html":{}}}],["implement",{"_index":181,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["informatiqu",{"_index":730,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":496,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["init",{"_index":569,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["inject",{"_index":278,"title":{"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{},"overview.html":{}}}],["input",{"_index":128,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["input(\"conf",{"_index":198,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["input('model",{"_index":336,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["input('nam",{"_index":371,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input('open",{"_index":469,"title":{},"body":{"components/PopoverComponent.html":{}}}],["input('patternnam",{"_index":337,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["input('plac",{"_index":470,"title":{},"body":{"components/PopoverComponent.html":{}}}],["input.typ",{"_index":502,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["input]'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["instal",{"_index":718,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":295,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["instanci",{"_index":623,"title":{},"body":{"interfaces/differences.html":{}}}],["interact",{"_index":176,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["interfac",{"_index":148,"title":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{},"overview.html":{}}}],["interv",{"_index":619,"title":{},"body":{"interfaces/differences.html":{}}}],["invalid",{"_index":327,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["ipsum",{"_index":119,"title":{},"body":{"components/BoxComponent.html":{}}}],["item",{"_index":164,"title":{"interfaces/Item.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{}}}],["iterablediff",{"_index":381,"title":{},"body":{"interfaces/Notification.html":{}}}],["join('').replace(/[`~!@#$%^&*()_",{"_index":559,"title":{},"body":{"pipes/ToId.html":{}}}],["js",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":739,"title":{},"body":{"index.html":{}}}],["json.stringify(obj",{"_index":708,"title":{},"body":{"interfaces/differences.html":{}}}],["key",{"_index":462,"title":{},"body":{"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["keylisten",{"_index":256,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyup",{"_index":268,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyup(ev",{"_index":276,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyupevent(ev",{"_index":313,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["la",{"_index":349,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["launch",{"_index":567,"title":{},"body":{"directives/ValidatorsDirective.html":{},"index.html":{}}}],["left",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["length",{"_index":432,"title":{},"body":{"classes/Password.html":{}}}],["librari",{"_index":737,"title":{},"body":{"index.html":{}}}],["link",{"_index":208,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["list",{"_index":153,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["list?:configur",{"_index":182,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["liter",{"_index":459,"title":{},"body":{"components/PopoverComponent.html":{}}}],["load",{"_index":370,"title":{},"body":{"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["localstorag",{"_index":392,"title":{},"body":{"interfaces/Notification.html":{}}}],["localstorage.getitem(\"notificationsdelay",{"_index":394,"title":{},"body":{"interfaces/Notification.html":{}}}],["lodash",{"_index":611,"title":{},"body":{"interfaces/differences.html":{}}}],["logo",{"_index":364,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lorem",{"_index":118,"title":{},"body":{"components/BoxComponent.html":{}}}],["main",{"_index":159,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["major",{"_index":755,"title":{},"body":{"index.html":{}}}],["make",{"_index":448,"title":{},"body":{"components/PopoverComponent.html":{},"index.html":{}}}],["map((column",{"_index":669,"title":{},"body":{"interfaces/differences.html":{}}}],["match",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchpassword",{"_index":426,"title":{},"body":{"classes/Password.html":{}}}],["matchpassword(ac",{"_index":434,"title":{},"body":{"classes/Password.html":{}}}],["matchpassword.matchpassword",{"_index":422,"title":{},"body":{"classes/Password.html":{}}}],["member",{"_index":624,"title":{},"body":{"interfaces/differences.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["method",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"directives/DebounceInputDirective.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["minor",{"_index":754,"title":{},"body":{"index.html":{}}}],["miss",{"_index":607,"title":{},"body":{"interfaces/differences.html":{}}}],["missing_from_first",{"_index":602,"title":{},"body":{"interfaces/differences.html":{}}}],["missing_from_second",{"_index":603,"title":{},"body":{"interfaces/differences.html":{}}}],["model",{"_index":323,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.maxlength.requiredlength",{"_index":346,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.minlength.requiredlength",{"_index":343,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.pattern.requiredpattern",{"_index":338,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["modul",{"_index":90,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":224,"title":{},"body":{"modules/CoreModule.html":{}}}],["moin",{"_index":342,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["mouseov",{"_index":213,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["ms",{"_index":620,"title":{},"body":{"interfaces/differences.html":{}}}],["msg",{"_index":374,"title":{},"body":{"interfaces/Notification.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["navbar",{"_index":362,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["navbar.component.html",{"_index":367,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":366,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.compon",{"_index":226,"title":{},"body":{"modules/CoreModule.html":{}}}],["navbarcompon",{"_index":62,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["new",{"_index":200,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["newobj",{"_index":699,"title":{},"body":{"interfaces/differences.html":{}}}],["newobj[key]=obj[key",{"_index":705,"title":{},"body":{"interfaces/differences.html":{}}}],["ng",{"_index":242,"title":{},"body":{"modules/CoreModule.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"dependencies.html":{}}}],["ngafterviewcheck",{"_index":562,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["ngbmodul",{"_index":241,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngbmodule.forroot",{"_index":251,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngbpopov",{"_index":465,"title":{},"body":{"components/PopoverComponent.html":{}}}],["ngmodel",{"_index":325,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["ngmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{}}}],["ngonchang",{"_index":264,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["ngonchanges(chang",{"_index":281,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["ngondestroy",{"_index":265,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["ngoninit",{"_index":266,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["ngx",{"_index":593,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["non",{"_index":683,"title":{},"body":{"interfaces/differences.html":{}}}],["notif",{"_index":372,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/Notification.html":{}}}],["notif.id",{"_index":400,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.msg",{"_index":402,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.timeout",{"_index":406,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.titl",{"_index":404,"title":{},"body":{"interfaces/Notification.html":{}}}],["notifications'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["notifications/notifications.compon",{"_index":230,"title":{},"body":{"modules/CoreModule.html":{}}}],["notificationscompon",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["notificationsdelay",{"_index":393,"title":{},"body":{"interfaces/Notification.html":{}}}],["notificationsservic",{"_index":239,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Notification.html":{}}}],["npm",{"_index":728,"title":{},"body":{"index.html":{}}}],["null",{"_index":442,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["number",{"_index":430,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["obj[key",{"_index":703,"title":{},"body":{"interfaces/differences.html":{}}}],["object",{"_index":151,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/differences.html":{}}}],["object.keys(obj).map(key",{"_index":701,"title":{},"body":{"interfaces/differences.html":{}}}],["obligatoir",{"_index":339,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["observ",{"_index":288,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["onchang",{"_index":259,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["onclick(ev",{"_index":146,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["ondestroy",{"_index":258,"title":{},"body":{"directives/DebounceInputDirective.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["oninit",{"_index":257,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["oninputchang",{"_index":563,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["oninputchange($ev",{"_index":573,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["open",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["open(templ",{"_index":529,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["open/clos",{"_index":195,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["openhint",{"_index":215,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["openhint/closehint",{"_index":196,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["option",{"_index":152,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["oui",{"_index":682,"title":{},"body":{"interfaces/differences.html":{}}}],["out",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["output",{"_index":161,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{}}}],["output('rout",{"_index":199,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["outsid",{"_index":177,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["overrid",{"_index":330,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["overview",{"_index":758,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":578,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":506,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["panel.compon",{"_index":233,"title":{},"body":{"modules/CoreModule.html":{}}}],["panel.component.html",{"_index":523,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.scss",{"_index":522,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.t",{"_index":517,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.ts:27",{"_index":525,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":526,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel/sid",{"_index":232,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["paramet",{"_index":284,"title":{},"body":{"directives/DebounceInputDirective.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["parent",{"_index":508,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["pass",{"_index":352,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["passphras",{"_index":417,"title":{},"body":{"classes/Password.html":{}}}],["password",{"_index":414,"title":{"classes/Password.html":{}},"body":{"classes/Password.html":{},"directives/ShowPasswordDirective.html":{}}}],["password]'},{'nam",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["patch",{"_index":753,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":331,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["patternnam",{"_index":324,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["phrase",{"_index":350,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["pipe",{"_index":279,"title":{"pipes/ToId.html":{}},"body":{"directives/DebounceInputDirective.html":{},"pipes/ToId.html":{},"overview.html":{}}}],["pipe/toid.pip",{"_index":249,"title":{},"body":{"modules/CoreModule.html":{}}}],["pipetransform",{"_index":557,"title":{},"body":{"pipes/ToId.html":{}}}],["placement",{"_index":454,"title":{},"body":{"components/PopoverComponent.html":{}}}],["placment",{"_index":457,"title":{},"body":{"components/PopoverComponent.html":{}}}],["plu",{"_index":345,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["pointer",{"_index":498,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["popop",{"_index":449,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popov",{"_index":451,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["popover.component.html",{"_index":453,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover.component.scss",{"_index":452,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover/popover.compon",{"_index":250,"title":{},"body":{"modules/CoreModule.html":{}}}],["popovercompon",{"_index":66,"title":{"components/PopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["posit",{"_index":494,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["possibl",{"_index":179,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["present",{"_index":165,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["prevent",{"_index":132,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["privat",{"_index":260,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["promise((resolv",{"_index":693,"title":{},"body":{"interfaces/differences.html":{}}}],["prop",{"_index":605,"title":{},"body":{"interfaces/differences.html":{}}}],["propag",{"_index":138,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["propagation]'},{'nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["propnam",{"_index":472,"title":{},"body":{"components/PopoverComponent.html":{}}}],["provid",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"overview.html":{}}}],["providers/common.servic",{"_index":236,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers/notifications.servic",{"_index":240,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers/sidebar.servic",{"_index":163,"title":{},"body":{"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{}}}],["providers/sidepanel.servic",{"_index":238,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["public",{"_index":145,"title":{},"body":{"directives/ClickStopPropagation.html":{},"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["public_api",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["pure",{"_index":552,"title":{},"body":{"pipes/ToId.html":{}}}],["put",{"_index":565,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["quotestr",{"_index":686,"title":{},"body":{"interfaces/differences.html":{}}}],["r",{"_index":675,"title":{},"body":{"interfaces/differences.html":{}}}],["r[prop",{"_index":681,"title":{},"body":{"interfaces/differences.html":{}}}],["recheck",{"_index":423,"title":{},"body":{"classes/Password.html":{}}}],["recheckpassphras",{"_index":421,"title":{},"body":{"classes/Password.html":{}}}],["reflect",{"_index":461,"title":{},"body":{"components/PopoverComponent.html":{}}}],["refresh",{"_index":621,"title":{},"body":{"interfaces/differences.html":{}}}],["refreshtokeninterv",{"_index":622,"title":{},"body":{"interfaces/differences.html":{}}}],["regist",{"_index":291,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["reject",{"_index":694,"title":{},"body":{"interfaces/differences.html":{}}}],["remov",{"_index":388,"title":{},"body":{"interfaces/Notification.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["removeev",{"_index":389,"title":{},"body":{"interfaces/Notification.html":{}}}],["render",{"_index":483,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["renderer2",{"_index":479,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["replace(/\\\"([^\"]+)\\\":/g",{"_index":711,"title":{},"body":{"interfaces/differences.html":{}}}],["replace(/\\\\\"/g",{"_index":709,"title":{},"body":{"interfaces/differences.html":{}}}],["replace(/\\uffff/g",{"_index":713,"title":{},"body":{"interfaces/differences.html":{}}}],["repositori",{"_index":722,"title":{},"body":{"index.html":{}}}],["reset",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["resolv",{"_index":696,"title":{},"body":{"interfaces/differences.html":{}}}],["result",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.differ",{"_index":650,"title":{},"body":{"interfaces/differences.html":{}}}],["result.different.concat(_.map(deeper.differ",{"_index":651,"title":{},"body":{"interfaces/differences.html":{}}}],["result.different.push(key",{"_index":647,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first",{"_index":655,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first.concat(_.map(deeper.missing_from_first",{"_index":656,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first.push(key",{"_index":660,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second",{"_index":653,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second.concat(_.map(deeper.missing_from_second",{"_index":654,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second.push(key",{"_index":657,"title":{},"body":{"interfaces/differences.html":{}}}],["return",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["right",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["rootmodul",{"_index":733,"title":{},"body":{"index.html":{}}}],["rout",{"_index":190,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["row",{"_index":673,"title":{},"body":{"interfaces/differences.html":{}}}],["row[prop",{"_index":679,"title":{},"body":{"interfaces/differences.html":{}}}],["run",{"_index":741,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":383,"title":{},"body":{"interfaces/Notification.html":{},"dependencies.html":{}}}],["rxjs/operators/debouncetim",{"_index":300,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["rxjs/subject",{"_index":298,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["rxjs/subscript",{"_index":299,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["s",{"_index":726,"title":{},"body":{"index.html":{}}}],["same",{"_index":418,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["sandbox",{"_index":740,"title":{},"body":{"index.html":{}}}],["script",{"_index":738,"title":{},"body":{"index.html":{}}}],["second",{"_index":609,"title":{},"body":{"interfaces/differences.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["set",{"_index":187,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["settimeout",{"_index":695,"title":{},"body":{"interfaces/differences.html":{}}}],["share",{"_index":613,"title":{},"body":{"interfaces/differences.html":{}}}],["show",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{}}}],["showlabel",{"_index":688,"title":{},"body":{"interfaces/differences.html":{}}}],["showpassworddirect",{"_index":79,"title":{"directives/ShowPasswordDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["showtitl",{"_index":689,"title":{},"body":{"interfaces/differences.html":{}}}],["side",{"_index":231,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["sidebar",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{}}}],["sidebar.component.html",{"_index":191,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["sidebar.component.scss",{"_index":192,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["sidebar/sidebar.compon",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidebarcompon",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["sidebarservic",{"_index":162,"title":{"injectables/SideBarService.html":{}},"body":{"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{},"injectables/SideBarService.html":{}}}],["sidepanel",{"_index":518,"title":{},"body":{"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["sidepanel'},{'nam",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["sidepanelcompon",{"_index":68,"title":{"components/SidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["sidepanelservic",{"_index":237,"title":{"injectables/SidePanelService.html":{}},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["simplechang",{"_index":282,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["sit",{"_index":121,"title":{},"body":{"components/BoxComponent.html":{}}}],["slash",{"_index":492,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["sp",{"_index":519,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["sp.open(templ",{"_index":521,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["special",{"_index":555,"title":{},"body":{"pipes/ToId.html":{}}}],["specif",{"_index":748,"title":{},"body":{"index.html":{}}}],["spin",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["spinner",{"_index":547,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["spinningicondirect",{"_index":82,"title":{"directives/SpinningIconDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"overview.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:10",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/core/box/box.component.t",{"_index":112,"title":{},"body":{"components/BoxComponent.html":{}}}],["src/modules/core/box/box.component.ts:17",{"_index":129,"title":{},"body":{"components/BoxComponent.html":{}}}],["src/modules/core/core.module.t",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/modules/core/directives/debounceinput.directive.t",{"_index":254,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:18",{"_index":273,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:22",{"_index":275,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:26",{"_index":293,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:30",{"_index":294,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:37",{"_index":290,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:40",{"_index":280,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:46",{"_index":283,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:52",{"_index":286,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:60",{"_index":277,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.t",{"_index":476,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.ts:12",{"_index":482,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.ts:19",{"_index":484,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.t",{"_index":538,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:16",{"_index":540,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:23",{"_index":542,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:28",{"_index":543,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/stoppropagation.directive.t",{"_index":131,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["src/modules/core/directives/stoppropagation.directive.ts:18",{"_index":142,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["src/modules/core/directives/validators.directive.t",{"_index":561,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:18",{"_index":564,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:28",{"_index":566,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:35",{"_index":570,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/form",{"_index":316,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["src/modules/core/navbar/navbar.component.t",{"_index":361,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/modules/core/navbar/navbar.component.ts:30",{"_index":369,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/modules/core/pipe/toid.pipe.t",{"_index":549,"title":{},"body":{"pipes/ToId.html":{}}}],["src/modules/core/pipe/toid.pipe.ts:13",{"_index":554,"title":{},"body":{"pipes/ToId.html":{}}}],["src/modules/core/popover/popover.component.t",{"_index":447,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:22",{"_index":456,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:26",{"_index":458,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:30",{"_index":464,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:31",{"_index":468,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:35",{"_index":460,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:38",{"_index":463,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/providers/common.service.t",{"_index":599,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:12",{"_index":604,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:16",{"_index":606,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:20",{"_index":608,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/notifications.service.t",{"_index":373,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:12",{"_index":376,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:16",{"_index":379,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:20",{"_index":377,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:24",{"_index":378,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/sidebar.service.t",{"_index":511,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:11",{"_index":515,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:16",{"_index":513,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:23",{"_index":512,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:30",{"_index":514,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidepanel.service.t",{"_index":527,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:11",{"_index":533,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:12",{"_index":535,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:13",{"_index":534,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:17",{"_index":530,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:26",{"_index":528,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:33",{"_index":532,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/sid",{"_index":516,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["src/modules/core/sidebar/sidebar.component.t",{"_index":150,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:12",{"_index":358,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:16",{"_index":359,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:20",{"_index":357,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:24",{"_index":356,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:28",{"_index":360,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:38",{"_index":158,"title":{},"body":{"interfaces/Configuration.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:43",{"_index":155,"title":{},"body":{"interfaces/Configuration.html":{}}}],["src/modules/core/validators/password.validator.t",{"_index":415,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/core/validators/password.validator.ts:27",{"_index":436,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/core/validators/password.validator.ts:37",{"_index":431,"title":{},"body":{"classes/Password.html":{}}}],["ssh",{"_index":723,"title":{},"body":{"index.html":{}}}],["ssh/id_rsa",{"_index":727,"title":{},"body":{"index.html":{}}}],["start",{"_index":539,"title":{"index.html":{}},"body":{"directives/SpinningIconDirective.html":{},"index.html":{}}}],["start(ev",{"_index":541,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["static",{"_index":252,"title":{},"body":{"modules/CoreModule.html":{},"classes/Password.html":{}}}],["statu",{"_index":328,"title":{},"body":{"components/FormErrorsComponent.html":{},"components/PopoverComponent.html":{}}}],["stop",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["stringifywithoutpropertiesquot",{"_index":706,"title":{},"body":{"interfaces/differences.html":{}}}],["stringifywithoutpropertiesquote(obj",{"_index":707,"title":{},"body":{"interfaces/differences.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["sub_path",{"_index":652,"title":{},"body":{"interfaces/differences.html":{}}}],["subject",{"_index":261,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["submit",{"_index":424,"title":{},"body":{"classes/Password.html":{}}}],["subscribe(",{"_index":305,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["subscript",{"_index":262,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["support",{"_index":255,"title":{},"body":{"directives/DebounceInputDirective.html":{},"modules.html":{}}}],["sure",{"_index":719,"title":{},"body":{"index.html":{}}}],["svg",{"_index":756,"title":{},"body":{"modules.html":{}}}],["tablecolumn",{"_index":666,"title":{},"body":{"interfaces/differences.html":{}}}],["tag",{"_index":441,"title":{},"body":{"classes/Password.html":{}}}],["team/ngx",{"_index":731,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["test",{"_index":630,"title":{},"body":{"interfaces/differences.html":{}}}],["text",{"_index":503,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this._open",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["this.api",{"_index":625,"title":{},"body":{"interfaces/differences.html":{}}}],["this.click.emit(data",{"_index":203,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.context",{"_index":537,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["this.createsubsript",{"_index":301,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.debounce.emit(",{"_index":306,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.defaulttimeout(notif",{"_index":407,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.delete(notif.id",{"_index":395,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.differences(a,b",{"_index":633,"title":{},"body":{"interfaces/differences.html":{}}}],["this.differences(a[key",{"_index":649,"title":{},"body":{"interfaces/differences.html":{}}}],["this.graphql",{"_index":627,"title":{},"body":{"interfaces/differences.html":{}}}],["this.hintclass",{"_index":211,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.hostelement.nativeel",{"_index":500,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.hostelement.nativeelement.parentnod",{"_index":509,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.notif",{"_index":411,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.notifications.filter(notif",{"_index":412,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.notifications.map(notif",{"_index":399,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.oninputchang",{"_index":574,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["this.popover.open",{"_index":475,"title":{},"body":{"components/PopoverComponent.html":{}}}],["this.refreshtokeninterv",{"_index":628,"title":{},"body":{"interfaces/differences.html":{}}}],["this.removeevent.next(id",{"_index":410,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.renderer.addclass(div",{"_index":490,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.addclass(this.hostelement.nativeel",{"_index":545,"title":{},"body":{"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["this.renderer.createelement('i",{"_index":489,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.insertbefore(par",{"_index":510,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.listen(div",{"_index":499,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.removeclass(div",{"_index":504,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.removeclass(this.hostelement.nativeel",{"_index":548,"title":{},"body":{"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["this.renderer.setstyle(div",{"_index":493,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeel",{"_index":505,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.sidebar._open",{"_index":214,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.sidebar.toggl",{"_index":205,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.subject.next(ev",{"_index":315,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.observers[0",{"_index":308,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.observers[0]['duetim",{"_index":309,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.pip",{"_index":303,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subscript",{"_index":302,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subscription.unsubscrib",{"_index":311,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.templ",{"_index":536,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["this.validators.valid",{"_index":575,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["time",{"_index":270,"title":{},"body":{"directives/DebounceInputDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["timeout",{"_index":375,"title":{},"body":{"interfaces/Notification.html":{}}}],["titl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{}}}],["title:str",{"_index":130,"title":{},"body":{"components/BoxComponent.html":{}}}],["toggl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"interfaces/Item.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["togglehint($ev",{"_index":210,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["togglesidebar",{"_index":204,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["toid",{"_index":220,"title":{"pipes/ToId.html":{}},"body":{"modules/CoreModule.html":{},"pipes/ToId.html":{},"overview.html":{}}}],["top",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["track",{"_index":326,"title":{},"body":{"components/FormErrorsComponent.html":{},"components/PopoverComponent.html":{}}}],["transform",{"_index":550,"title":{},"body":{"pipes/ToId.html":{}}}],["transform(valu",{"_index":553,"title":{},"body":{"pipes/ToId.html":{}}}],["tre",{"_index":353,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["trigger",{"_index":143,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["true",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Password.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["two",{"_index":601,"title":{},"body":{"interfaces/differences.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["typeof",{"_index":645,"title":{},"body":{"interfaces/differences.html":{}}}],["uffff",{"_index":710,"title":{},"body":{"interfaces/differences.html":{}}}],["un",{"_index":354,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["undefin",{"_index":680,"title":{},"body":{"interfaces/differences.html":{}}}],["unregist",{"_index":287,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["updat",{"_index":396,"title":{},"body":{"interfaces/Notification.html":{},"index.html":{}}}],["updatenotif(id",{"_index":397,"title":{},"body":{"interfaces/Notification.html":{}}}],["url",{"_index":617,"title":{},"body":{"interfaces/differences.html":{}}}],["us",{"_index":615,"title":{},"body":{"interfaces/differences.html":{}}}],["usebom",{"_index":690,"title":{},"body":{"interfaces/differences.html":{}}}],["uuid",{"_index":382,"title":{},"body":{"interfaces/Notification.html":{}}}],["valid",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["validators.requir",{"_index":420,"title":{},"body":{"classes/Password.html":{}}}],["validatorsdirect",{"_index":85,"title":{"directives/ValidatorsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/ValidatorsDirective.html":{},"overview.html":{}}}],["valu",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["value.split",{"_index":558,"title":{},"body":{"pipes/ToId.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["variabl",{"_index":385,"title":{},"body":{"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["version",{"_index":749,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":467,"title":{},"body":{"components/PopoverComponent.html":{}}}],["viewchild('popov",{"_index":471,"title":{},"body":{"components/PopoverComponent.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["wait",{"_index":691,"title":{},"body":{"interfaces/differences.html":{}}}],["wait(m",{"_index":692,"title":{},"body":{"interfaces/differences.html":{}}}],["want",{"_index":188,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["watch",{"_index":384,"title":{},"body":{"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["without",{"_index":672,"title":{},"body":{"interfaces/differences.html":{}}}],["ye",{"_index":531,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["zone.j",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  _open= true\n  open(){\n    return this._open\n  }\n  toggle(){\n    this._open = ! this._open\n  }\n}\n\n    \n\n    \n        \n    \n        Hey to you ! I'm on your top!\n        \n            Hey to you ! I'm on your bottom!\n            \n                Hey to you ! I'm on your left!\n                \n                    hey\n                    Hey to you! I'm on your right!\n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Hey to you ! I\\'m on your top!                    Hey to you ! I\\'m on your bottom!                            Hey to you ! I\\'m on your left!                                    hey                    Hey to you! I\\'m on your right!                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from '../public_api';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CoreModule.forRoot(),\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxComponent.html":{"url":"components/BoxComponent.html","title":"component - BoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/box/box.component.ts\n\n\n    \n        Description\n    \n    \n        Display Box Container\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n|  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                box\n            \n\n            \n                styleUrls\n                box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./box.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/box/box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n/**\n * Display Box Container\n * @example \n *  \n *  |  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n *  \n */\n@Component({\n  selector: \"box\",\n  templateUrl: \"./box.component.html\",\n  styleUrls: [\"./box.component.scss\"]\n})\nexport class BoxComponent {\n\n  @Input() title:String\n\n\n\n}\n \n    \n\n    \n        \n    \n        {{title}}\n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagation.html":{"url":"directives/ClickStopPropagation.html","title":"directive - ClickStopPropagation","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ClickStopPropagation\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/stopPropagation.directive.ts\n        \n\n            \n                Description\n            \n            \n                Prevent bubbling of events\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                             // not call when click happenned on child\n| \n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/stopPropagation.directive.ts:18\n                            \n                        \n\n                \n                    \n                            Trigger click event to stop propagation\n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from \"@angular/core\";\n\n/**\n * Prevent bubbling of events\n * @example \n *   // not call when click happenned on child\n *  | \n *  \n */\n@Directive({\n  selector: \"[click-stop-propagation]\"\n})\nexport class ClickStopPropagation {\n  /**\n   * Trigger click event to stop propagation\n   */\n  @HostListener(\"click\", [\"$event\"])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/sidebar/sidebar.component.ts\n        \n\n            \n                Description\n            \n            \n                Configuration object of the sidebar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bottom\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:43\n                                        \n                                    \n\n                            \n                                \n                                    List of all icons display on the bottom area\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:38\n                                        \n                                    \n\n                            \n                                \n                                    List of all icons display on the main area\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, EventEmitter, Output} from \"@angular/core\";\nimport { SideBarService } from \"../providers/sidebar.service\";\n\n\n/**\n * Item present in sidebar\n */\nexport interface Item {\n  /**\n   * icon class (e-g: fa fa-home)\n   */\n  icon?:string,\n  /**\n   * id of icon\n   */\n  id?:string,\n  /**\n   * Description displat when sidebar is open\n   */\n  description?:string\n  /**\n   * click function to interact outside of the component\n   */\n  click?:Array|string\n  /**\n   * possibilities to add an other list: Not implemented yet\n   */\n  list?:Configuration\n}\n\n/**\n * Configuration object of the sidebar\n */\nexport interface Configuration {\n  /**\n   * List of all icons display on the main area\n   */\n  list?: Array;\n\n  /**\n   * List of all icons display on the bottom area\n   */\n  bottom?: Array;\n}\n\n/**\n * Display Sidebar on the app component\n * @example\n * const conf: Configuration = {\n * | list: [{\n * | | icon: \"fa fa-home\",\n * | | description: \"Accueil\",\n * | | click: [\"/home\"]\n * | }],\n * | bottom: [{\n * | | icon: \"fa fa-cog\",\n * | | description: \"Settings\",\n * | | click: [\"/settings\"]\n * | }]\n * };\n * \n * | \n * | I want to go to {{route()}}\n * \n */\n@Component({\n  selector: \"sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.scss\"]\n})\nexport class SidebarComponent {\n  /**\n   * control css class that open/close sidebar: openHint/closeHint\n   */\n  hintClass: string = \"\";\n  /**\n   * Get the configuration from outside\n   */\n  @Input(\"conf\") conf: Configuration = { list: [], bottom: [] };\n  /**\n   * Return the route on click of the sidebar item\n   */\n  @Output('router') click = new EventEmitter();\n  /**\n   * import dependencies \n   */\n  constructor(public sidebar: SideBarService) {}\n  /**\n   * Go to Home route\n   */\n  goTo(data) {this.click.emit(data)}\n\n  /**\n   * Toggle sidebar\n   */\n  toggleSidebar() {\n    this.sidebar.toggle();\n  }\n\n  /**\n   * Toggle hint beside links icons on hover \n   */\n  toggleHint($event) {\n    this.hintClass =\n      $event.type == \"mouseover\" && !this.sidebar._open\n        ? \"openHint\"\n        : \"closeHint\";\n  }\n}\n \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nFormErrorsComponent\n\nFormErrorsComponent\n\nCoreModule -->\n\nFormErrorsComponent->CoreModule\n\n\n\n\n\nBoxComponent\n\nBoxComponent\n\nCoreModule -->\n\nBoxComponent->CoreModule\n\n\n\n\n\nSidePanelComponent\n\nSidePanelComponent\n\nCoreModule -->\n\nSidePanelComponent->CoreModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nCoreModule -->\n\nNotificationsComponent->CoreModule\n\n\n\n\n\nDebounceInputDirective\n\nDebounceInputDirective\n\nCoreModule -->\n\nDebounceInputDirective->CoreModule\n\n\n\n\n\nClickStopPropagation\n\nClickStopPropagation\n\nCoreModule -->\n\nClickStopPropagation->CoreModule\n\n\n\n\n\nSpinningIconDirective\n\nSpinningIconDirective\n\nCoreModule -->\n\nSpinningIconDirective->CoreModule\n\n\n\n\n\nValidatorsDirective\n\nValidatorsDirective\n\nCoreModule -->\n\nValidatorsDirective->CoreModule\n\n\n\n\n\nShowPasswordDirective\n\nShowPasswordDirective\n\nCoreModule -->\n\nShowPasswordDirective->CoreModule\n\n\n\n\n\nToId\n\nToId\n\nCoreModule -->\n\nToId->CoreModule\n\n\n\n\n\nPopoverComponent\n\nPopoverComponent\n\nCoreModule -->\n\nPopoverComponent->CoreModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nCoreModule->SidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nFormErrorsComponent \n\nFormErrorsComponent \n\nFormErrorsComponent  -->\n\nCoreModule->FormErrorsComponent \n\n\n\n\n\nSidePanelComponent \n\nSidePanelComponent \n\nSidePanelComponent  -->\n\nCoreModule->SidePanelComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nCoreModule->NotificationsComponent \n\n\n\n\n\nBoxComponent \n\nBoxComponent \n\nBoxComponent  -->\n\nCoreModule->BoxComponent \n\n\n\n\n\nDebounceInputDirective \n\nDebounceInputDirective \n\nDebounceInputDirective  -->\n\nCoreModule->DebounceInputDirective \n\n\n\n\n\nSpinningIconDirective \n\nSpinningIconDirective \n\nSpinningIconDirective  -->\n\nCoreModule->SpinningIconDirective \n\n\n\n\n\nValidatorsDirective \n\nValidatorsDirective \n\nValidatorsDirective  -->\n\nCoreModule->ValidatorsDirective \n\n\n\n\n\nShowPasswordDirective \n\nShowPasswordDirective \n\nShowPasswordDirective  -->\n\nCoreModule->ShowPasswordDirective \n\n\n\n\n\nToId \n\nToId \n\nToId  -->\n\nCoreModule->ToId \n\n\n\n\n\nPopoverComponent \n\nPopoverComponent \n\nPopoverComponent  -->\n\nCoreModule->PopoverComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SidebarComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                FormErrorsComponent\n                            \n                            \n                                BoxComponent\n                            \n                            \n                                SidePanelComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                DebounceInputDirective\n                            \n                            \n                                ClickStopPropagation\n                            \n                            \n                                SpinningIconDirective\n                            \n                            \n                                ValidatorsDirective\n                            \n                            \n                                ShowPasswordDirective\n                            \n                            \n                                ToId\n                            \n                            \n                                PopoverComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SidebarComponent\n                            \n                            \n                                    NavbarComponent\n                            \n                            \n                                    FormErrorsComponent\n                            \n                            \n                                    SidePanelComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                            \n                                    BoxComponent\n                            \n                            \n                                    DebounceInputDirective\n                            \n                            \n                                    SpinningIconDirective\n                            \n                            \n                                    ValidatorsDirective\n                            \n                            \n                                    ShowPasswordDirective\n                            \n                            \n                                    ToId\n                            \n                            \n                                    PopoverComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FormErrorsComponent } from \"./form-errors/form-errors.component\";\nimport { NotificationsComponent } from \"./notifications/notifications.component\";\nimport { SidePanelComponent } from \"./side-panel/side-panel.component\";\nimport { BoxComponent } from \"./box/box.component\";\n\nimport { CommonService } from './providers/common.service'\nimport { SideBarService } from './providers/sidebar.service'\nimport { SidePanelService } from './providers/sidepanel.service'\nimport { NotificationsService } from './providers/notifications.service'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DebounceInputDirective } from './directives/debounceInput.directive'\nimport { SpinningIconDirective } from './directives/spinningIcon.directive'\nimport { ClickStopPropagation } from './directives/stopPropagation.directive'\nimport { ValidatorsDirective } from './directives/validators.directive'\nimport { ShowPasswordDirective } from './directives/showPassword.directive'\nimport { ToId } from './pipe/toId.pipe'\nimport { PopoverComponent } from './popover/popover.component';\n@NgModule({\n  declarations: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    BoxComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    DebounceInputDirective,\n    ClickStopPropagation,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbModule.forRoot()\n  ],\n  exports: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    BoxComponent,\n    DebounceInputDirective,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent\n  ]\n})\nexport class CoreModule { \n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommonService,\n        SideBarService,\n        NotificationsService,\n        SidePanelService\n      ] \n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DebounceInputDirective.html":{"url":"directives/DebounceInputDirective.html","title":"directive - DebounceInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DebounceInputDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/debounceInput.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that debounce an element that supports keyListener\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n                        OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [debounce-input]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubsription\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounceTime\n                    \n                    \n                        Describe the debounce time; Default: 500ms\n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:18\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Emit and call function after the debounce time\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:22\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:60\n                            \n                        \n\n                \n                    \n                            Trigger keyup event and inject it to the pipe of the debounce \n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSubsription\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSubsription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:40\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:46\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:52\n                            \n                        \n\n                \n                    \n                            Unregister observable on the component destruct\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:37\n                            \n                        \n\n                \n                    \n                            Register observable pipe that describe the flow of the debounce directive\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:26\n                            \n                        \n\n                \n                    \n                        Observable that register the flow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of the observable to close when component die\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\n\n/**\n * Directive that debounce an element that supports keyListener\n * @example \n * \n */\n@Directive({\n  selector: '[debounce-input]'\n})\nexport class DebounceInputDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Describe the debounce time; Default: 500ms\n   */\n  @Input() debounceTime = 500;\n  /**\n   * Emit and call function after the debounce time\n   */\n  @Output() debounce = new EventEmitter();\n  /**\n   * Observable that register the flow\n   */\n  private subject = new Subject();\n  /**\n   * Instance of the observable to close when component die\n   */\n  private subscription: Subscription;\n\n  \n\n  /**\n   * Register observable pipe that describe the flow of the debounce directive\n   */\n  ngOnInit() {\n    this.createSubsription()\n  }\n  createSubsription(){\n    this.subscription = this.subject.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounce.emit(e));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.debounceTime && this.subject.observers[0]) this.subject.observers[0]['dueTime'] = changes.debounceTime.currentValue\n  }\n  /**\n   * Unregister observable on the component destruct\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Trigger keyup event and inject it to the pipe of the debounce \n   */\n  @HostListener('keyup', ['$event'])\n  keyupEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.subject.next(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorsComponent.html":{"url":"components/FormErrorsComponent.html","title":"component - FormErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormErrorsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/form-errors/form-errors.component.ts\n\n\n    \n        Description\n    \n    \n        Encapsule an input and all validators attached\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n| \n| \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                formErrors\n            \n\n            \n                styleUrls\n                form-errors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                patternName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        NgModel to tracks invalid status\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/form-errors/form-errors.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patternName\n                    \n                    \n                        Override pattern display\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/form-errors/form-errors.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component,Input} from \"@angular/core\";\nimport { FormControl, Validators, NgModel, Validator } from \"@angular/forms\";\n\n\n/**\n * Encapsule an input and all validators attached\n * @example\n * \n *  \n    | \n    | \n    \n */\n@Component({\n  selector: \"formErrors\",\n  templateUrl: \"./form-errors.component.html\",\n  styleUrls: [\"./form-errors.component.scss\"]\n})\nexport class FormErrorsComponent {\n  /**\n   * NgModel to tracks invalid status\n   */\n  @Input('model') model: any\n  /**\n   * Override pattern display\n   */\n  @Input('patternName') patternName :string\n\n}\n \n    \n\n    \n        \n\n\n    \n         \n            {{patternName}}\n        \n        \n            Pattern: {{model.errors.pattern.requiredPattern}}\n        \n    \n    \n        Obligatoire\n    \n    \n        Contient au moins {{model.errors.minlength.requiredLength}} caractères\n    \n    \n        Contient au plus {{model.errors.maxlength.requiredLength}} caractères\n    \n    \n        Doit correspondre à la phrase de passe\n    \n    \n        Doit être un email\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         {{patternName}}                            Pattern: {{model.errors.pattern.requiredPattern}}                        Obligatoire                Contient au moins {{model.errors.minlength.requiredLength}} caractères                Contient au plus {{model.errors.maxlength.requiredLength}} caractères                Doit correspondre à la phrase de passe                Doit être un email    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Item.html":{"url":"interfaces/Item.html","title":"interface - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Item\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/sidebar/sidebar.component.ts\n        \n\n            \n                Description\n            \n            \n                Item present in sidebar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        click\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        click\n                                    \n                                \n                                \n                                    \n                                        click:     Array | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    click function to interact outside of the component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Description displat when sidebar is open\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    icon class (e-g: fa fa-home)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    id of icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Configuration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    possibilities to add an other list: Not implemented yet\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, EventEmitter, Output} from \"@angular/core\";\nimport { SideBarService } from \"../providers/sidebar.service\";\n\n\n/**\n * Item present in sidebar\n */\nexport interface Item {\n  /**\n   * icon class (e-g: fa fa-home)\n   */\n  icon?:string,\n  /**\n   * id of icon\n   */\n  id?:string,\n  /**\n   * Description displat when sidebar is open\n   */\n  description?:string\n  /**\n   * click function to interact outside of the component\n   */\n  click?:Array|string\n  /**\n   * possibilities to add an other list: Not implemented yet\n   */\n  list?:Configuration\n}\n\n/**\n * Configuration object of the sidebar\n */\nexport interface Configuration {\n  /**\n   * List of all icons display on the main area\n   */\n  list?: Array;\n\n  /**\n   * List of all icons display on the bottom area\n   */\n  bottom?: Array;\n}\n\n/**\n * Display Sidebar on the app component\n * @example\n * const conf: Configuration = {\n * | list: [{\n * | | icon: \"fa fa-home\",\n * | | description: \"Accueil\",\n * | | click: [\"/home\"]\n * | }],\n * | bottom: [{\n * | | icon: \"fa fa-cog\",\n * | | description: \"Settings\",\n * | | click: [\"/settings\"]\n * | }]\n * };\n * \n * | \n * | I want to go to {{route()}}\n * \n */\n@Component({\n  selector: \"sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.scss\"]\n})\nexport class SidebarComponent {\n  /**\n   * control css class that open/close sidebar: openHint/closeHint\n   */\n  hintClass: string = \"\";\n  /**\n   * Get the configuration from outside\n   */\n  @Input(\"conf\") conf: Configuration = { list: [], bottom: [] };\n  /**\n   * Return the route on click of the sidebar item\n   */\n  @Output('router') click = new EventEmitter();\n  /**\n   * import dependencies \n   */\n  constructor(public sidebar: SideBarService) {}\n  /**\n   * Go to Home route\n   */\n  goTo(data) {this.click.emit(data)}\n\n  /**\n   * Toggle sidebar\n   */\n  toggleSidebar() {\n    this.sidebar.toggle();\n  }\n\n  /**\n   * Toggle hint beside links icons on hover \n   */\n  toggleHint($event) {\n    this.hintClass =\n      $event.type == \"mouseover\" && !this.sidebar._open\n        ? \"openHint\"\n        : \"closeHint\";\n  }\n}\n \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar Component\nng-content: \n\n[logo] element on the left\n[actions] element on the right\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n|  \n|  |  \n|  \n|  \n|  |  \n|  |  | \n|  |  \n|  \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navbar\n            \n\n            \n                styleUrls\n                navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/navbar/navbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            Load dependencies instances\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Name displaying on left after icon\n\n                        \n                            Default value: \"\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/navbar/navbar.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n/**\n * Navbar Component\n * \n * ng-content: \n *  - [logo] element on the left\n *  - [actions] element on the right\n * @example\n *  \n    |  \n    |  |  \n    |  \n    |  \n    |  |  \n    |  |  | \n    |  |  \n    |  \n    \n */\n@Component({\n  selector: \"navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.scss\"]\n})\nexport class NavbarComponent {\n  /**\n   * Name displaying on left after icon\n   */\n  @Input('name') name = \"\"\n\n  /**\n   * Load dependencies instances\n   */\n  constructor(){}\n}\n \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        {{name}}\n      \n    \n\n    \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{name}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                Describe a notification\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        msg\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    ID of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Content on notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    Timeout function \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Header on notification\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, IterableDiffers } from \"@angular/core\";\nimport * as uuid from 'uuid'\nimport { Observable, Subject } from \"rxjs\";\n\n/**\n * Describe a notification\n */\nexport interface Notification {\n  /**\n   * ID of the notification\n   */\n  id?: string;\n  /**\n   * Header on notification\n   */\n  title?: string;\n  /**\n   * Content on notification\n   */\n  msg?: string;\n  /**\n   * Timeout function \n   */\n  timeout?: any;\n}\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class NotificationsService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  notifications: Array = [];\n  /**\n   * Emit event that contains complete notification on add\n   */\n  addEvent: Subject = new Subject();\n  /**\n   * Emit event that contains id on remove \n   */\n  removeEvent: Subject = new Subject();\n\n  /**\n   * Fetch delay from localStorage \n   */\n  constructor() {\n    let notificationsDelay = +localStorage.getItem(\"notificationsDelay\");\n    if (notificationsDelay  {\n      this.delete(notif.id);\n    }, +localStorage.getItem(\"notificationsDelay\"));\n  }\n\n  /**\n   * update notification from id \n   */\n  updateNotif(id, _notif: Notification) {\n    this.notifications.map(notif => {\n      if (notif.id === id) {\n        if (_notif.msg) notif.msg = _notif.msg;\n        if (_notif.title) notif.title = _notif.title;\n        clearTimeout(notif.timeout);\n        notif.timeout = this.defaultTimeout(notif);\n      }\n    });\n  }\n  /**\n   * delete a notification\n   */\n  delete(id) {\n    this.removeEvent.next(id);\n    this.notifications = this.notifications.filter(notif => notif.id !== id);\n  }\n\n  /**\n   * Delete all notifications \n   */\n  deleteAll() {\n    this.notifications.map(notif => this.delete(notif.id));\n  }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/validators/Password.validator.ts\n        \n\n            \n                Description\n            \n            \n                Check if passphrase are the same\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            fb.group({\npassphrase: [\"\",Validators.required],\nrecheckPassphrase: [\"\",Validators.required],\n}, { validator: MatchPassword.MatchPassword })\n\n\n|  Passphrase\n|  \n|\n|  Recheck passphrase\n|  \n|\n|  Submit button\n\nMatchPassword: {{formPassphrases.valid}}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                GeneratePassword\n                            \n                            \n                                    Static\n                                MatchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GeneratePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GeneratePassword(length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/validators/Password.validator.ts:37\n                            \n                        \n\n                \n                    \n                            Return a password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                12\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MatchPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        MatchPassword(AC: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/validators/Password.validator.ts:27\n                            \n                        \n\n                \n                    \n                            check function\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AC\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { recheckPassphrase: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Check if passphrase are the same\n * @example \n *  fb.group({\n *      passphrase: [\"\",Validators.required],\n *      recheckPassphrase: [\"\",Validators.required],\n *  }, { validator: MatchPassword.MatchPassword })\n * \n *  \n *  |  Passphrase\n *  |  \n *  |\n *  |  Recheck passphrase\n *  |  \n *  |\n *  |  Submit button\n *  \n *  MatchPassword: {{formPassphrases.valid}}\n */\nexport class Password {\n\n    /**\n     * check function\n     */\n    static MatchPassword(AC: AbstractControl) {\n        let confirmPassword = AC.value.passphrase\n        let password = AC.value.recheckPassphrase; // to get value in input tag\n        if (confirmPassword !== password) {\n            return { recheckPassphrase: true }\n        } else return null\n    }\n    /**\n     * Return a password\n     */\n    static GeneratePassword(length:number = 12):string {\n        const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]\\:;?>\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopoverComponent.html":{"url":"components/PopoverComponent.html","title":"component - PopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/popover/popover.component.ts\n\n\n    \n        Description\n    \n    \n        Make a popoper around items\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n|  hey\n|  Hey to you! I'm on your right!\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                popover\n            \n\n            \n                styleUrls\n                popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                            \n                                popover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                            \n                                placement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        open\n                    \n                    \n                        Open or close popover;\nDefault: close \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placement\n                    \n                    \n                        Define the placment of popover\n\n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:35\n                            \n                        \n\n                \n                    \n                            Track changes on input open to reflect status on private keys\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:38\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:30\n                            \n                        \n\n                \n                    \n                        private boolean to watching open/close status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popover:     NgbPopover\n\n                    \n                \n                    \n                        \n                            Type :     NgbPopover\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, SimpleChange, OnInit, ViewChild } from \"@angular/core\";\nimport { NgbPopover } from \"@ng-bootstrap/ng-bootstrap\";\n\n/**\n * Make a popoper around items\n * @example\n * \n    |  hey\n    |  Hey to you! I'm on your right!\n    \n */\n@Component({\n  selector: \"popover\",\n  templateUrl: \"./popover.component.html\",\n  styleUrls: [\"./popover.component.scss\"]\n})\nexport class PopoverComponent implements OnInit{\n  /**\n   * Open or close popover;\n   * Default: close \n   */\n  @Input('open') open = false\n  /**\n   * Define the placment of popover\n   */\n  @Input('placement') placement = 'right'\n  /**\n   * private boolean to watching open/close status\n   */\n  _open = false\n  @ViewChild('popover') popover: NgbPopover\n  /**\n   * Track changes on input open to reflect status on private keys\n   */\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this._open = changes['open'].currentValue\n  }\n  ngOnInit(): void {\n    console.log(this.popover)\n    this.popover.open()\n  }\n}\n \n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ShowPasswordDirective.html":{"url":"directives/ShowPasswordDirective.html","title":"directive - ShowPasswordDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ShowPasswordDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/showPassword.directive.ts\n        \n\n            \n                Description\n            \n            \n                Load differents directive with an array of key value\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [show-password]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/showPassword.directive.ts:12\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/showPassword.directive.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2, OnInit} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * \n */\n@Directive({\n  selector: '[show-password]',\n  host: {}\n})\nexport class ShowPasswordDirective implements OnInit{\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  ngOnInit(): void {\n    const div = this.renderer.createElement('i');\n    this.renderer.addClass(div, 'fa');\n    this.renderer.addClass(div, 'fa-eye-slash');\n    this.renderer.addClass(div, 'toggle-eye');\n    this.renderer.setStyle(div, 'position', 'absolute')\n    this.renderer.setStyle(div, 'display', 'inherit')\n    this.renderer.setStyle(div, 'cursor', 'pointer')\n    this.renderer.listen(div, 'click', event => {\n      const input = this.hostElement.nativeElement\n      if(input.type === 'password'){\n        input.type = 'text'\n        this.renderer.addClass(div, 'fa-eye');\n        this.renderer.removeClass(div, 'fa-eye-slash');\n      } else {\n        input.type = 'password'\n        this.renderer.removeClass(div, 'fa-eye');\n        this.renderer.addClass(div, 'fa-eye-slash');\n      }\n    })\n    \n    this.renderer.setStyle(this.hostElement.nativeElement, 'padding-left', '2em')\n    \n    const parent = this.hostElement.nativeElement.parentNode;\n    this.renderer.insertBefore(parent, div, this.hostElement.nativeElement)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SideBarService.html":{"url":"injectables/SideBarService.html","title":"injectable - SideBarService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SideBarService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/sidebar.service.ts\n        \n\n            \n                Description\n            \n            \n                Control the sidebar outside the component\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:23\n                            \n                        \n\n                \n                    \n                            Close sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:16\n                            \n                        \n\n                \n                    \n                            Open sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:30\n                            \n                        \n\n                \n                    \n                            Toggle sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:11\n                            \n                        \n\n                \n                    \n                        Component watch this variable to open/close the sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class SideBarService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  _open = false\n  \n  /**\n   * Open sidebar\n   */\n  open() {\n    this._open = true\n  }\n\n  /**\n   * Close sidebar\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidePanelComponent.html":{"url":"components/SidePanelComponent.html","title":"component - SidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidePanelComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/side-panel/side-panel.component.ts\n\n\n    \n        Description\n    \n    \n        SidePanel Component\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    const sp = new SidePanelService()\nconst open = (template, context = {})=>sp.open(template, context)\n\n\n|  \n|  |  Open with template\n|  |  \n|  |  \n|  |  \n|  |  Open with context\n|  \n|  \n\n Hey {{value}} !\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidePanel\n            \n\n            \n                styleUrls\n                side-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidepanel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidepanel: SidePanelService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/side-panel/side-panel.component.ts:27\n                            \n                        \n\n                \n                    \n                            Load dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    sidepanel\n                                                  \n                                                        \n                                                                    SidePanelService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidepanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidepanel:     SidePanelService\n\n                    \n                \n                    \n                        \n                            Type :     SidePanelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/side-panel/side-panel.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { SidePanelService } from \"../providers/sidepanel.service\";\n\n/**\n * SidePanel Component\n * @example\n * const sp = new SidePanelService()\n * const open = (template, context = {})=>sp.open(template, context)\n * \n * \n * |  \n * |  |  Open with template\n * |  |  \n * |  |  \n * |  |  \n * |  |  Open with context\n * |  \n * |  \n * \n *  Hey {{value}} !\n */\n@Component({\n  selector: \"sidePanel\",\n  templateUrl: \"./side-panel.component.html\",\n  styleUrls: [\"./side-panel.component.scss\"]\n})\nexport class SidePanelComponent {\n  /**\n   * Load dependencies\n   */\n  constructor(public sidepanel: SidePanelService){}\n}\n \n    \n\n    \n        \n    \n    \n        \n    \n\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidePanelService.html":{"url":"injectables/SidePanelService.html","title":"injectable - SidePanelService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SidePanelService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/sidepanel.service.ts\n        \n\n            \n                Description\n            \n            \n                Control the sidePanel outside the component\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                            \n                                context\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:26\n                            \n                        \n\n                \n                    \n                            Close sidePanel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(template?: , context?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:17\n                            \n                        \n\n                \n                    \n                            Open sidePanel\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:33\n                            \n                        \n\n                \n                    \n                            Toggle sidePanel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:11\n                            \n                        \n\n                \n                    \n                        Component watch this variable to open/close the sidePanel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidePanel outside the component\n */\n@Injectable()\nexport class SidePanelService {\n  /**\n   * Component watch this variable to open/close the sidePanel\n   */\n  _open = false\n  template\n  context\n  /**\n   * Open sidePanel\n   */\n  open(template?, context?) {\n    if (template) this.template = template\n    if (context) this.context = context\n    this._open = true\n  }\n\n  /**\n   * Close sidePanel\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidePanel\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SpinningIconDirective.html":{"url":"directives/SpinningIconDirective.html","title":"directive - SpinningIconDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SpinningIconDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/spinningIcon.directive.ts\n        \n\n            \n                Description\n            \n            \n                spin an icon\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Click to start\n\n| \n\nClick to stop\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [spinning-icon]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/spinningIcon.directive.ts:16\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/spinningIcon.directive.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \nstop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/spinningIcon.directive.ts:28\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Renderer2, ElementRef } from \"@angular/core\";\n\n/**\n * spin an icon\n * @example \n * Click to start\n * \n * | \n * \n * Click to stop\n */\n@Directive({\n  selector: \"[spinning-icon]\",\n  exportAs:'spinning'\n})\nexport class SpinningIconDirective {\n\n  /**\n  * Load some dependencies\n  */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef) { }\n\n  start(event: any): void {\n    this.renderer.addClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.addClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n\n  stop(){\n    this.renderer.removeClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.removeClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToId.html":{"url":"pipes/ToId.html","title":"pipe - ToId","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  ToId\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/core/pipe/toId.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform string to be a valid HtmlID\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        toId\n                    \n                    \n                        pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/pipe/toId.pipe.ts:13\n                            \n                        \n\n                \n                    \n                            Transform function\nIt remove special characters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform string to be a valid HtmlID\n */\n@Pipe({ name: 'toId', pure: true })\nexport class ToId implements PipeTransform {\n\n    /**\n     * Transform function\n     * It remove special characters\n     */\n    transform(value: any) {\n        return value.split(' ').join('').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatorsDirective.html":{"url":"directives/ValidatorsDirective.html","title":"directive - ValidatorsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ValidatorsDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/validators.directive.ts\n        \n\n            \n                Description\n            \n            \n                Load differents directive with an array of key value\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewChecked\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [validators]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                validators\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/validators.directive.ts:18\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        validators\n                    \n                    \n                        Array of key value that describe all directive to put on the element\n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewChecked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:28\n                            \n                        \n\n                \n                    \n                            Launch validator check for the first time init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onInputChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonInputChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Change appearance of input with goodInput/badInout class\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * \n */\n@Directive({\n  selector: '[validators]',\n  host: {\n    \"(input)\": 'onInputChange($event)'\n  }\n})\nexport class ValidatorsDirective implements AfterViewChecked{\n  /**\n   * Array of key value that describe all directive to put on the element\n   */\n  @Input() validators;\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  /**\n   * Launch validator check for the first time init\n   */\n  ngAfterViewChecked(){\n    this.onInputChange()\n  }\n\n  /**\n   * Change appearance of input with goodInput/badInout class\n   */\n  onInputChange() {\n    if (this.validators.valid) {\n      this.renderer.addClass(this.hostElement.nativeElement, 'goodInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'badInput');\n    } else {\n      this.renderer.addClass(this.hostElement.nativeElement, 'badInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'goodInput');\n    }  \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^2.0.0\n        \n            angular2-csv : ^0.2.5\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.6\n        \n            ngx-bootstrap : ^2.0.5\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.1.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/differences.html":{"url":"interfaces/differences.html","title":"interface - differences","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  differences\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/common.service.ts\n        \n\n            \n                Description\n            \n            \n                Describe differences between two object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        different\n                                \n                                \n                                        missing_from_first\n                                \n                                \n                                        missing_from_second\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        different\n                                    \n                                \n                                \n                                    \n                                        different:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Only when two same prop have not same values\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missing_from_first\n                                    \n                                \n                                \n                                    \n                                        missing_from_first:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Only missing properties from the first object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missing_from_second\n                                    \n                                \n                                \n                                    \n                                        missing_from_second:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Only missing properties from the second object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as _ from 'lodash'\nimport { Angular2Csv } from 'angular2-csv'\n\n/**\n * Describe differences between two object\n */\nexport interface differences {\n  /**\n   * Only when two same prop have not same values\n   */\n  different: Array,\n  /**\n   * Only missing properties from the first object\n   */\n  missing_from_first: Array,\n  /**\n   * Only missing properties from the second object\n   */\n  missing_from_second: Array\n}\n\n/**\n * Share variable and function commonly use in the app\n */\n@Injectable()\nexport class CommonService {\n  /**\n   * Api URL\n   */\n  api: string\n  /**\n   * GraphQL URL\n   */\n  graphQL: string\n  /**\n   * Interval in ms between two refresh\n   */\n  refreshTokenInterval: number\n\n  /**\n   * Instanciate all members\n   */\n  constructor(){\n    this.api = \"http://localhost:3000\"\n    this.graphQL = this.api + '/graphql'\n    this.refreshTokenInterval = 4000\n  }\n\n  /**\n   * Test equality objects \n   */\n  equalityObjects(a,b){\n    const differences = this.differences(a,b)\n    const d = differences.different.length + differences.missing_from_first.length + differences.missing_from_second.length\n    return  d===0 ? true :false \n  }\n\n  /**\n   * Load all\n   */\n  differences(a, b): differences {\n    var result: differences = {\n      different: [],\n      missing_from_first: [],\n      missing_from_second: []\n    };\n\n    _.reduce(a, (result, value, key) => {\n      if (b.hasOwnProperty(key)) {\n        if (_.isEqual(value, b[key])) return result;\n        else {\n          if (typeof (a[key]) != typeof ({}) || typeof (b[key]) != typeof ({})) {\n            result.different.push(key);\n            return result;\n          } else {\n            var deeper = this.differences(a[key], b[key]);\n            result.different = result.different.concat(_.map(deeper.different, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_second = result.missing_from_second.concat(_.map(deeper.missing_from_second, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_first = result.missing_from_first.concat(_.map(deeper.missing_from_first, (sub_path) => key + \".\" + sub_path))\n            return result;\n          }\n        }\n      } else {\n        result.missing_from_second.push(key);\n        return result;\n      }\n    }, result);\n\n    _.reduce(b, function (result, value, key) {\n      if (a.hasOwnProperty(key)) return result;\n      else {\n        result.missing_from_first.push(key);\n        return result;\n      }\n    }, result);\n    return result;\n  }\n\n  /**\n   * Export a datable to an csv \n   */\n  // exportAsCSV(dataTable: DatatableComponent, filename: string = 'Export') {\n  //   const columns: TableColumn[] = dataTable.columns || dataTable._internalColumns;\n  //   const headers =\n  //     columns\n  //       .map((column: TableColumn) => column.name)\n  //       .filter((e) => e);  // remove column without name\n\n  //   const rows: any[] = dataTable.rows.map((row) => {\n  //     let r = {};\n  //     columns.forEach((column) => {\n  //       let prop = column.prop;\n  //       if (!column.name) return // ignore column without name\n  //       if (prop) {\n  //         if (row[prop] === null || row[prop] === undefined) \n  //           r[prop] = \"\"\n  //         else\n  //           r[prop] = row[prop]\n  //         if (typeof row[prop] === 'boolean')\n  //           r[prop] = (row[prop]) ? 'Oui' : 'Non'\n  //       }\n  //     })\n  //     return r;\n  //   });\n  //   return new Angular2Csv(rows, filename, {\n  //     fieldSeparator: ',',\n  //     quoteStrings: '\"',\n  //     decimalseparator: '.',\n  //     showLabels: true,\n  //     headers,\n  //     showTitle: false,\n  //     title: filename,\n  //     useBom: false,\n  //   });\n  // }\n  \n\n  /**\n   * Wait function\n   */\n  wait(ms){\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve()\n      }, ms);\n    });\n  }\n\n  /**\n   * Flat an object \n   */\n  flatten(obj){\n    const newObj = {}\n    function flat(obj){\n      Object.keys(obj).map(key => {\n        if(typeof obj[key] === \"object\") flat(obj[key])\n        else newObj[key]=obj[key]\n      })\n    }\n    flat(obj)\n    return newObj\n  }\n\n  /**\n   * stringifyWithoutPropertiesQuote\n   */\n  stringifyWithoutPropertiesQuote(obj){\n    return JSON.stringify(obj)\n            .replace(/\\\\\"/g, \"\\uFFFF\")\n            .replace(/\\\"([^\"]+)\\\":/g, \"$1:\")\n            .replace(/\\uFFFF/g, \"\\\\\\\"\");\n  }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-defi-core\n\n\nCore Module for Angular2+ based applications\nInstallation\nMake sure that you are allowed to access this repository and have your ssh agent started\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_rsa\nnpm i git@github.com:defi-informatique-team/ngx-defi-front.gitImport module in your RootModule\nimport { BrowserModule } from '@angular/platform-browser';\n...\nimport { CoreModule } from 'ngx-defi-core/dist';\n\n@NgModule({\n  declarations: [\n      ...\n  ],\n  imports: [\n    BrowserModule,\n    ... ,\n    CoreModule.forRoot(),\n  ],\n  providers: [\n      ...\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}All components are exported from top of ngx-defi-core/dist, you can import like import { BoxComponent } from 'ngx-defi-core/dist'\nDevelopment\nTo update and build this library, you can launch differents scripts from package json\n// Launch an instance of all sandboxed applications\nnpm run start// Generate documentaion folder with code coverage\nnpm run doc// Generate a specific version of the library with build and commit\n// Launch autoexport script that allow to automatically export all component on module\nnpm run patch | minor | major\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nCoreModule->SidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nFormErrorsComponent \n\nFormErrorsComponent \n\nFormErrorsComponent  -->\n\nCoreModule->FormErrorsComponent \n\n\n\n\n\nSidePanelComponent \n\nSidePanelComponent \n\nSidePanelComponent  -->\n\nCoreModule->SidePanelComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nCoreModule->NotificationsComponent \n\n\n\n\n\nBoxComponent \n\nBoxComponent \n\nBoxComponent  -->\n\nCoreModule->BoxComponent \n\n\n\n\n\nDebounceInputDirective \n\nDebounceInputDirective \n\nDebounceInputDirective  -->\n\nCoreModule->DebounceInputDirective \n\n\n\n\n\nSpinningIconDirective \n\nSpinningIconDirective \n\nSpinningIconDirective  -->\n\nCoreModule->SpinningIconDirective \n\n\n\n\n\nValidatorsDirective \n\nValidatorsDirective \n\nValidatorsDirective  -->\n\nCoreModule->ValidatorsDirective \n\n\n\n\n\nShowPasswordDirective \n\nShowPasswordDirective \n\nShowPasswordDirective  -->\n\nCoreModule->ShowPasswordDirective \n\n\n\n\n\nToId \n\nToId \n\nToId  -->\n\nCoreModule->ToId \n\n\n\n\n\nPopoverComponent \n\nPopoverComponent \n\nPopoverComponent  -->\n\nCoreModule->PopoverComponent \n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nCoreModule -->\n\nSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nFormErrorsComponent\n\nFormErrorsComponent\n\nCoreModule -->\n\nFormErrorsComponent->CoreModule\n\n\n\n\n\nBoxComponent\n\nBoxComponent\n\nCoreModule -->\n\nBoxComponent->CoreModule\n\n\n\n\n\nSidePanelComponent\n\nSidePanelComponent\n\nCoreModule -->\n\nSidePanelComponent->CoreModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nCoreModule -->\n\nNotificationsComponent->CoreModule\n\n\n\n\n\nDebounceInputDirective\n\nDebounceInputDirective\n\nCoreModule -->\n\nDebounceInputDirective->CoreModule\n\n\n\n\n\nClickStopPropagation\n\nClickStopPropagation\n\nCoreModule -->\n\nClickStopPropagation->CoreModule\n\n\n\n\n\nSpinningIconDirective\n\nSpinningIconDirective\n\nCoreModule -->\n\nSpinningIconDirective->CoreModule\n\n\n\n\n\nValidatorsDirective\n\nValidatorsDirective\n\nCoreModule -->\n\nValidatorsDirective->CoreModule\n\n\n\n\n\nShowPasswordDirective\n\nShowPasswordDirective\n\nCoreModule -->\n\nShowPasswordDirective->CoreModule\n\n\n\n\n\nToId\n\nToId\n\nCoreModule -->\n\nToId->CoreModule\n\n\n\n\n\nPopoverComponent\n\nPopoverComponent\n\nCoreModule -->\n\nPopoverComponent->CoreModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        8 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
