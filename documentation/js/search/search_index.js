var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.193,1,0.921]],["body/components/AppComponent.html",[0,0.36,1,1.662,2,0.232,3,0.232,4,1.694,5,1.694,6,0.232,7,3.487,8,0.895,9,1.369,10,1.749,11,4.483,12,1.757,13,4.483,14,1.757,15,4.483,16,0.227,17,0.04,18,0.232,19,2.144,20,3.487,21,0.124,22,0.073,23,1.231,24,2.178,25,1.757,26,0.622,27,2.279,28,1.694,29,1.014,30,1.694,31,1.108,32,1.694,33,1.231,34,1.694,35,1.231,36,1.694,37,1.366,38,1.694,39,1.231,40,1.694,41,1.231,42,1.694,43,1.108,44,1.108,45,1.108,46,0.997,47,1.366,48,1.694,49,1.108,50,1.519,51,1.694,52,1.108,53,1.519,54,1.694,55,1.108,56,1.519,57,1.694,58,1.108,59,1.231,60,1.694,61,0.031,62,0.031]],["title/modules/AppModule.html",[63,1.136,64,1.578]],["body/modules/AppModule.html",[0,0.239,1,1.886,2,0.239,3,0.239,6,0.239,16,0.287,17,0.041,18,0.239,21,0.162,22,0.075,23,1.267,61,0.031,62,0.031,63,1.79,64,3.155,65,0.922,66,3.089,67,2.441,68,2.809,69,2.948,70,2.948,71,2.948,72,2.948,73,2.653,74,3.211,75,2.524,76,2.524,77,3.591,78,3.75,79,2.524,80,2.208,81,3.211,82,3.591,83,3.591,84,2.948,85,2.524,86,2.948,87,3.591]],["title/components/BoxComponent.html",[0,0.193,31,0.921]],["body/components/BoxComponent.html",[0,0.349,1,1.004,2,0.21,3,0.21,4,1.535,5,1.535,6,0.21,8,0.811,9,1.353,10,1.115,12,1.647,14,1.647,16,0.16,17,0.041,18,0.21,21,0.112,22,0.066,23,1.115,24,2.042,25,1.647,26,0.583,27,2.194,28,1.535,29,0.967,30,1.535,31,1.6,32,1.535,33,1.115,34,1.535,35,1.115,36,1.535,37,1.238,38,1.535,39,1.115,40,1.535,41,1.115,42,1.535,43,1.004,44,1.004,45,1.004,46,0.903,47,1.238,48,1.535,49,1.004,50,1.376,51,1.535,52,1.004,53,1.376,54,1.535,55,1.004,56,1.376,57,1.535,58,1.004,59,1.115,60,1.535,61,0.029,62,0.029,88,1.535,89,3.158,90,0.377,91,2.042,92,5.034,93,3.45,94,0.965,95,4.202,96,4.202,97,4.202,98,4.202,99,4.202,100,4.202,101,4.202,102,4.202,103,4.202,104,4.202,105,0.377,106,1.6,107,3.539,108,0.647,109,1.115,110,0.377,111,3.158,112,3.158]],["title/directives/ClickStopPropagation.html",[26,0.402,45,0.921]],["body/directives/ClickStopPropagation.html",[2,0.245,3,0.245,6,0.245,8,0.943,9,1.065,16,0.186,17,0.041,18,0.245,21,0.13,22,0.077,26,0.705,45,1.473,46,1.649,47,2.089,61,0.032,62,0.032,90,0.438,94,1.065,105,0.438,110,0.438,113,3.673,114,4.634,115,4.634,116,3.056,117,3.804,118,4.634,119,4.634,120,5.331,121,3.569,122,3.015,123,3.673,124,3.673,125,3.804,126,3.673,127,2.582,128,3.673,129,1.439,130,3.015]],["title/interfaces/Configuration.html",[19,1.782,131,1.023]],["body/interfaces/Configuration.html",[0,0.29,2,0.151,3,0.151,6,0.151,9,0.764,10,0.799,12,0.887,14,0.887,16,0.2,17,0.042,18,0.151,19,3.158,21,0.14,22,0.082,43,0.719,44,1.666,46,1.243,61,0.023,62,0.023,65,0.581,90,0.553,91,2.251,94,0.52,105,0.27,106,0.719,108,0.681,109,1.534,110,0.397,131,1.392,132,1.857,133,2.338,134,1.174,135,1.116,136,4.217,137,4.488,138,2.354,139,2.262,140,3.277,141,3.569,142,2.262,143,2.73,144,1.59,145,1.59,146,1.811,147,1.59,148,2.045,149,1.857,150,1.59,151,1.857,152,2.978,153,3.569,154,2.338,155,1.857,156,1.099,157,1.449,158,1.857,159,1.811,160,1.857,161,2.338,162,1.857,163,1.59,164,1.857,165,1.391,166,0.986,167,1.099,168,2.73,169,1.857,170,1.857,171,2.73,172,1.857,173,2.73,174,2.73,175,1.857,176,1.857,177,1.857,178,1.857,179,1.857,180,1.232,181,1.857,182,1.099,183,1.857,184,1.857,185,1.857,186,1.59,187,1.857,188,1.857,189,1.857,190,1.857,191,1.857,192,1.811,193,1.857,194,1.857,195,1.857,196,1.857,197,1.857,198,1.857,199,1.857,200,1.857,201,1.857,202,1.857,203,1.857,204,1.857,205,1.857]],["title/modules/CoreModule.html",[63,1.136,73,1.408]],["body/modules/CoreModule.html",[2,0.142,3,0.142,6,0.142,16,0.292,17,0.042,18,0.142,21,0.149,22,0.044,23,0.75,31,1.716,33,1.905,35,1.905,37,2.116,39,1.905,41,1.905,43,1.716,45,1.505,49,1.716,52,1.716,55,1.716,58,1.716,61,0.022,62,0.022,63,1.245,65,0.546,66,2.338,67,1.543,68,1.953,73,2.917,74,2.233,75,1.494,76,1.494,81,2.673,84,1.745,85,1.494,127,1.494,146,1.729,147,1.494,163,1.494,206,1.745,207,1.745,208,1.745,209,3.319,210,2.126,211,3.176,212,1.745,213,3.176,214,2.126,215,2.126,216,1.745,217,1.745,218,2.126,219,2.126,220,1.745,221,1.745,222,2.126,223,2.126,224,2.607,225,2.126,226,1.953,227,1.745,228,2.607,229,2.126,230,2.126,231,1.307,232,1.494,233,2.126,234,2.126,235,2.126,236,2.126,237,2.126,238,2.126,239,2.126,240,2.126,241,2.126,242,1.745,243,2.126,244,0.608]],["title/directives/DebounceInputDirective.html",[26,0.402,49,0.921]],["body/directives/DebounceInputDirective.html",[0,0.294,2,0.155,3,0.155,6,0.155,8,0.599,9,0.781,16,0.224,17,0.042,18,0.155,21,0.083,22,0.049,25,1.333,26,0.701,29,0.477,49,1.081,50,2.458,61,0.023,62,0.023,90,0.278,94,0.781,105,0.278,106,1.556,108,0.822,110,0.63,116,2.554,117,2.791,121,2.821,122,1.914,125,2.791,129,1.729,130,1.914,134,1.2,135,0.599,144,2.821,145,3.101,157,1.482,166,1.482,244,1.261,245,2.332,246,2.791,247,3.4,248,2.821,249,2.821,250,4.013,251,2.666,252,4.149,253,5.181,254,1.2,255,4.411,256,2.791,257,4.411,258,3.101,259,4.411,260,4.411,261,2.712,262,3.621,263,2.144,264,3.4,265,0.972,266,3.4,267,2.332,268,2.791,269,2.332,270,2.332,271,2.332,272,1.2,273,2.712,274,2.332,275,2.791,276,3.621,277,2.332,278,0.823,279,1.639,280,2.332,281,3.4,282,4.253,283,3.4,284,2.332,285,4.411,286,4.411,287,2.468,288,2.332,289,2.332,290,2.39,291,2.091,292,3.4,293,2.332,294,2.332,295,2.332,296,2.332,297,2.332,298,2.332,299,2.332,300,2.332,301,2.332,302,2.332,303,2.332,304,2.332,305,2.332,306,2.332,307,2.332,308,2.332,309,2.332,310,2.332]],["title/components/FormErrorsComponent.html",[0,0.193,33,1.023]],["body/components/FormErrorsComponent.html",[0,0.314,1,0.856,2,0.179,3,0.179,4,1.309,5,1.309,6,0.179,8,0.691,9,1.324,10,0.95,12,1.477,14,1.477,16,0.191,17,0.041,18,0.179,21,0.095,22,0.056,23,0.95,24,1.832,25,1.477,26,0.523,27,2.052,28,1.309,29,0.89,30,1.309,31,0.856,32,1.309,33,1.662,34,1.309,35,0.95,36,1.309,37,1.055,38,1.309,39,0.95,40,1.309,41,0.95,42,1.309,43,0.856,44,0.856,45,0.856,46,0.77,47,1.055,48,1.309,49,0.856,50,1.174,51,1.309,52,0.856,53,1.174,54,1.309,55,0.856,56,1.174,57,1.309,58,0.856,59,1.749,60,1.309,61,0.026,62,0.026,88,1.309,90,0.321,91,1.832,94,0.866,105,0.321,106,1.497,108,0.771,109,1.33,110,0.45,216,3.866,217,3.569,311,4.348,312,2.693,313,3.769,314,3.769,315,3.769,316,3.769,317,3.769,318,4.348,319,4.957,320,4.348,321,3.094,322,3.769,323,3.094,324,2.693,325,3.769,326,4.709,327,2.693,328,2.693,329,2.693,330,1.893,331,2.693,332,2.693,333,3.769,334,3.769,335,4.709,336,4.709,337,3.769,338,3.769,339,4.709,340,3.769,341,3.769,342,4.709,343,3.769,344,3.769,345,3.769,346,3.769,347,3.769,348,3.769,349,3.769,350,3.769]],["title/interfaces/Item.html",[131,1.023,148,1.782]],["body/interfaces/Item.html",[0,0.296,2,0.136,3,0.136,6,0.136,9,0.709,10,0.723,12,0.802,14,0.802,16,0.188,17,0.042,18,0.136,19,3.067,21,0.132,22,0.086,43,0.651,44,1.653,46,1.426,61,0.021,62,0.021,65,0.526,90,0.609,91,1.806,94,0.47,105,0.244,106,0.651,108,0.956,109,1.93,110,0.557,131,1.312,132,1.681,133,1.439,134,1.09,135,1.375,136,3.398,137,4.338,138,2.011,140,3.33,141,2.535,143,1.681,144,1.439,145,1.439,146,1.681,147,1.439,148,2.545,149,2.535,150,2.17,151,2.535,152,3.067,153,3.646,154,3.282,155,2.535,156,1.5,157,1.936,158,2.535,159,2.024,160,1.681,161,3.282,162,2.535,163,2.17,164,2.535,165,1.898,166,1.346,167,0.995,168,2.535,169,1.681,170,1.681,171,2.535,172,1.681,173,2.535,174,2.535,175,1.681,176,1.681,177,1.681,178,1.681,179,1.681,180,1.115,181,1.681,182,0.995,183,1.681,184,1.681,185,1.681,186,1.439,187,1.681,188,1.681,189,1.681,190,1.681,191,1.681,192,1.681,193,1.681,194,1.681,195,1.681,196,1.681,197,1.681,198,1.681,199,1.681,200,1.681,201,1.681,202,1.681,203,1.681,204,1.681,205,1.681,351,2.047,352,2.047,353,2.047,354,2.047,355,2.047,356,2.047]],["title/components/NavbarComponent.html",[0,0.193,35,1.023]],["body/components/NavbarComponent.html",[0,0.356,1,0.901,2,0.189,3,0.189,4,1.378,5,1.378,6,0.189,8,0.728,9,1.334,10,1.001,12,1.531,14,1.531,16,0.144,17,0.042,18,0.189,21,0.101,22,0.059,23,1.001,24,1.898,25,2.046,26,0.542,27,2.099,28,1.378,29,1.146,30,1.378,31,0.901,32,1.378,33,1.001,34,1.378,35,1.7,36,1.378,37,1.111,38,1.378,39,1.001,40,1.378,41,1.001,42,1.378,43,0.901,44,0.901,45,0.901,46,0.811,47,1.111,48,1.378,49,0.901,50,1.236,51,1.378,52,0.901,53,1.236,54,1.378,55,0.901,56,1.236,57,1.378,58,0.901,59,1.001,60,1.378,61,0.027,62,0.027,65,1.003,88,1.378,90,0.338,91,1.898,94,0.898,105,0.338,106,1.42,110,0.466,140,2.402,231,2.402,263,1.378,265,0.811,290,2.746,357,2.836,358,4.815,359,3.207,360,3.906,361,3.953,362,3.906,363,3.207,364,3.906,365,3.906,366,1.948,367,3.906,368,1.898,369,2.836]],["title/interfaces/Notification.html",[131,1.023,370,2.379]],["body/interfaces/Notification.html",[0,0.247,2,0.175,3,0.175,6,0.175,16,0.218,17,0.042,18,0.175,21,0.132,22,0.055,44,1.179,61,0.025,62,0.025,90,0.314,93,3.046,105,0.314,107,3.279,108,0.955,109,1.92,110,0.556,116,2.021,131,1.31,134,1.31,135,1.374,138,1.28,154,3.876,157,1.617,159,1.434,165,1.62,180,1.434,182,1.28,228,2.162,252,4.036,261,2.282,268,3.046,272,1.31,282,2.162,287,2.282,359,3.046,366,1.148,370,4.742,371,2.634,372,4.664,373,5.1,374,2.634,375,2.634,376,2.634,377,2.634,378,3.046,379,2.634,380,3.711,381,2.162,382,1.62,383,1.62,384,2.634,385,2.634,386,1.852,387,2.634,388,2.634,389,2.634,390,2.634,391,3.711,392,3.711,393,3.711,394,2.162,395,2.634,396,2.634,397,3.711,398,3.711,399,3.711,400,2.634,401,3.711,402,2.634,403,2.634,404,2.634,405,2.634,406,3.711,407,2.634,408,2.634,409,2.634,410,2.634,411,2.634]],["title/classes/Password.html",[22,0.06,412,2.037]],["body/classes/Password.html",[2,0.196,3,0.196,6,0.196,16,0.149,17,0.042,21,0.104,22,0.083,29,0.82,59,1.413,61,0.027,62,0.027,90,0.351,94,0.92,105,0.351,106,0.934,108,0.82,109,1.038,110,0.478,135,1.028,157,1.745,167,1.429,242,4.333,244,1.509,254,1.413,263,1.429,265,1.145,278,1.413,330,2.067,412,3.71,413,2.94,414,4.013,415,5.496,416,3.287,417,4.004,418,4.889,419,4.889,420,4.004,421,4.004,422,4.004,423,4.004,424,4.889,425,4.004,426,4.004,427,2.94,428,3.287,429,2.94,430,2.94,431,2.94,432,4.004,433,4.889,434,2.94,435,2.94,436,2.067,437,4.004,438,2.94,439,2.94,440,2.94,441,1.601,442,2.413,443,2.94,444,2.94,445,2.94,446,2.94]],["title/components/PopoverComponent.html",[0,0.193,39,1.023]],["body/components/PopoverComponent.html",[0,0.315,1,0.758,2,0.159,3,0.159,4,1.159,5,1.159,6,0.159,8,0.613,9,1.301,10,0.842,12,1.355,14,1.355,16,0.175,17,0.041,18,0.159,21,0.085,22,0.05,23,0.842,24,1.68,25,1.355,26,0.48,27,1.943,28,1.159,29,0.913,30,1.159,31,0.758,32,1.159,33,0.842,34,1.159,35,0.842,36,1.159,37,0.935,38,1.159,39,1.574,40,1.159,41,0.842,42,1.159,43,0.758,44,0.758,45,0.758,46,0.682,47,0.935,48,1.159,49,0.758,50,1.04,51,1.159,52,0.758,53,1.04,54,1.159,55,0.758,56,1.04,57,1.159,58,0.758,59,0.842,60,1.159,61,0.024,62,0.024,67,1.159,88,1.159,90,0.285,94,0.794,105,0.285,106,1.504,108,0.913,109,0.842,110,0.622,129,1.594,134,1.22,135,0.613,148,2.126,156,2.474,166,1.507,182,1.68,231,1.467,232,1.677,244,0.989,248,2.858,251,2.428,254,1.22,256,2.838,258,3.134,263,2.3,265,1.163,275,2.838,276,2.838,278,0.842,279,2.858,291,2.741,321,2.838,323,3.66,363,3.66,382,2.126,436,2.43,447,2.386,448,2.838,449,3.457,450,3.457,451,3.66,452,3.457,453,5.396,454,3.457,455,3.457,456,3.134,457,4.066,458,2.741,459,2.386,460,3.457,461,2.386,462,3.457,463,2.386,464,3.457,465,2.126,466,2.386,467,2.386,468,4.458,469,2.386,470,3.457,471,2.386,472,2.386,473,2.386,474,2.386,475,2.386,476,1.677,477,2.386,478,2.386,479,2.386]],["title/directives/ShowPasswordDirective.html",[26,0.402,52,0.921]],["body/directives/ShowPasswordDirective.html",[2,0.203,3,0.203,6,0.203,8,0.783,9,0.943,16,0.155,17,0.041,18,0.203,21,0.108,22,0.064,26,0.719,29,0.625,46,0.873,52,1.305,53,1.79,61,0.028,62,0.028,65,1.054,90,0.364,91,1.483,94,0.943,105,0.364,106,1.305,108,0.625,110,0.49,116,1.662,129,1.609,135,0.783,138,1.996,152,3.281,166,1.79,167,2.256,192,1.662,244,0.873,248,3.263,249,2.145,251,1.662,254,1.449,258,3.49,265,1.174,278,1.077,361,2.505,366,1.33,368,2.413,412,3.49,465,2.525,480,3.052,481,2.236,482,2.145,483,3.49,484,3.263,485,3.49,486,3.052,487,2.887,488,3.052,489,2.505,490,2.505,491,2.145,492,4.106,493,3.052,494,5.181,495,5.336,496,4.641,497,4.641,498,3.052,499,3.052,500,3.052,501,3.052,502,3.052,503,3.052,504,4.106,505,3.052,506,4.106,507,3.052,508,4.106,509,3.052,510,3.052,511,3.052,512,3.052,513,3.052,514,3.052]],["title/injectables/SideBarService.html",[146,1.578,272,1.023]],["body/injectables/SideBarService.html",[0,0.344,2,0.225,3,0.225,6,0.225,16,0.171,17,0.042,18,0.225,21,0.12,22,0.07,44,1.837,61,0.03,62,0.03,90,0.403,105,0.403,110,0.617,129,1.913,134,1.551,146,2.393,156,2.669,159,2.393,180,2.393,182,2.135,192,2.99,244,1.396,254,1.551,263,1.643,265,0.967,272,1.723,291,3.377,382,2.702,383,2.702,441,1.841,456,3.634,458,3.002,476,3.634,515,3.38,516,3.38,517,3.38,518,3.38,519,3.38]],["title/components/SidePanelComponent.html",[0,0.193,41,1.023]],["body/components/SidePanelComponent.html",[0,0.349,1,0.833,2,0.175,3,0.175,4,1.273,5,1.273,6,0.175,8,0.673,9,1.319,10,0.925,12,1.449,14,1.449,16,0.187,17,0.042,18,0.175,21,0.093,22,0.055,23,0.925,24,1.796,25,1.449,26,0.513,27,2.028,28,1.273,29,0.952,30,1.273,31,0.833,32,1.273,33,0.925,34,1.273,35,0.925,36,1.273,37,1.027,38,1.273,39,0.925,40,1.273,41,1.642,42,1.273,43,0.833,44,0.833,45,0.833,46,0.749,47,1.027,48,1.273,49,0.833,50,1.142,51,1.273,52,0.833,53,1.142,54,1.273,55,0.833,56,1.142,57,1.273,58,0.833,59,0.925,60,1.273,61,0.025,62,0.025,65,0.949,88,2.384,90,0.313,94,0.849,105,0.313,108,0.757,110,0.441,127,2.598,134,1.305,135,0.673,156,2.474,167,2.261,186,1.842,220,3.819,221,3.516,226,3.286,227,2.151,265,1.057,278,0.925,287,2.273,366,1.142,368,1.796,451,3.034,520,4.283,521,2.62,522,4.46,523,3.696,524,4.18,525,3.696,526,3.696,527,3.696,528,2.62,529,2.62,530,2.62]],["title/injectables/SidePanelService.html",[226,1.782,272,1.023]],["body/injectables/SidePanelService.html",[0,0.335,2,0.21,3,0.21,6,0.21,16,0.159,17,0.042,18,0.21,21,0.111,22,0.066,29,0.644,61,0.029,62,0.029,88,2.67,90,0.375,105,0.375,110,0.642,129,1.847,134,1.479,135,0.807,156,2.442,159,2.282,180,2.282,182,2.036,192,2.931,226,2.576,244,1.347,254,1.479,263,1.528,265,0.899,272,1.663,278,1.11,291,3.31,382,2.576,383,2.576,441,1.712,456,3.532,458,2.897,476,3.532,522,4.685,524,4.639,531,3.145,532,3.145,533,4.19,534,3.145,535,4.19,536,3.145,537,3.145,538,3.145,539,3.145,540,3.145,541,3.145]],["title/directives/SpinningIconDirective.html",[26,0.402,55,0.921]],["body/directives/SpinningIconDirective.html",[2,0.222,3,0.222,6,0.222,8,0.854,9,0.999,16,0.169,17,0.041,18,0.222,21,0.118,22,0.069,26,0.672,29,0.89,46,1.469,47,2.143,55,1.382,56,2.383,61,0.03,62,0.03,65,1.116,90,0.397,94,0.999,105,0.397,108,0.89,110,0.578,116,1.811,121,2.338,129,1.898,135,1.116,140,3.158,152,2.673,244,1.243,251,1.811,254,1.534,278,1.534,366,1.449,368,2.113,482,2.338,483,3.611,484,3.405,485,3.611,487,3.056,491,2.338,542,3.326,543,3.611,544,3.326,545,4.348,546,3.326,547,3.326,548,3.326,549,3.569,550,4.348,551,4.348,552,3.569]],["title/pipes/ToId.html",[209,1.782,273,1.782]],["body/pipes/ToId.html",[2,0.251,3,0.251,6,0.251,8,0.968,16,0.191,17,0.041,18,0.251,21,0.134,22,0.079,29,1.052,59,1.662,61,0.032,62,0.032,90,0.45,108,0.771,109,1.662,110,0.45,135,0.968,157,2.052,166,1.642,209,3.309,244,1.347,254,1.33,265,1.078,272,1.33,273,3.158,278,1.33,386,3.311,441,2.564,553,3.769,554,5.539,555,4.709,556,4.709,557,4.709,558,3.769,559,4.709,560,4.709,561,4.709,562,3.769,563,3.769,564,3.769]],["title/directives/ValidatorsDirective.html",[26,0.402,58,0.921]],["body/directives/ValidatorsDirective.html",[2,0.2,3,0.2,6,0.2,8,0.772,9,0.934,16,0.152,17,0.041,18,0.2,21,0.107,22,0.096,25,1.594,26,0.754,29,0.616,58,1.292,59,1.917,61,0.028,62,0.028,65,1.044,90,0.359,94,0.934,105,0.359,106,1.727,108,0.616,110,0.589,129,1.594,135,0.772,138,2.398,166,1.772,244,1.163,249,2.114,251,1.637,254,1.435,261,2.5,262,3.338,265,1.411,278,1.061,279,2.858,366,1.311,368,2.398,414,3.338,465,3.034,481,2.214,482,2.114,483,3.469,484,3.238,485,3.469,487,2.858,489,3.782,490,2.469,491,2.114,549,3.338,552,3.338,565,3.007,566,4.935,567,4.935,568,4.066,569,4.066,570,3.007,571,3.338,572,3.338,573,4.066,574,3.007,575,4.066,576,4.066,577,3.007,578,3.007,579,3.007,580,4.066,581,4.066]],["title/dependencies.html",[65,0.896,582,1.983]],["body/dependencies.html",[17,0.041,18,0.26,61,0.033,62,0.033,65,1.002,67,2.535,79,3.382,80,2.958,85,2.742,212,3.203,231,2.399,232,2.742,330,2.742,381,3.95,583,3.901,584,5.916,585,3.901,586,3.901,587,3.901,588,3.901,589,3.901,590,3.901,591,3.901,592,2.742,593,3.203,594,3.901,595,3.901,596,3.203,597,3.901,598,3.901,599,3.203,600,3.901,601,3.901,602,3.901,603,3.901,604,3.901]],["title/interfaces/differences.html",[131,1.023,481,1.578]],["body/interfaces/differences.html",[2,0.117,3,0.117,6,0.117,10,0.622,16,0.172,17,0.042,18,0.117,21,0.136,22,0.037,27,1.199,29,0.563,61,0.036,62,0.019,90,0.21,105,0.21,107,1.239,108,0.693,109,1.195,110,0.404,131,0.971,133,3.434,134,1.552,138,2.374,150,1.239,157,1.667,161,1.935,167,2.138,224,1.447,244,1.517,261,1.692,265,1.094,272,0.971,287,1.692,366,0.768,368,0.856,378,2.259,383,1.084,386,1.239,416,3.141,428,1.447,436,1.239,441,1.499,442,1.447,458,2.082,465,2.552,481,2.816,572,2.259,592,1.239,593,2.259,605,1.762,606,3.386,607,4.15,608,4.15,609,4.15,610,1.762,611,3.826,612,1.762,613,3.826,614,1.762,615,2.752,616,1.762,617,1.762,618,1.762,619,1.762,620,1.762,621,1.762,622,2.752,623,3.386,624,1.762,625,2.752,626,1.762,627,1.762,628,1.762,629,1.762,630,2.752,631,1.762,632,1.762,633,1.762,634,1.762,635,1.762,636,1.762,637,1.762,638,1.762,639,1.762,640,1.762,641,1.762,642,1.762,643,1.762,644,1.762,645,1.762,646,1.762,647,1.762,648,1.762,649,3.386,650,4.15,651,1.762,652,1.762,653,1.762,654,1.762,655,1.762,656,1.762,657,4.398,658,1.762,659,1.762,660,1.762,661,1.762,662,1.762,663,1.762,664,1.762,665,1.762,666,1.762,667,1.762,668,1.762,669,3.386,670,3.826,671,2.752,672,1.762,673,1.762,674,1.762,675,2.752,676,1.762,677,2.752,678,1.762,679,1.762,680,2.752,681,1.762,682,1.762,683,1.762,684,4.15,685,1.762,686,3.386,687,1.762,688,1.762,689,1.762,690,1.762,691,1.762,692,1.762,693,1.762,694,1.762,695,1.762,696,1.762,697,1.762,698,1.762,699,1.762,700,1.762,701,1.762,702,1.762,703,1.762,704,2.752,705,2.752,706,1.762,707,1.762,708,1.762,709,1.762,710,1.762,711,1.762,712,1.762,713,1.762,714,1.762,715,1.762,716,1.762,717,1.447,718,1.762]],["title/index.html",[105,0.288,543,1.698,719,2.416]],["body/index.html",[0,0.29,1,1.057,16,0.27,17,0.041,21,0.172,22,0.069,31,1.057,61,0.03,62,0.03,63,1.898,64,1.811,66,2.045,67,1.616,68,2.045,73,1.616,78,3.569,79,2.338,80,2.045,81,2.338,86,2.73,165,2.045,290,2.338,394,2.73,448,2.73,481,1.811,543,3.056,571,3.976,582,2.73,592,2.338,596,3.569,599,4.217,720,5.33,721,3.326,722,4.348,723,3.326,724,3.326,725,4.348,726,3.326,727,3.326,728,4.844,729,4.348,730,3.326,731,3.326,732,3.326,733,5.137,734,3.326,735,3.326,736,3.326,737,3.326,738,3.326,739,4.844,740,3.326,741,3.326,742,4.348,743,4.348,744,4.348,745,3.326,746,3.326,747,4.844,748,4.348,749,3.326,750,3.326,751,3.326,752,3.326,753,3.326,754,3.326,755,3.326,756,3.326,757,3.326,758,3.326,759,3.326,760,3.326,761,3.326]],["title/modules.html",[63,1.554]],["body/modules.html",[17,0.036,61,0.036,62,0.036,63,1.79,64,2.487,73,2.22,80,3.251,246,4.34,762,5.287,763,5.287]],["title/overview.html",[764,3.255]],["body/overview.html",[0,0.189,1,1.701,17,0.041,21,0.101,22,0.059,23,1.003,26,0.394,31,1.701,33,1.889,35,1.889,37,2.097,39,1.889,41,1.889,43,1.701,45,1.422,49,1.701,52,1.701,55,1.701,58,1.701,61,0.027,62,0.027,63,1.533,64,2.914,65,0.729,66,1.747,67,1.381,68,1.747,69,2.333,70,2.333,71,2.333,72,2.333,73,2.963,74,2.75,75,1.997,76,1.997,131,1.003,206,2.333,207,2.333,208,2.333,209,3.291,272,1.003,273,1.747,717,3.211,764,2.333,765,2.841,766,2.841,767,2.841,768,3.912]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.2.5",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":717,"title":{},"body":{"interfaces/differences.html":{},"overview.html":{}}}],["12",{"_index":431,"title":{},"body":{"classes/Password.html":{}}}],["12):string",{"_index":444,"title":{},"body":{"classes/Password.html":{}}}],["2",{"_index":765,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["2.5.6",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":511,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["4",{"_index":768,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["4000",{"_index":634,"title":{},"body":{"interfaces/differences.html":{}}}],["5",{"_index":767,"title":{},"body":{"overview.html":{}}}],["500",{"_index":266,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["500m",{"_index":264,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["6.0.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":766,"title":{},"body":{"overview.html":{}}}],["_",{"_index":616,"title":{},"body":{"interfaces/differences.html":{}}}],["_.isequal(valu",{"_index":648,"title":{},"body":{"interfaces/differences.html":{}}}],["_.reduce(a",{"_index":646,"title":{},"body":{"interfaces/differences.html":{}}}],["_.reduce(b",{"_index":663,"title":{},"body":{"interfaces/differences.html":{}}}],["_notif",{"_index":396,"title":{},"body":{"interfaces/Notification.html":{}}}],["_notif.msg",{"_index":399,"title":{},"body":{"interfaces/Notification.html":{}}}],["_notif.titl",{"_index":401,"title":{},"body":{"interfaces/Notification.html":{}}}],["_open",{"_index":456,"title":{},"body":{"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["a.hasownproperty(key",{"_index":664,"title":{},"body":{"interfaces/differences.html":{}}}],["a[key",{"_index":651,"title":{},"body":{"interfaces/differences.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_",{"_index":446,"title":{},"body":{"classes/Password.html":{}}}],["absolut",{"_index":499,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["abstractcontrol",{"_index":433,"title":{},"body":{"classes/Password.html":{}}}],["ac",{"_index":435,"title":{},"body":{"classes/Password.html":{}}}],["ac.value.passphras",{"_index":438,"title":{},"body":{"classes/Password.html":{}}}],["ac.value.recheckpassphras",{"_index":439,"title":{},"body":{"classes/Password.html":{}}}],["access",{"_index":726,"title":{},"body":{"index.html":{}}}],["accueil",{"_index":169,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["action",{"_index":362,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual_compon",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["add",{"_index":165,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"index.html":{}}}],["addev",{"_index":385,"title":{},"body":{"interfaces/Notification.html":{}}}],["adipis",{"_index":101,"title":{},"body":{"components/BoxComponent.html":{}}}],["afterviewcheck",{"_index":489,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["agent",{"_index":729,"title":{},"body":{"index.html":{}}}],["allow",{"_index":725,"title":{},"body":{"index.html":{}}}],["amet",{"_index":99,"title":{},"body":{"components/BoxComponent.html":{}}}],["angular",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["angular/anim",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{}}}],["angular/form",{"_index":330,"title":{},"body":{"components/FormErrorsComponent.html":{},"classes/Password.html":{},"dependencies.html":{}}}],["angular/http",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":592,"title":{},"body":{"dependencies.html":{},"interfaces/differences.html":{},"index.html":{}}}],["angular2csv",{"_index":618,"title":{},"body":{"interfaces/differences.html":{}}}],["angular2csv(row",{"_index":689,"title":{},"body":{"interfaces/differences.html":{}}}],["anim",{"_index":550,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["api",{"_index":622,"title":{},"body":{"interfaces/differences.html":{}}}],["app",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["app.compon",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"index.html":{},"overview.html":{}}}],["appear",{"_index":575,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["applic",{"_index":722,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":141,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["argument",{"_index":122,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["around",{"_index":450,"title":{},"body":{"components/PopoverComponent.html":{}}}],["array",{"_index":138,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["array|str",{"_index":160,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["attach",{"_index":314,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["au",{"_index":336,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["autoexport",{"_index":757,"title":{},"body":{"index.html":{}}}],["automat",{"_index":758,"title":{},"body":{"index.html":{}}}],["b",{"_index":645,"title":{},"body":{"interfaces/differences.html":{}}}],["b.hasownproperty(key",{"_index":647,"title":{},"body":{"interfaces/differences.html":{}}}],["b[key",{"_index":649,"title":{},"body":{"interfaces/differences.html":{}}}],["badinput",{"_index":581,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["base",{"_index":721,"title":{},"body":{"index.html":{}}}],["besid",{"_index":196,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["between",{"_index":606,"title":{},"body":{"interfaces/differences.html":{}}}],["boolean",{"_index":436,"title":{},"body":{"classes/Password.html":{},"components/PopoverComponent.html":{},"interfaces/differences.html":{}}}],["bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/PopoverComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":232,"title":{},"body":{"modules/CoreModule.html":{},"components/PopoverComponent.html":{},"dependencies.html":{}}}],["bottom",{"_index":136,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["box",{"_index":92,"title":{},"body":{"components/BoxComponent.html":{}}}],["box'},{'nam",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["box.component.html",{"_index":104,"title":{},"body":{"components/BoxComponent.html":{}}}],["box.component.scss",{"_index":103,"title":{},"body":{"components/BoxComponent.html":{}}}],["box/box.compon",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{}}}],["boxcompon",{"_index":31,"title":{"components/BoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":763,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["bubbl",{"_index":115,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["build",{"_index":742,"title":{},"body":{"index.html":{}}}],["button",{"_index":423,"title":{},"body":{"classes/Password.html":{}}}],["call",{"_index":117,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["caractèr",{"_index":339,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["chang",{"_index":279,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ValidatorsDirective.html":{}}}],["changes.debouncetim",{"_index":302,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["changes.debouncetime.currentvalu",{"_index":305,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["changes['open'].currentvalu",{"_index":477,"title":{},"body":{"components/PopoverComponent.html":{}}}],["charact",{"_index":560,"title":{},"body":{"pipes/ToId.html":{}}}],["charset",{"_index":445,"title":{},"body":{"classes/Password.html":{}}}],["check",{"_index":414,"title":{},"body":{"classes/Password.html":{},"directives/ValidatorsDirective.html":{}}}],["child",{"_index":119,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["class",{"_index":22,"title":{"classes/Password.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{},"overview.html":{}}}],["cleartimeout(notif.timeout",{"_index":403,"title":{},"body":{"interfaces/Notification.html":{}}}],["click",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["click(ev",{"_index":123,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["clickstoppropag",{"_index":45,"title":{"directives/ClickStopPropagation.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["close",{"_index":291,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["closehint",{"_index":205,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["cluster_appmodul",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["code",{"_index":751,"title":{},"body":{"index.html":{}}}],["cog",{"_index":170,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["column",{"_index":670,"title":{},"body":{"interfaces/differences.html":{}}}],["column.nam",{"_index":675,"title":{},"body":{"interfaces/differences.html":{}}}],["column.prop",{"_index":682,"title":{},"body":{"interfaces/differences.html":{}}}],["columns.foreach((column",{"_index":681,"title":{},"body":{"interfaces/differences.html":{}}}],["commit",{"_index":756,"title":{},"body":{"index.html":{}}}],["commonli",{"_index":620,"title":{},"body":{"interfaces/differences.html":{}}}],["commonmodul",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["commonservic",{"_index":224,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/differences.html":{}}}],["compat",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":384,"title":{},"body":{"interfaces/Notification.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"index.html":{},"overview.html":{}}}],["component,input",{"_index":328,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["conf",{"_index":168,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["configur",{"_index":19,"title":{"interfaces/Configuration.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["confirmpassword",{"_index":437,"title":{},"body":{"classes/Password.html":{}}}],["consectetur",{"_index":100,"title":{},"body":{"components/BoxComponent.html":{}}}],["console.log(this.popov",{"_index":478,"title":{},"body":{"components/PopoverComponent.html":{}}}],["const",{"_index":167,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"classes/Password.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["constructor",{"_index":366,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["constructor(priv",{"_index":491,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["constructor(publ",{"_index":186,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/SidePanelComponent.html":{}}}],["constructor(render",{"_index":482,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["constructor(sidepanel",{"_index":528,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["contain",{"_index":93,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Notification.html":{}}}],["content",{"_index":359,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Notification.html":{}}}],["context",{"_index":524,"title":{},"body":{"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["contient",{"_index":335,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["control",{"_index":180,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["core",{"_index":596,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/dist",{"_index":739,"title":{},"body":{"index.html":{}}}],["coremodul",{"_index":73,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["correspondr",{"_index":343,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["coverag",{"_index":752,"title":{},"body":{"index.html":{}}}],["createsubsript",{"_index":255,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["css",{"_index":181,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["csv",{"_index":593,"title":{},"body":{"dependencies.html":{},"interfaces/differences.html":{}}}],["cursor",{"_index":501,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["d",{"_index":639,"title":{},"body":{"interfaces/differences.html":{}}}],["d===0",{"_index":643,"title":{},"body":{"interfaces/differences.html":{}}}],["data.click",{"_index":188,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["data.url",{"_index":190,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["databl",{"_index":666,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable._internalcolumn",{"_index":673,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable.column",{"_index":672,"title":{},"body":{"interfaces/differences.html":{}}}],["datatable.rows.map((row",{"_index":679,"title":{},"body":{"interfaces/differences.html":{}}}],["datatablecompon",{"_index":668,"title":{},"body":{"interfaces/differences.html":{}}}],["de",{"_index":346,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["debounc",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["debounceinputdirect",{"_index":49,"title":{"directives/DebounceInputDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["debouncetim",{"_index":259,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["debouncetime(this.debouncetim",{"_index":299,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["decimalsepar",{"_index":692,"title":{},"body":{"interfaces/differences.html":{}}}],["declar",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":469,"title":{},"body":{"components/PopoverComponent.html":{}}}],["deeper",{"_index":653,"title":{},"body":{"interfaces/differences.html":{}}}],["default",{"_index":263,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["defi",{"_index":720,"title":{},"body":{"index.html":{}}}],["defin",{"_index":110,"title":{},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["delay",{"_index":389,"title":{},"body":{"interfaces/Notification.html":{}}}],["delet",{"_index":406,"title":{},"body":{"interfaces/Notification.html":{}}}],["delete(id",{"_index":407,"title":{},"body":{"interfaces/Notification.html":{}}}],["deleteal",{"_index":411,"title":{},"body":{"interfaces/Notification.html":{}}}],["depend",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":261,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["descript",{"_index":90,"title":{},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["destruct",{"_index":283,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["develop",{"_index":741,"title":{},"body":{"index.html":{}}}],["die",{"_index":292,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["differ",{"_index":481,"title":{"interfaces/differences.html":{}},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{}}}],["differences(a",{"_index":644,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.different.length",{"_index":640,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.missing_from_first.length",{"_index":641,"title":{},"body":{"interfaces/differences.html":{}}}],["differences.missing_from_second.length",{"_index":642,"title":{},"body":{"interfaces/differences.html":{}}}],["direct",{"_index":26,"title":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"overview.html":{}}}],["directives/debounceinput.direct",{"_index":233,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/showpassword.direct",{"_index":237,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/spinningicon.direct",{"_index":234,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/stoppropagation.direct",{"_index":235,"title":{},"body":{"modules/CoreModule.html":{}}}],["directives/validators.direct",{"_index":236,"title":{},"body":{"modules/CoreModule.html":{}}}],["displat",{"_index":155,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["display",{"_index":91,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["div",{"_index":492,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["doc",{"_index":753,"title":{},"body":{"index.html":{}}}],["documentaion",{"_index":749,"title":{},"body":{"index.html":{}}}],["doit",{"_index":342,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["dolor",{"_index":97,"title":{},"body":{"components/BoxComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["dynam",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":150,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/differences.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/ValidatorsDirective.html":{}}}],["elementref",{"_index":485,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["elit",{"_index":102,"title":{},"body":{"components/BoxComponent.html":{}}}],["email",{"_index":350,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["emit",{"_index":268,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["encapsul",{"_index":313,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["equal",{"_index":636,"title":{},"body":{"interfaces/differences.html":{}}}],["equalityobjects(a,b",{"_index":637,"title":{},"body":{"interfaces/differences.html":{}}}],["errors.compon",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{}}}],["errors.component.html",{"_index":317,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.scss",{"_index":316,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.t",{"_index":312,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.ts:23",{"_index":324,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors.component.ts:27",{"_index":327,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["errors/form",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{}}}],["eval",{"_index":730,"title":{},"body":{"index.html":{}}}],["event",{"_index":116,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["event.preventdefault",{"_index":309,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["event.stoppropag",{"_index":130,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["event.typ",{"_index":201,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["eventemitt",{"_index":144,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{}}}],["exampl",{"_index":94,"title":{},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["export",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{},"overview.html":{}}}],["exportas:'spin",{"_index":548,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["exportascsv(datat",{"_index":667,"title":{},"body":{"interfaces/differences.html":{}}}],["ey",{"_index":495,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["fa",{"_index":152,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["fals",{"_index":458,"title":{},"body":{"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["fb.group",{"_index":417,"title":{},"body":{"classes/Password.html":{}}}],["fetch",{"_index":388,"title":{},"body":{"interfaces/Notification.html":{}}}],["fieldsepar",{"_index":690,"title":{},"body":{"interfaces/differences.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["filenam",{"_index":669,"title":{},"body":{"interfaces/differences.html":{}}}],["filter((",{"_index":676,"title":{},"body":{"interfaces/differences.html":{}}}],["first",{"_index":572,"title":{},"body":{"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["flat",{"_index":702,"title":{},"body":{"interfaces/differences.html":{}}}],["flat(obj",{"_index":705,"title":{},"body":{"interfaces/differences.html":{}}}],["flat(obj[key",{"_index":709,"title":{},"body":{"interfaces/differences.html":{}}}],["flatten(obj",{"_index":703,"title":{},"body":{"interfaces/differences.html":{}}}],["flow",{"_index":286,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["folder",{"_index":750,"title":{},"body":{"index.html":{}}}],["form",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{}}}],["formcontrol",{"_index":329,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["formerror",{"_index":315,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["formerrors'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["formerrorscompon",{"_index":33,"title":{"components/FormErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["formpassphrases.valid",{"_index":425,"title":{},"body":{"classes/Password.html":{}}}],["forroot",{"_index":243,"title":{},"body":{"modules/CoreModule.html":{}}}],["front.gitimport",{"_index":737,"title":{},"body":{"index.html":{}}}],["function",{"_index":157,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["g",{"_index":151,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["gener",{"_index":748,"title":{},"body":{"index.html":{}}}],["generatepassword",{"_index":426,"title":{},"body":{"classes/Password.html":{}}}],["generatepassword(length",{"_index":427,"title":{},"body":{"classes/Password.html":{}}}],["generatepassword(length:numb",{"_index":443,"title":{},"body":{"classes/Password.html":{}}}],["get",{"_index":719,"title":{"index.html":{}},"body":{}}],["gi",{"_index":564,"title":{},"body":{"pipes/ToId.html":{}}}],["git@github.com:defi",{"_index":734,"title":{},"body":{"index.html":{}}}],["go",{"_index":173,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["goodinput",{"_index":580,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["goodinput/badinout",{"_index":576,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["goto(data",{"_index":187,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["graphql",{"_index":623,"title":{},"body":{"interfaces/differences.html":{}}}],["happen",{"_index":118,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["header",{"_index":378,"title":{},"body":{"interfaces/Notification.html":{},"interfaces/differences.html":{}}}],["hey",{"_index":451,"title":{},"body":{"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["hint",{"_index":195,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["hintclass",{"_index":184,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["home",{"_index":153,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["host",{"_index":490,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["hostel",{"_index":484,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["hostlisten",{"_index":121,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"directives/SpinningIconDirective.html":{}}}],["hostlistener(\"click",{"_index":126,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["hostlistener('keyup",{"_index":307,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["hover",{"_index":198,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["htmlid",{"_index":555,"title":{},"body":{"pipes/ToId.html":{}}}],["http://localhost:3000",{"_index":631,"title":{},"body":{"interfaces/differences.html":{}}}],["i'm",{"_index":452,"title":{},"body":{"components/PopoverComponent.html":{}}}],["icon",{"_index":140,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["icon]'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["id",{"_index":154,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{}}}],["if(input.typ",{"_index":505,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["if(typeof",{"_index":707,"title":{},"body":{"interfaces/differences.html":{}}}],["ignor",{"_index":683,"title":{},"body":{"interfaces/differences.html":{}}}],["implement",{"_index":166,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["import",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{},"index.html":{}}}],["index",{"_index":105,"title":{"index.html":{}},"body":{"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["informatiqu",{"_index":735,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":500,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["init",{"_index":573,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["inject",{"_index":272,"title":{"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{},"overview.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["input('conf",{"_index":185,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["input('model",{"_index":331,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["input('nam",{"_index":369,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input('open",{"_index":472,"title":{},"body":{"components/PopoverComponent.html":{}}}],["input('patternnam",{"_index":332,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["input('plac",{"_index":473,"title":{},"body":{"components/PopoverComponent.html":{}}}],["input.typ",{"_index":506,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["input]'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["instal",{"_index":723,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":290,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["instanci",{"_index":628,"title":{},"body":{"interfaces/differences.html":{}}}],["interact",{"_index":158,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["interfac",{"_index":131,"title":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{},"overview.html":{}}}],["interv",{"_index":624,"title":{},"body":{"interfaces/differences.html":{}}}],["invalid",{"_index":322,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["ipsum",{"_index":96,"title":{},"body":{"components/BoxComponent.html":{}}}],["item",{"_index":148,"title":{"interfaces/Item.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{}}}],["iterablediff",{"_index":379,"title":{},"body":{"interfaces/Notification.html":{}}}],["join('').replace(/[`~!@#$%^&*()_",{"_index":563,"title":{},"body":{"pipes/ToId.html":{}}}],["js",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":745,"title":{},"body":{"index.html":{}}}],["json.stringify(obj",{"_index":713,"title":{},"body":{"interfaces/differences.html":{}}}],["key",{"_index":465,"title":{},"body":{"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["keylisten",{"_index":247,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyup",{"_index":260,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyup(ev",{"_index":270,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["keyupevent(ev",{"_index":308,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["la",{"_index":344,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["launch",{"_index":571,"title":{},"body":{"directives/ValidatorsDirective.html":{},"index.html":{}}}],["left",{"_index":361,"title":{},"body":{"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["length",{"_index":430,"title":{},"body":{"classes/Password.html":{}}}],["librari",{"_index":743,"title":{},"body":{"index.html":{}}}],["line:compon",{"_index":177,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["link",{"_index":197,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["list",{"_index":137,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["liter",{"_index":462,"title":{},"body":{"components/PopoverComponent.html":{}}}],["load",{"_index":368,"title":{},"body":{"components/NavbarComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["localstorag",{"_index":390,"title":{},"body":{"interfaces/Notification.html":{}}}],["localstorage.getitem(\"notificationsdelay",{"_index":392,"title":{},"body":{"interfaces/Notification.html":{}}}],["lodash",{"_index":617,"title":{},"body":{"interfaces/differences.html":{}}}],["logo",{"_index":360,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lorem",{"_index":95,"title":{},"body":{"components/BoxComponent.html":{}}}],["main",{"_index":143,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["major",{"_index":761,"title":{},"body":{"index.html":{}}}],["make",{"_index":448,"title":{},"body":{"components/PopoverComponent.html":{},"index.html":{}}}],["map((column",{"_index":674,"title":{},"body":{"interfaces/differences.html":{}}}],["match",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchpassword",{"_index":424,"title":{},"body":{"classes/Password.html":{}}}],["matchpassword(ac",{"_index":432,"title":{},"body":{"classes/Password.html":{}}}],["matchpassword.matchpassword",{"_index":420,"title":{},"body":{"classes/Password.html":{}}}],["member",{"_index":629,"title":{},"body":{"interfaces/differences.html":{}}}],["metadata",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["method",{"_index":254,"title":{},"body":{"directives/DebounceInputDirective.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["minor",{"_index":760,"title":{},"body":{"index.html":{}}}],["miss",{"_index":613,"title":{},"body":{"interfaces/differences.html":{}}}],["missing_from_first",{"_index":608,"title":{},"body":{"interfaces/differences.html":{}}}],["missing_from_second",{"_index":609,"title":{},"body":{"interfaces/differences.html":{}}}],["model",{"_index":318,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.maxlength.requiredlength",{"_index":341,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.minlength.requiredlength",{"_index":338,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["model.errors.pattern.requiredpattern",{"_index":333,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["modul",{"_index":63,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/core/sidebar/sidebar.compon",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["modulewithprovid",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{}}}],["moin",{"_index":337,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["mouseov",{"_index":202,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["ms",{"_index":625,"title":{},"body":{"interfaces/differences.html":{}}}],["msg",{"_index":372,"title":{},"body":{"interfaces/Notification.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["navbar",{"_index":358,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["navbar.component.html",{"_index":365,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":364,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.compon",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["navbarcompon",{"_index":35,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["new",{"_index":287,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["newobj",{"_index":704,"title":{},"body":{"interfaces/differences.html":{}}}],["newobj[key]=obj[key",{"_index":710,"title":{},"body":{"interfaces/differences.html":{}}}],["newwindow(data",{"_index":189,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["next",{"_index":176,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["ng",{"_index":231,"title":{},"body":{"modules/CoreModule.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"dependencies.html":{}}}],["ngafterviewcheck",{"_index":566,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["ngbmodul",{"_index":230,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngbmodule.forroot",{"_index":241,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngbpopov",{"_index":468,"title":{},"body":{"components/PopoverComponent.html":{}}}],["ngmodel",{"_index":320,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["ngmodul",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{}}}],["ngonchang",{"_index":256,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["ngonchanges(chang",{"_index":275,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["ngondestroy",{"_index":257,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["ngoninit",{"_index":258,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["ngx",{"_index":599,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["non",{"_index":688,"title":{},"body":{"interfaces/differences.html":{}}}],["notif",{"_index":370,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/Notification.html":{}}}],["notif.id",{"_index":398,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.msg",{"_index":400,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.timeout",{"_index":404,"title":{},"body":{"interfaces/Notification.html":{}}}],["notif.titl",{"_index":402,"title":{},"body":{"interfaces/Notification.html":{}}}],["notifications'},{'nam",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["notifications/notifications.compon",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{}}}],["notificationscompon",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["notificationsdelay",{"_index":391,"title":{},"body":{"interfaces/Notification.html":{}}}],["notificationsservic",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Notification.html":{}}}],["npm",{"_index":733,"title":{},"body":{"index.html":{}}}],["null",{"_index":442,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["number",{"_index":428,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["obj[key",{"_index":708,"title":{},"body":{"interfaces/differences.html":{}}}],["object",{"_index":133,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/differences.html":{}}}],["object.keys(obj).map(key",{"_index":706,"title":{},"body":{"interfaces/differences.html":{}}}],["obligatoir",{"_index":334,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["observ",{"_index":282,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["onchang",{"_index":250,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["onclick(ev",{"_index":128,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["ondestroy",{"_index":249,"title":{},"body":{"directives/DebounceInputDirective.html":{},"directives/ShowPasswordDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["oninit",{"_index":248,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{}}}],["oninputchang",{"_index":567,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["oninputchange($ev",{"_index":577,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["open",{"_index":156,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["open(templ",{"_index":533,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["open/clos",{"_index":182,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["openhint",{"_index":204,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["openhint/closehint",{"_index":183,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["option",{"_index":135,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["oui",{"_index":687,"title":{},"body":{"interfaces/differences.html":{}}}],["out",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["output",{"_index":145,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{}}}],["outsid",{"_index":159,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["overrid",{"_index":325,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["overview",{"_index":764,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":582,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":510,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["panel.compon",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{}}}],["panel.component.html",{"_index":527,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.scss",{"_index":526,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.t",{"_index":521,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.ts:27",{"_index":529,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":530,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["panel/sid",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["paramet",{"_index":278,"title":{},"body":{"directives/DebounceInputDirective.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["parent",{"_index":512,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["pass",{"_index":347,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["passphras",{"_index":415,"title":{},"body":{"classes/Password.html":{}}}],["password",{"_index":412,"title":{"classes/Password.html":{}},"body":{"classes/Password.html":{},"directives/ShowPasswordDirective.html":{}}}],["password]'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["patch",{"_index":759,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":326,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["patternnam",{"_index":319,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["phrase",{"_index":345,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["pipe",{"_index":273,"title":{"pipes/ToId.html":{}},"body":{"directives/DebounceInputDirective.html":{},"pipes/ToId.html":{},"overview.html":{}}}],["pipe/toid.pip",{"_index":238,"title":{},"body":{"modules/CoreModule.html":{}}}],["pipetransform",{"_index":561,"title":{},"body":{"pipes/ToId.html":{}}}],["placement",{"_index":457,"title":{},"body":{"components/PopoverComponent.html":{}}}],["placment",{"_index":460,"title":{},"body":{"components/PopoverComponent.html":{}}}],["playground",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["plu",{"_index":340,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["pointer",{"_index":502,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["popop",{"_index":449,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popov",{"_index":453,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover'},{'nam",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["popover.component.html",{"_index":455,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover.component.scss",{"_index":454,"title":{},"body":{"components/PopoverComponent.html":{}}}],["popover/popover.compon",{"_index":239,"title":{},"body":{"modules/CoreModule.html":{}}}],["popovercompon",{"_index":39,"title":{"components/PopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["posit",{"_index":498,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["possibl",{"_index":164,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["present",{"_index":149,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["prevent",{"_index":114,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["privat",{"_index":251,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["promise((resolv",{"_index":698,"title":{},"body":{"interfaces/differences.html":{}}}],["prop",{"_index":611,"title":{},"body":{"interfaces/differences.html":{}}}],["propag",{"_index":120,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["propagation]'},{'nam",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["properti",{"_index":134,"title":{},"body":{"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["propnam",{"_index":475,"title":{},"body":{"components/PopoverComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"overview.html":{}}}],["providers/common.servic",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers/notifications.servic",{"_index":229,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers/sidebar.servic",{"_index":147,"title":{},"body":{"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{}}}],["providers/sidepanel.servic",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["public",{"_index":127,"title":{},"body":{"directives/ClickStopPropagation.html":{},"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["public_api",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["pure",{"_index":556,"title":{},"body":{"pipes/ToId.html":{}}}],["put",{"_index":569,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["quotestr",{"_index":691,"title":{},"body":{"interfaces/differences.html":{}}}],["r",{"_index":680,"title":{},"body":{"interfaces/differences.html":{}}}],["r[prop",{"_index":686,"title":{},"body":{"interfaces/differences.html":{}}}],["recheck",{"_index":421,"title":{},"body":{"classes/Password.html":{}}}],["recheckpassphras",{"_index":419,"title":{},"body":{"classes/Password.html":{}}}],["redirect",{"_index":162,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["reflect",{"_index":464,"title":{},"body":{"components/PopoverComponent.html":{}}}],["refresh",{"_index":626,"title":{},"body":{"interfaces/differences.html":{}}}],["refreshtokeninterv",{"_index":627,"title":{},"body":{"interfaces/differences.html":{}}}],["regist",{"_index":285,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["reject",{"_index":699,"title":{},"body":{"interfaces/differences.html":{}}}],["remov",{"_index":386,"title":{},"body":{"interfaces/Notification.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["removeev",{"_index":387,"title":{},"body":{"interfaces/Notification.html":{}}}],["render",{"_index":487,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["renderer2",{"_index":483,"title":{},"body":{"directives/ShowPasswordDirective.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["replace(/\\\"([^\"]+)\\\":/g",{"_index":716,"title":{},"body":{"interfaces/differences.html":{}}}],["replace(/\\\\\"/g",{"_index":714,"title":{},"body":{"interfaces/differences.html":{}}}],["replace(/\\uffff/g",{"_index":718,"title":{},"body":{"interfaces/differences.html":{}}}],["repositori",{"_index":727,"title":{},"body":{"index.html":{}}}],["reset",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["resolv",{"_index":701,"title":{},"body":{"interfaces/differences.html":{}}}],["result",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"dependencies.html":{},"interfaces/differences.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.differ",{"_index":655,"title":{},"body":{"interfaces/differences.html":{}}}],["result.different.concat(_.map(deeper.differ",{"_index":656,"title":{},"body":{"interfaces/differences.html":{}}}],["result.different.push(key",{"_index":652,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first",{"_index":660,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first.concat(_.map(deeper.missing_from_first",{"_index":661,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_first.push(key",{"_index":665,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second",{"_index":658,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second.concat(_.map(deeper.missing_from_second",{"_index":659,"title":{},"body":{"interfaces/differences.html":{}}}],["result.missing_from_second.push(key",{"_index":662,"title":{},"body":{"interfaces/differences.html":{}}}],["return",{"_index":244,"title":{},"body":{"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["right",{"_index":363,"title":{},"body":{"components/NavbarComponent.html":{},"components/PopoverComponent.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["rootmodul",{"_index":738,"title":{},"body":{"index.html":{}}}],["rout",{"_index":174,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["router",{"_index":163,"title":{},"body":{"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{}}}],["routerlink",{"_index":240,"title":{},"body":{"modules/CoreModule.html":{}}}],["routermodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["routermodule.forroot([{path",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":678,"title":{},"body":{"interfaces/differences.html":{}}}],["row[prop",{"_index":684,"title":{},"body":{"interfaces/differences.html":{}}}],["run",{"_index":747,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":381,"title":{},"body":{"interfaces/Notification.html":{},"dependencies.html":{}}}],["rxjs/operators/debouncetim",{"_index":295,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["rxjs/subject",{"_index":293,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["rxjs/subscript",{"_index":294,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["s",{"_index":731,"title":{},"body":{"index.html":{}}}],["same",{"_index":416,"title":{},"body":{"classes/Password.html":{},"interfaces/differences.html":{}}}],["sandbox",{"_index":746,"title":{},"body":{"index.html":{}}}],["script",{"_index":744,"title":{},"body":{"index.html":{}}}],["second",{"_index":615,"title":{},"body":{"interfaces/differences.html":{}}}],["selector",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["set",{"_index":171,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["settimeout",{"_index":700,"title":{},"body":{"interfaces/differences.html":{}}}],["share",{"_index":619,"title":{},"body":{"interfaces/differences.html":{}}}],["show",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{}}}],["showlabel",{"_index":693,"title":{},"body":{"interfaces/differences.html":{}}}],["showpassworddirect",{"_index":52,"title":{"directives/ShowPasswordDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["showtitl",{"_index":694,"title":{},"body":{"interfaces/differences.html":{}}}],["side",{"_index":220,"title":{},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{}}}],["sidebar",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{}}}],["sidebar.component.html",{"_index":178,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["sidebar.component.scss",{"_index":179,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["sidebar/sidebar.compon",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidebarcompon",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["sidebarservic",{"_index":146,"title":{"injectables/SideBarService.html":{}},"body":{"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"interfaces/Item.html":{},"injectables/SideBarService.html":{}}}],["sidepanel",{"_index":522,"title":{},"body":{"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["sidepanel'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["sidepanelcompon",{"_index":41,"title":{"components/SidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"overview.html":{}}}],["sidepanelservic",{"_index":226,"title":{"injectables/SidePanelService.html":{}},"body":{"modules/CoreModule.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["simplechang",{"_index":276,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{}}}],["sit",{"_index":98,"title":{},"body":{"components/BoxComponent.html":{}}}],["slash",{"_index":496,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"interfaces/Configuration.html":{},"modules/CoreModule.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["sp",{"_index":523,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["sp.open(templ",{"_index":525,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["special",{"_index":559,"title":{},"body":{"pipes/ToId.html":{}}}],["specif",{"_index":754,"title":{},"body":{"index.html":{}}}],["spin",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["spinner",{"_index":551,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["spinningicondirect",{"_index":55,"title":{"directives/SpinningIconDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"overview.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/core/box/box.component.t",{"_index":89,"title":{},"body":{"components/BoxComponent.html":{}}}],["src/modules/core/box/box.component.ts:17",{"_index":111,"title":{},"body":{"components/BoxComponent.html":{}}}],["src/modules/core/core.module.t",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/modules/core/directives/debounceinput.directive.t",{"_index":245,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:18",{"_index":267,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:22",{"_index":269,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:26",{"_index":288,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:30",{"_index":289,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:37",{"_index":284,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:40",{"_index":274,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:46",{"_index":277,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:52",{"_index":280,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/debounceinput.directive.ts:60",{"_index":271,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.t",{"_index":480,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.ts:12",{"_index":486,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/showpassword.directive.ts:19",{"_index":488,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.t",{"_index":542,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:16",{"_index":544,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:23",{"_index":546,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/spinningicon.directive.ts:28",{"_index":547,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["src/modules/core/directives/stoppropagation.directive.t",{"_index":113,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["src/modules/core/directives/stoppropagation.directive.ts:18",{"_index":124,"title":{},"body":{"directives/ClickStopPropagation.html":{}}}],["src/modules/core/directives/validators.directive.t",{"_index":565,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:18",{"_index":568,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:28",{"_index":570,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/directives/validators.directive.ts:35",{"_index":574,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["src/modules/core/form",{"_index":311,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["src/modules/core/navbar/navbar.component.t",{"_index":357,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/modules/core/navbar/navbar.component.ts:30",{"_index":367,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/modules/core/pipe/toid.pipe.t",{"_index":553,"title":{},"body":{"pipes/ToId.html":{}}}],["src/modules/core/pipe/toid.pipe.ts:13",{"_index":558,"title":{},"body":{"pipes/ToId.html":{}}}],["src/modules/core/popover/popover.component.t",{"_index":447,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:22",{"_index":459,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:26",{"_index":461,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:30",{"_index":467,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:31",{"_index":471,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:35",{"_index":463,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/popover/popover.component.ts:38",{"_index":466,"title":{},"body":{"components/PopoverComponent.html":{}}}],["src/modules/core/providers/common.service.t",{"_index":605,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:12",{"_index":610,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:16",{"_index":612,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/common.service.ts:20",{"_index":614,"title":{},"body":{"interfaces/differences.html":{}}}],["src/modules/core/providers/notifications.service.t",{"_index":371,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:12",{"_index":374,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:16",{"_index":377,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:20",{"_index":375,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/notifications.service.ts:24",{"_index":376,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/modules/core/providers/sidebar.service.t",{"_index":515,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:11",{"_index":519,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:16",{"_index":517,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:23",{"_index":516,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidebar.service.ts:30",{"_index":518,"title":{},"body":{"injectables/SideBarService.html":{}}}],["src/modules/core/providers/sidepanel.service.t",{"_index":531,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:11",{"_index":537,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:12",{"_index":539,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:13",{"_index":538,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:17",{"_index":534,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:26",{"_index":532,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/providers/sidepanel.service.ts:33",{"_index":536,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["src/modules/core/sid",{"_index":520,"title":{},"body":{"components/SidePanelComponent.html":{}}}],["src/modules/core/sidebar/sidebar.component.t",{"_index":132,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:12",{"_index":353,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:16",{"_index":354,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:20",{"_index":352,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:24",{"_index":351,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:28",{"_index":356,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:32",{"_index":355,"title":{},"body":{"interfaces/Item.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:42",{"_index":142,"title":{},"body":{"interfaces/Configuration.html":{}}}],["src/modules/core/sidebar/sidebar.component.ts:47",{"_index":139,"title":{},"body":{"interfaces/Configuration.html":{}}}],["src/modules/core/validators/password.validator.t",{"_index":413,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/core/validators/password.validator.ts:27",{"_index":434,"title":{},"body":{"classes/Password.html":{}}}],["src/modules/core/validators/password.validator.ts:37",{"_index":429,"title":{},"body":{"classes/Password.html":{}}}],["ssh",{"_index":728,"title":{},"body":{"index.html":{}}}],["ssh/id_rsa",{"_index":732,"title":{},"body":{"index.html":{}}}],["start",{"_index":543,"title":{"index.html":{}},"body":{"directives/SpinningIconDirective.html":{},"index.html":{}}}],["start(ev",{"_index":545,"title":{},"body":{"directives/SpinningIconDirective.html":{}}}],["static",{"_index":242,"title":{},"body":{"modules/CoreModule.html":{},"classes/Password.html":{}}}],["statu",{"_index":323,"title":{},"body":{"components/FormErrorsComponent.html":{},"components/PopoverComponent.html":{}}}],["stop",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"directives/ClickStopPropagation.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{}}}],["string",{"_index":109,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["stringifywithoutpropertiesquot",{"_index":711,"title":{},"body":{"interfaces/differences.html":{}}}],["stringifywithoutpropertiesquote(obj",{"_index":712,"title":{},"body":{"interfaces/differences.html":{}}}],["styleurl",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["sub_path",{"_index":657,"title":{},"body":{"interfaces/differences.html":{}}}],["subject",{"_index":252,"title":{},"body":{"directives/DebounceInputDirective.html":{},"interfaces/Notification.html":{}}}],["submit",{"_index":422,"title":{},"body":{"classes/Password.html":{}}}],["subscribe(",{"_index":300,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["subscript",{"_index":253,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["support",{"_index":246,"title":{},"body":{"directives/DebounceInputDirective.html":{},"modules.html":{}}}],["sure",{"_index":724,"title":{},"body":{"index.html":{}}}],["svg",{"_index":762,"title":{},"body":{"modules.html":{}}}],["tablecolumn",{"_index":671,"title":{},"body":{"interfaces/differences.html":{}}}],["tag",{"_index":440,"title":{},"body":{"classes/Password.html":{}}}],["team/ngx",{"_index":736,"title":{},"body":{"index.html":{}}}],["templat",{"_index":88,"title":{},"body":{"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["test",{"_index":635,"title":{},"body":{"interfaces/differences.html":{}}}],["text",{"_index":507,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this._open",{"_index":476,"title":{},"body":{"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["this.api",{"_index":630,"title":{},"body":{"interfaces/differences.html":{}}}],["this.context",{"_index":541,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["this.createsubsript",{"_index":296,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.debounce.emit(",{"_index":301,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.defaulttimeout(notif",{"_index":405,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.delete(notif.id",{"_index":393,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.differences(a,b",{"_index":638,"title":{},"body":{"interfaces/differences.html":{}}}],["this.differences(a[key",{"_index":654,"title":{},"body":{"interfaces/differences.html":{}}}],["this.graphql",{"_index":632,"title":{},"body":{"interfaces/differences.html":{}}}],["this.hintclass",{"_index":200,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.hostelement.nativeel",{"_index":504,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.hostelement.nativeelement.parentnod",{"_index":513,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.notif",{"_index":409,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.notifications.filter(notif",{"_index":410,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.notifications.map(notif",{"_index":397,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.oninputchang",{"_index":578,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["this.popover.open",{"_index":479,"title":{},"body":{"components/PopoverComponent.html":{}}}],["this.refreshtokeninterv",{"_index":633,"title":{},"body":{"interfaces/differences.html":{}}}],["this.removeevent.next(id",{"_index":408,"title":{},"body":{"interfaces/Notification.html":{}}}],["this.renderer.addclass(div",{"_index":494,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.addclass(this.hostelement.nativeel",{"_index":549,"title":{},"body":{"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["this.renderer.createelement('i",{"_index":493,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.insertbefore(par",{"_index":514,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.listen(div",{"_index":503,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.removeclass(div",{"_index":508,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.removeclass(this.hostelement.nativeel",{"_index":552,"title":{},"body":{"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["this.renderer.setstyle(div",{"_index":497,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeel",{"_index":509,"title":{},"body":{"directives/ShowPasswordDirective.html":{}}}],["this.sidebar._open",{"_index":203,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.sidebar.toggl",{"_index":194,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["this.subject.next(ev",{"_index":310,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.observers[0",{"_index":303,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.observers[0]['duetim",{"_index":304,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subject.pip",{"_index":298,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subscript",{"_index":297,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.subscription.unsubscrib",{"_index":306,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["this.templ",{"_index":540,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["this.validators.valid",{"_index":579,"title":{},"body":{"directives/ValidatorsDirective.html":{}}}],["time",{"_index":262,"title":{},"body":{"directives/DebounceInputDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["timeout",{"_index":373,"title":{},"body":{"interfaces/Notification.html":{}}}],["titl",{"_index":107,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Notification.html":{},"interfaces/differences.html":{}}}],["title:str",{"_index":112,"title":{},"body":{"components/BoxComponent.html":{}}}],["toggl",{"_index":192,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["togglehint($ev",{"_index":199,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["togglesidebar",{"_index":193,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["toid",{"_index":209,"title":{"pipes/ToId.html":{}},"body":{"modules/CoreModule.html":{},"pipes/ToId.html":{},"overview.html":{}}}],["top",{"_index":740,"title":{},"body":{"index.html":{}}}],["track",{"_index":321,"title":{},"body":{"components/FormErrorsComponent.html":{},"components/PopoverComponent.html":{}}}],["transform",{"_index":554,"title":{},"body":{"pipes/ToId.html":{}}}],["transform(valu",{"_index":557,"title":{},"body":{"pipes/ToId.html":{}}}],["tre",{"_index":348,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{}}}],["trigger",{"_index":125,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{}}}],["true",{"_index":441,"title":{},"body":{"classes/Password.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"interfaces/differences.html":{}}}],["tslint:dis",{"_index":175,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["two",{"_index":607,"title":{},"body":{"interfaces/differences.html":{}}}],["type",{"_index":108,"title":{},"body":{"components/BoxComponent.html":{},"interfaces/Configuration.html":{},"directives/DebounceInputDirective.html":{},"components/FormErrorsComponent.html":{},"interfaces/Item.html":{},"interfaces/Notification.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"components/SidePanelComponent.html":{},"directives/SpinningIconDirective.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["typeof",{"_index":650,"title":{},"body":{"interfaces/differences.html":{}}}],["uffff",{"_index":715,"title":{},"body":{"interfaces/differences.html":{}}}],["un",{"_index":349,"title":{},"body":{"components/FormErrorsComponent.html":{}}}],["undefin",{"_index":685,"title":{},"body":{"interfaces/differences.html":{}}}],["unregist",{"_index":281,"title":{},"body":{"directives/DebounceInputDirective.html":{}}}],["updat",{"_index":394,"title":{},"body":{"interfaces/Notification.html":{},"index.html":{}}}],["updatenotif(id",{"_index":395,"title":{},"body":{"interfaces/Notification.html":{}}}],["url",{"_index":161,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{},"interfaces/differences.html":{}}}],["us",{"_index":621,"title":{},"body":{"interfaces/differences.html":{}}}],["usebom",{"_index":695,"title":{},"body":{"interfaces/differences.html":{}}}],["uuid",{"_index":380,"title":{},"body":{"interfaces/Notification.html":{}}}],["valid",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{}}}],["validators.requir",{"_index":418,"title":{},"body":{"classes/Password.html":{}}}],["validatorsdirect",{"_index":58,"title":{"directives/ValidatorsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"modules/CoreModule.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"directives/ValidatorsDirective.html":{},"overview.html":{}}}],["valu",{"_index":265,"title":{},"body":{"directives/DebounceInputDirective.html":{},"components/NavbarComponent.html":{},"classes/Password.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"components/SidePanelComponent.html":{},"injectables/SidePanelService.html":{},"pipes/ToId.html":{},"directives/ValidatorsDirective.html":{},"interfaces/differences.html":{}}}],["value.split",{"_index":562,"title":{},"body":{"pipes/ToId.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoxComponent.html":{},"components/FormErrorsComponent.html":{},"components/NavbarComponent.html":{},"components/PopoverComponent.html":{},"components/SidePanelComponent.html":{},"interfaces/differences.html":{}}}],["variabl",{"_index":383,"title":{},"body":{"interfaces/Notification.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"interfaces/differences.html":{}}}],["version",{"_index":755,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":470,"title":{},"body":{"components/PopoverComponent.html":{}}}],["viewchild('popov",{"_index":474,"title":{},"body":{"components/PopoverComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"directives/ClickStopPropagation.html":{},"directives/DebounceInputDirective.html":{},"components/PopoverComponent.html":{},"directives/ShowPasswordDirective.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{},"directives/SpinningIconDirective.html":{},"directives/ValidatorsDirective.html":{}}}],["wait",{"_index":696,"title":{},"body":{"interfaces/differences.html":{}}}],["wait(m",{"_index":697,"title":{},"body":{"interfaces/differences.html":{}}}],["want",{"_index":172,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["watch",{"_index":382,"title":{},"body":{"interfaces/Notification.html":{},"components/PopoverComponent.html":{},"injectables/SideBarService.html":{},"injectables/SidePanelService.html":{}}}],["window.open(data.url",{"_index":191,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Item.html":{}}}],["without",{"_index":677,"title":{},"body":{"interfaces/differences.html":{}}}],["ye",{"_index":535,"title":{},"body":{"injectables/SidePanelService.html":{}}}],["zone.j",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Configuration } from '../modules/core/sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from '../public_api';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CoreModule.forRoot(),\n    BrowserModule,\n    RouterModule.forRoot([{path: '**', component: AppComponent}])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxComponent.html":{"url":"components/BoxComponent.html","title":"component - BoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/box/box.component.ts\n\n\n    \n        Description\n    \n    \n        Display Box Container\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n|  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                box\n            \n\n            \n                styleUrls\n                box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./box.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/box/box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n/**\n * Display Box Container\n * @example \n *  \n *  |  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n *  \n */\n@Component({\n  selector: \"box\",\n  templateUrl: \"./box.component.html\",\n  styleUrls: [\"./box.component.scss\"]\n})\nexport class BoxComponent {\n\n  @Input() title:String\n\n\n\n}\n \n    \n\n    \n        \n    \n        {{title}}\n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagation.html":{"url":"directives/ClickStopPropagation.html","title":"directive - ClickStopPropagation","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ClickStopPropagation\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/stopPropagation.directive.ts\n        \n\n            \n                Description\n            \n            \n                Prevent bubbling of events\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                             // not call when click happenned on child\n| \n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/stopPropagation.directive.ts:18\n                            \n                        \n\n                \n                    \n                            Trigger click event to stop propagation\n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from \"@angular/core\";\n\n/**\n * Prevent bubbling of events\n * @example \n *   // not call when click happenned on child\n *  | \n *  \n */\n@Directive({\n  selector: \"[click-stop-propagation]\"\n})\nexport class ClickStopPropagation {\n  /**\n   * Trigger click event to stop propagation\n   */\n  @HostListener(\"click\", [\"$event\"])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/sidebar/sidebar.component.ts\n        \n\n            \n                Description\n            \n            \n                Configuration object of the sidebar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bottom\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:47\n                                        \n                                    \n\n                            \n                                \n                                    List of all icons display on the bottom area\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:42\n                                        \n                                    \n\n                            \n                                \n                                    List of all icons display on the main area\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, EventEmitter, Output} from '@angular/core';\nimport { SideBarService } from '../providers/sidebar.service';\n\n\n/**\n * Item present in sidebar\n */\nexport interface Item {\n  /**\n   * icon class (e-g: fa fa-home)\n   */\n  icon?: string;\n  /**\n   * id of icon\n   */\n  id?: string;\n  /**\n   * Description displat when sidebar is open\n   */\n  description?: string;\n  /**\n   * click function to interact outside of the component\n   */\n  click?: Array|string | Function;\n  /**\n   * Url to redirect with router\n   */\n  url?: string;\n  /**\n   * possibilities to add an other list: Not implemented yet\n   */\n  list?: Configuration;\n}\n\n/**\n * Configuration object of the sidebar\n */\nexport interface Configuration {\n  /**\n   * List of all icons display on the main area\n   */\n  list?: Array;\n\n  /**\n   * List of all icons display on the bottom area\n   */\n  bottom?: Array;\n}\n\n/**\n * Display Sidebar on the app component\n * @example\n * const conf: Configuration = {\n * | list: [{\n * | | icon: \"fa fa-home\",\n * | | description: \"Accueil\",\n * | | click: [\"/home\"]\n * | }],\n * | bottom: [{\n * | | icon: \"fa fa-cog\",\n * | | description: \"Settings\",\n * | | click: [\"/settings\"]\n * | }]\n * };\n * \n * | \n * | I want to go to {{route()}}\n * \n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  /**\n   * control css class that open/close sidebar: openHint/closeHint\n   */\n  hintClass = '';\n  /**\n   * Get the configuration from outside\n   */\n  @Input('conf') conf: Configuration = { list: [], bottom: [] };\n\n  /**\n   * import dependencies\n   */\n  constructor(public sidebar: SideBarService) {}\n  /**\n   * Go to Home route\n   */\n  goTo(data) {\n    data.click();\n  }\n\n  newWindow(data) {\n    if (data.url) { window.open(data.url); }\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggleSidebar() {\n    this.sidebar.toggle();\n  }\n\n  /**\n   * Toggle hint beside links icons on hover\n   */\n  toggleHint($event) {\n    this.hintClass =\n      $event.type === 'mouseover' && !this.sidebar._open\n        ? 'openHint'\n        : 'closeHint';\n  }\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nFormErrorsComponent\n\nFormErrorsComponent\n\nCoreModule -->\n\nFormErrorsComponent->CoreModule\n\n\n\n\n\nBoxComponent\n\nBoxComponent\n\nCoreModule -->\n\nBoxComponent->CoreModule\n\n\n\n\n\nSidePanelComponent\n\nSidePanelComponent\n\nCoreModule -->\n\nSidePanelComponent->CoreModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nCoreModule -->\n\nNotificationsComponent->CoreModule\n\n\n\n\n\nDebounceInputDirective\n\nDebounceInputDirective\n\nCoreModule -->\n\nDebounceInputDirective->CoreModule\n\n\n\n\n\nClickStopPropagation\n\nClickStopPropagation\n\nCoreModule -->\n\nClickStopPropagation->CoreModule\n\n\n\n\n\nSpinningIconDirective\n\nSpinningIconDirective\n\nCoreModule -->\n\nSpinningIconDirective->CoreModule\n\n\n\n\n\nValidatorsDirective\n\nValidatorsDirective\n\nCoreModule -->\n\nValidatorsDirective->CoreModule\n\n\n\n\n\nShowPasswordDirective\n\nShowPasswordDirective\n\nCoreModule -->\n\nShowPasswordDirective->CoreModule\n\n\n\n\n\nToId\n\nToId\n\nCoreModule -->\n\nToId->CoreModule\n\n\n\n\n\nPopoverComponent\n\nPopoverComponent\n\nCoreModule -->\n\nPopoverComponent->CoreModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nCoreModule->SidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nFormErrorsComponent \n\nFormErrorsComponent \n\nFormErrorsComponent  -->\n\nCoreModule->FormErrorsComponent \n\n\n\n\n\nSidePanelComponent \n\nSidePanelComponent \n\nSidePanelComponent  -->\n\nCoreModule->SidePanelComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nCoreModule->NotificationsComponent \n\n\n\n\n\nBoxComponent \n\nBoxComponent \n\nBoxComponent  -->\n\nCoreModule->BoxComponent \n\n\n\n\n\nDebounceInputDirective \n\nDebounceInputDirective \n\nDebounceInputDirective  -->\n\nCoreModule->DebounceInputDirective \n\n\n\n\n\nSpinningIconDirective \n\nSpinningIconDirective \n\nSpinningIconDirective  -->\n\nCoreModule->SpinningIconDirective \n\n\n\n\n\nValidatorsDirective \n\nValidatorsDirective \n\nValidatorsDirective  -->\n\nCoreModule->ValidatorsDirective \n\n\n\n\n\nShowPasswordDirective \n\nShowPasswordDirective \n\nShowPasswordDirective  -->\n\nCoreModule->ShowPasswordDirective \n\n\n\n\n\nToId \n\nToId \n\nToId  -->\n\nCoreModule->ToId \n\n\n\n\n\nPopoverComponent \n\nPopoverComponent \n\nPopoverComponent  -->\n\nCoreModule->PopoverComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SidebarComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                FormErrorsComponent\n                            \n                            \n                                BoxComponent\n                            \n                            \n                                SidePanelComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                DebounceInputDirective\n                            \n                            \n                                ClickStopPropagation\n                            \n                            \n                                SpinningIconDirective\n                            \n                            \n                                ValidatorsDirective\n                            \n                            \n                                ShowPasswordDirective\n                            \n                            \n                                ToId\n                            \n                            \n                                PopoverComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SidebarComponent\n                            \n                            \n                                    NavbarComponent\n                            \n                            \n                                    FormErrorsComponent\n                            \n                            \n                                    SidePanelComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                            \n                                    BoxComponent\n                            \n                            \n                                    DebounceInputDirective\n                            \n                            \n                                    SpinningIconDirective\n                            \n                            \n                                    ValidatorsDirective\n                            \n                            \n                                    ShowPasswordDirective\n                            \n                            \n                                    ToId\n                            \n                            \n                                    PopoverComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FormErrorsComponent } from './form-errors/form-errors.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidePanelComponent } from './side-panel/side-panel.component';\nimport { BoxComponent } from './box/box.component';\n\nimport { CommonService } from './providers/common.service';\nimport { SideBarService } from './providers/sidebar.service';\nimport { SidePanelService } from './providers/sidepanel.service';\nimport { NotificationsService } from './providers/notifications.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DebounceInputDirective } from './directives/debounceInput.directive';\nimport { SpinningIconDirective } from './directives/spinningIcon.directive';\nimport { ClickStopPropagation } from './directives/stopPropagation.directive';\nimport { ValidatorsDirective } from './directives/validators.directive';\nimport { ShowPasswordDirective } from './directives/showPassword.directive';\nimport { ToId } from './pipe/toId.pipe';\nimport { PopoverComponent } from './popover/popover.component';\nimport { Router, RouterModule, RouterLink } from '@angular/router';\n@NgModule({\n  declarations: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    BoxComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    DebounceInputDirective,\n    ClickStopPropagation,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbModule.forRoot(),\n  ],\n  exports: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    BoxComponent,\n    DebounceInputDirective,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent\n  ]\n})\nexport class CoreModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommonService,\n        SideBarService,\n        NotificationsService,\n        SidePanelService,\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DebounceInputDirective.html":{"url":"directives/DebounceInputDirective.html","title":"directive - DebounceInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DebounceInputDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/debounceInput.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that debounce an element that supports keyListener\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n                        OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [debounce-input]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubsription\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounceTime\n                    \n                    \n                        Describe the debounce time; Default: 500ms\n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:18\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Emit and call function after the debounce time\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:22\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:60\n                            \n                        \n\n                \n                    \n                            Trigger keyup event and inject it to the pipe of the debounce \n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSubsription\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSubsription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:40\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:46\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:52\n                            \n                        \n\n                \n                    \n                            Unregister observable on the component destruct\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:37\n                            \n                        \n\n                \n                    \n                            Register observable pipe that describe the flow of the debounce directive\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:26\n                            \n                        \n\n                \n                    \n                        Observable that register the flow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/directives/debounceInput.directive.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of the observable to close when component die\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\n\n/**\n * Directive that debounce an element that supports keyListener\n * @example \n * \n */\n@Directive({\n  selector: '[debounce-input]'\n})\nexport class DebounceInputDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Describe the debounce time; Default: 500ms\n   */\n  @Input() debounceTime = 500;\n  /**\n   * Emit and call function after the debounce time\n   */\n  @Output() debounce = new EventEmitter();\n  /**\n   * Observable that register the flow\n   */\n  private subject = new Subject();\n  /**\n   * Instance of the observable to close when component die\n   */\n  private subscription: Subscription;\n\n  \n\n  /**\n   * Register observable pipe that describe the flow of the debounce directive\n   */\n  ngOnInit() {\n    this.createSubsription()\n  }\n  createSubsription(){\n    this.subscription = this.subject.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounce.emit(e));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.debounceTime && this.subject.observers[0]) this.subject.observers[0]['dueTime'] = changes.debounceTime.currentValue\n  }\n  /**\n   * Unregister observable on the component destruct\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Trigger keyup event and inject it to the pipe of the debounce \n   */\n  @HostListener('keyup', ['$event'])\n  keyupEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.subject.next(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorsComponent.html":{"url":"components/FormErrorsComponent.html","title":"component - FormErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormErrorsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/form-errors/form-errors.component.ts\n\n\n    \n        Description\n    \n    \n        Encapsule an input and all validators attached\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n| \n| \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                formErrors\n            \n\n            \n                styleUrls\n                form-errors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                patternName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        NgModel to tracks invalid status\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/form-errors/form-errors.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patternName\n                    \n                    \n                        Override pattern display\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/form-errors/form-errors.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component,Input} from \"@angular/core\";\nimport { FormControl, Validators, NgModel, Validator } from \"@angular/forms\";\n\n\n/**\n * Encapsule an input and all validators attached\n * @example\n * \n *  \n    | \n    | \n    \n */\n@Component({\n  selector: \"formErrors\",\n  templateUrl: \"./form-errors.component.html\",\n  styleUrls: [\"./form-errors.component.scss\"]\n})\nexport class FormErrorsComponent {\n  /**\n   * NgModel to tracks invalid status\n   */\n  @Input('model') model: any\n  /**\n   * Override pattern display\n   */\n  @Input('patternName') patternName :string\n\n}\n \n    \n\n    \n        \n\n\n    \n         \n            {{patternName}}\n        \n        \n            Pattern: {{model.errors.pattern.requiredPattern}}\n        \n    \n    \n        Obligatoire\n    \n    \n        Contient au moins {{model.errors.minlength.requiredLength}} caractères\n    \n    \n        Contient au plus {{model.errors.maxlength.requiredLength}} caractères\n    \n    \n        Doit correspondre à la phrase de passe\n    \n    \n        Doit être un email\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         {{patternName}}                            Pattern: {{model.errors.pattern.requiredPattern}}                        Obligatoire                Contient au moins {{model.errors.minlength.requiredLength}} caractères                Contient au plus {{model.errors.maxlength.requiredLength}} caractères                Doit correspondre à la phrase de passe                Doit être un email    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Item.html":{"url":"interfaces/Item.html","title":"interface - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Item\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/sidebar/sidebar.component.ts\n        \n\n            \n                Description\n            \n            \n                Item present in sidebar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        click\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        click\n                                    \n                                \n                                \n                                    \n                                        click:     Array | string | Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | string | Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    click function to interact outside of the component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Description displat when sidebar is open\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    icon class (e-g: fa fa-home)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    id of icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Configuration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    possibilities to add an other list: Not implemented yet\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/sidebar/sidebar.component.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    Url to redirect with router\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, EventEmitter, Output} from '@angular/core';\nimport { SideBarService } from '../providers/sidebar.service';\n\n\n/**\n * Item present in sidebar\n */\nexport interface Item {\n  /**\n   * icon class (e-g: fa fa-home)\n   */\n  icon?: string;\n  /**\n   * id of icon\n   */\n  id?: string;\n  /**\n   * Description displat when sidebar is open\n   */\n  description?: string;\n  /**\n   * click function to interact outside of the component\n   */\n  click?: Array|string | Function;\n  /**\n   * Url to redirect with router\n   */\n  url?: string;\n  /**\n   * possibilities to add an other list: Not implemented yet\n   */\n  list?: Configuration;\n}\n\n/**\n * Configuration object of the sidebar\n */\nexport interface Configuration {\n  /**\n   * List of all icons display on the main area\n   */\n  list?: Array;\n\n  /**\n   * List of all icons display on the bottom area\n   */\n  bottom?: Array;\n}\n\n/**\n * Display Sidebar on the app component\n * @example\n * const conf: Configuration = {\n * | list: [{\n * | | icon: \"fa fa-home\",\n * | | description: \"Accueil\",\n * | | click: [\"/home\"]\n * | }],\n * | bottom: [{\n * | | icon: \"fa fa-cog\",\n * | | description: \"Settings\",\n * | | click: [\"/settings\"]\n * | }]\n * };\n * \n * | \n * | I want to go to {{route()}}\n * \n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  /**\n   * control css class that open/close sidebar: openHint/closeHint\n   */\n  hintClass = '';\n  /**\n   * Get the configuration from outside\n   */\n  @Input('conf') conf: Configuration = { list: [], bottom: [] };\n\n  /**\n   * import dependencies\n   */\n  constructor(public sidebar: SideBarService) {}\n  /**\n   * Go to Home route\n   */\n  goTo(data) {\n    data.click();\n  }\n\n  newWindow(data) {\n    if (data.url) { window.open(data.url); }\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggleSidebar() {\n    this.sidebar.toggle();\n  }\n\n  /**\n   * Toggle hint beside links icons on hover\n   */\n  toggleHint($event) {\n    this.hintClass =\n      $event.type === 'mouseover' && !this.sidebar._open\n        ? 'openHint'\n        : 'closeHint';\n  }\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar Component\nng-content: \n\n[logo] element on the left\n[actions] element on the right\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n|  \n|  |  \n|  \n|  \n|  |  \n|  |  | \n|  |  \n|  \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navbar\n            \n\n            \n                styleUrls\n                navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/navbar/navbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            Load dependencies instances\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Name displaying on left after icon\n\n                        \n                            Default value: \"\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/navbar/navbar.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n/**\n * Navbar Component\n * \n * ng-content: \n *  - [logo] element on the left\n *  - [actions] element on the right\n * @example\n *  \n    |  \n    |  |  \n    |  \n    |  \n    |  |  \n    |  |  | \n    |  |  \n    |  \n    \n */\n@Component({\n  selector: \"navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.scss\"]\n})\nexport class NavbarComponent {\n  /**\n   * Name displaying on left after icon\n   */\n  @Input('name') name = \"\"\n\n  /**\n   * Load dependencies instances\n   */\n  constructor(){}\n}\n \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        {{name}}\n      \n    \n\n    \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{name}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                Describe a notification\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        msg\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    ID of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Content on notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    Timeout function \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/notifications.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Header on notification\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, IterableDiffers } from \"@angular/core\";\nimport * as uuid from 'uuid'\nimport { Observable, Subject } from \"rxjs\";\n\n/**\n * Describe a notification\n */\nexport interface Notification {\n  /**\n   * ID of the notification\n   */\n  id?: string;\n  /**\n   * Header on notification\n   */\n  title?: string;\n  /**\n   * Content on notification\n   */\n  msg?: string;\n  /**\n   * Timeout function \n   */\n  timeout?: any;\n}\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class NotificationsService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  notifications: Array = [];\n  /**\n   * Emit event that contains complete notification on add\n   */\n  addEvent: Subject = new Subject();\n  /**\n   * Emit event that contains id on remove \n   */\n  removeEvent: Subject = new Subject();\n\n  /**\n   * Fetch delay from localStorage \n   */\n  constructor() {\n    let notificationsDelay = +localStorage.getItem(\"notificationsDelay\");\n    if (notificationsDelay  {\n      this.delete(notif.id);\n    }, +localStorage.getItem(\"notificationsDelay\"));\n  }\n\n  /**\n   * update notification from id \n   */\n  updateNotif(id, _notif: Notification) {\n    this.notifications.map(notif => {\n      if (notif.id === id) {\n        if (_notif.msg) notif.msg = _notif.msg;\n        if (_notif.title) notif.title = _notif.title;\n        clearTimeout(notif.timeout);\n        notif.timeout = this.defaultTimeout(notif);\n      }\n    });\n  }\n  /**\n   * delete a notification\n   */\n  delete(id) {\n    this.removeEvent.next(id);\n    this.notifications = this.notifications.filter(notif => notif.id !== id);\n  }\n\n  /**\n   * Delete all notifications \n   */\n  deleteAll() {\n    this.notifications.map(notif => this.delete(notif.id));\n  }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/validators/Password.validator.ts\n        \n\n            \n                Description\n            \n            \n                Check if passphrase are the same\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            fb.group({\npassphrase: [\"\",Validators.required],\nrecheckPassphrase: [\"\",Validators.required],\n}, { validator: MatchPassword.MatchPassword })\n\n\n|  Passphrase\n|  \n|\n|  Recheck passphrase\n|  \n|\n|  Submit button\n\nMatchPassword: {{formPassphrases.valid}}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                GeneratePassword\n                            \n                            \n                                    Static\n                                MatchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GeneratePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GeneratePassword(length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/validators/Password.validator.ts:37\n                            \n                        \n\n                \n                    \n                            Return a password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                12\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MatchPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        MatchPassword(AC: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/validators/Password.validator.ts:27\n                            \n                        \n\n                \n                    \n                            check function\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AC\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { recheckPassphrase: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Check if passphrase are the same\n * @example \n *  fb.group({\n *      passphrase: [\"\",Validators.required],\n *      recheckPassphrase: [\"\",Validators.required],\n *  }, { validator: MatchPassword.MatchPassword })\n * \n *  \n *  |  Passphrase\n *  |  \n *  |\n *  |  Recheck passphrase\n *  |  \n *  |\n *  |  Submit button\n *  \n *  MatchPassword: {{formPassphrases.valid}}\n */\nexport class Password {\n\n    /**\n     * check function\n     */\n    static MatchPassword(AC: AbstractControl) {\n        let confirmPassword = AC.value.passphrase\n        let password = AC.value.recheckPassphrase; // to get value in input tag\n        if (confirmPassword !== password) {\n            return { recheckPassphrase: true }\n        } else return null\n    }\n    /**\n     * Return a password\n     */\n    static GeneratePassword(length:number = 12):string {\n        const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]\\:;?>\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopoverComponent.html":{"url":"components/PopoverComponent.html","title":"component - PopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/popover/popover.component.ts\n\n\n    \n        Description\n    \n    \n        Make a popoper around items\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n|  hey\n|  Hey to you! I'm on your right!\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                popover\n            \n\n            \n                styleUrls\n                popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                            \n                                popover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                            \n                                placement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        open\n                    \n                    \n                        Open or close popover;\nDefault: close \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placement\n                    \n                    \n                        Define the placment of popover\n\n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:35\n                            \n                        \n\n                \n                    \n                            Track changes on input open to reflect status on private keys\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:38\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:30\n                            \n                        \n\n                \n                    \n                        private boolean to watching open/close status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popover:     NgbPopover\n\n                    \n                \n                    \n                        \n                            Type :     NgbPopover\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/popover/popover.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, SimpleChange, OnInit, ViewChild } from \"@angular/core\";\nimport { NgbPopover } from \"@ng-bootstrap/ng-bootstrap\";\n\n/**\n * Make a popoper around items\n * @example\n * \n    |  hey\n    |  Hey to you! I'm on your right!\n    \n */\n@Component({\n  selector: \"popover\",\n  templateUrl: \"./popover.component.html\",\n  styleUrls: [\"./popover.component.scss\"]\n})\nexport class PopoverComponent implements OnInit{\n  /**\n   * Open or close popover;\n   * Default: close \n   */\n  @Input('open') open = false\n  /**\n   * Define the placment of popover\n   */\n  @Input('placement') placement = 'right'\n  /**\n   * private boolean to watching open/close status\n   */\n  _open = false\n  @ViewChild('popover') popover: NgbPopover\n  /**\n   * Track changes on input open to reflect status on private keys\n   */\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this._open = changes['open'].currentValue\n  }\n  ngOnInit(): void {\n    console.log(this.popover)\n    this.popover.open()\n  }\n}\n \n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ShowPasswordDirective.html":{"url":"directives/ShowPasswordDirective.html","title":"directive - ShowPasswordDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ShowPasswordDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/showPassword.directive.ts\n        \n\n            \n                Description\n            \n            \n                Load differents directive with an array of key value\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [show-password]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/showPassword.directive.ts:12\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/showPassword.directive.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2, OnInit} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * \n */\n@Directive({\n  selector: '[show-password]',\n  host: {}\n})\nexport class ShowPasswordDirective implements OnInit{\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  ngOnInit(): void {\n    const div = this.renderer.createElement('i');\n    this.renderer.addClass(div, 'fa');\n    this.renderer.addClass(div, 'fa-eye-slash');\n    this.renderer.addClass(div, 'toggle-eye');\n    this.renderer.setStyle(div, 'position', 'absolute')\n    this.renderer.setStyle(div, 'display', 'inherit')\n    this.renderer.setStyle(div, 'cursor', 'pointer')\n    this.renderer.listen(div, 'click', event => {\n      const input = this.hostElement.nativeElement\n      if(input.type === 'password'){\n        input.type = 'text'\n        this.renderer.addClass(div, 'fa-eye');\n        this.renderer.removeClass(div, 'fa-eye-slash');\n      } else {\n        input.type = 'password'\n        this.renderer.removeClass(div, 'fa-eye');\n        this.renderer.addClass(div, 'fa-eye-slash');\n      }\n    })\n    \n    this.renderer.setStyle(this.hostElement.nativeElement, 'padding-left', '2em')\n    \n    const parent = this.hostElement.nativeElement.parentNode;\n    this.renderer.insertBefore(parent, div, this.hostElement.nativeElement)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SideBarService.html":{"url":"injectables/SideBarService.html","title":"injectable - SideBarService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SideBarService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/sidebar.service.ts\n        \n\n            \n                Description\n            \n            \n                Control the sidebar outside the component\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:23\n                            \n                        \n\n                \n                    \n                            Close sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:16\n                            \n                        \n\n                \n                    \n                            Open sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:30\n                            \n                        \n\n                \n                    \n                            Toggle sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/providers/sidebar.service.ts:11\n                            \n                        \n\n                \n                    \n                        Component watch this variable to open/close the sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class SideBarService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  _open = false\n  \n  /**\n   * Open sidebar\n   */\n  open() {\n    this._open = true\n  }\n\n  /**\n   * Close sidebar\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidePanelComponent.html":{"url":"components/SidePanelComponent.html","title":"component - SidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidePanelComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/modules/core/side-panel/side-panel.component.ts\n\n\n    \n        Description\n    \n    \n        SidePanel Component\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    const sp = new SidePanelService()\nconst open = (template, context = {})=>sp.open(template, context)\n\n\n|  \n|  |  Open with template\n|  |  \n|  |  \n|  |  \n|  |  Open with context\n|  \n|  \n\n Hey {{value}} !\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidePanel\n            \n\n            \n                styleUrls\n                side-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidepanel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidepanel: SidePanelService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/side-panel/side-panel.component.ts:27\n                            \n                        \n\n                \n                    \n                            Load dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    sidepanel\n                                                  \n                                                        \n                                                                    SidePanelService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidepanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidepanel:     SidePanelService\n\n                    \n                \n                    \n                        \n                            Type :     SidePanelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/side-panel/side-panel.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { SidePanelService } from \"../providers/sidepanel.service\";\n\n/**\n * SidePanel Component\n * @example\n * const sp = new SidePanelService()\n * const open = (template, context = {})=>sp.open(template, context)\n * \n * \n * |  \n * |  |  Open with template\n * |  |  \n * |  |  \n * |  |  \n * |  |  Open with context\n * |  \n * |  \n * \n *  Hey {{value}} !\n */\n@Component({\n  selector: \"sidePanel\",\n  templateUrl: \"./side-panel.component.html\",\n  styleUrls: [\"./side-panel.component.scss\"]\n})\nexport class SidePanelComponent {\n  /**\n   * Load dependencies\n   */\n  constructor(public sidepanel: SidePanelService){}\n}\n \n    \n\n    \n        \n    \n    \n        \n    \n\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoxComponent', 'selector': 'box'},{'name': 'FormErrorsComponent', 'selector': 'formErrors'},{'name': 'NavbarComponent', 'selector': 'navbar'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'PopoverComponent', 'selector': 'popover'},{'name': 'SidePanelComponent', 'selector': 'sidePanel'},{'name': 'SidebarComponent', 'selector': 'sidebar'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagation', 'selector': '[click-stop-propagation]'},{'name': 'DebounceInputDirective', 'selector': '[debounce-input]'},{'name': 'ShowPasswordDirective', 'selector': '[show-password]'},{'name': 'SpinningIconDirective', 'selector': '[spinning-icon]'},{'name': 'ValidatorsDirective', 'selector': '[validators]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidePanelService.html":{"url":"injectables/SidePanelService.html","title":"injectable - SidePanelService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SidePanelService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/sidepanel.service.ts\n        \n\n            \n                Description\n            \n            \n                Control the sidePanel outside the component\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _open\n                            \n                            \n                                context\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:26\n                            \n                        \n\n                \n                    \n                            Close sidePanel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(template?: , context?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:17\n                            \n                        \n\n                \n                    \n                            Open sidePanel\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:33\n                            \n                        \n\n                \n                    \n                            Toggle sidePanel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:11\n                            \n                        \n\n                \n                    \n                        Component watch this variable to open/close the sidePanel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/providers/sidepanel.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidePanel outside the component\n */\n@Injectable()\nexport class SidePanelService {\n  /**\n   * Component watch this variable to open/close the sidePanel\n   */\n  _open = false\n  template\n  context\n  /**\n   * Open sidePanel\n   */\n  open(template?, context?) {\n    if (template) this.template = template\n    if (context) this.context = context\n    this._open = true\n  }\n\n  /**\n   * Close sidePanel\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidePanel\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SpinningIconDirective.html":{"url":"directives/SpinningIconDirective.html","title":"directive - SpinningIconDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SpinningIconDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/spinningIcon.directive.ts\n        \n\n            \n                Description\n            \n            \n                spin an icon\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Click to start\n\n| \n\nClick to stop\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [spinning-icon]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/spinningIcon.directive.ts:16\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/spinningIcon.directive.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \nstop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/spinningIcon.directive.ts:28\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Renderer2, ElementRef } from \"@angular/core\";\n\n/**\n * spin an icon\n * @example \n * Click to start\n * \n * | \n * \n * Click to stop\n */\n@Directive({\n  selector: \"[spinning-icon]\",\n  exportAs:'spinning'\n})\nexport class SpinningIconDirective {\n\n  /**\n  * Load some dependencies\n  */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef) { }\n\n  start(event: any): void {\n    this.renderer.addClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.addClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n\n  stop(){\n    this.renderer.removeClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.removeClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToId.html":{"url":"pipes/ToId.html","title":"pipe - ToId","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  ToId\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/core/pipe/toId.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform string to be a valid HtmlID\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        toId\n                    \n                    \n                        pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/pipe/toId.pipe.ts:13\n                            \n                        \n\n                \n                    \n                            Transform function\nIt remove special characters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform string to be a valid HtmlID\n */\n@Pipe({ name: 'toId', pure: true })\nexport class ToId implements PipeTransform {\n\n    /**\n     * Transform function\n     * It remove special characters\n     */\n    transform(value: any) {\n        return value.split(' ').join('').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatorsDirective.html":{"url":"directives/ValidatorsDirective.html","title":"directive - ValidatorsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ValidatorsDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/directives/validators.directive.ts\n        \n\n            \n                Description\n            \n            \n                Load differents directive with an array of key value\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewChecked\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [validators]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                validators\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, hostElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/modules/core/directives/validators.directive.ts:18\n                            \n                        \n\n                \n                    \n                            Load some dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    hostElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        validators\n                    \n                    \n                        Array of key value that describe all directive to put on the element\n\n                    \n                \n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewChecked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:28\n                            \n                        \n\n                \n                    \n                            Launch validator check for the first time init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onInputChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonInputChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/modules/core/directives/validators.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Change appearance of input with goodInput/badInout class\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * \n */\n@Directive({\n  selector: '[validators]',\n  host: {\n    \"(input)\": 'onInputChange($event)'\n  }\n})\nexport class ValidatorsDirective implements AfterViewChecked{\n  /**\n   * Array of key value that describe all directive to put on the element\n   */\n  @Input() validators;\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  /**\n   * Launch validator check for the first time init\n   */\n  ngAfterViewChecked(){\n    this.onInputChange()\n  }\n\n  /**\n   * Change appearance of input with goodInput/badInout class\n   */\n  onInputChange() {\n    if (this.validators.valid) {\n      this.renderer.addClass(this.hostElement.nativeElement, 'goodInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'badInput');\n    } else {\n      this.renderer.addClass(this.hostElement.nativeElement, 'badInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'goodInput');\n    }  \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^2.0.0\n        \n            angular-playground : ^4.0.1\n        \n            angular2-csv : ^0.2.5\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.6\n        \n            ngx-bootstrap : ^2.0.5\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.1.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/differences.html":{"url":"interfaces/differences.html","title":"interface - differences","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  differences\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/core/providers/common.service.ts\n        \n\n            \n                Description\n            \n            \n                Describe differences between two object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        different\n                                \n                                \n                                        missing_from_first\n                                \n                                \n                                        missing_from_second\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        different\n                                    \n                                \n                                \n                                    \n                                        different:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Only when two same prop have not same values\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missing_from_first\n                                    \n                                \n                                \n                                    \n                                        missing_from_first:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Only missing properties from the first object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missing_from_second\n                                    \n                                \n                                \n                                    \n                                        missing_from_second:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/modules/core/providers/common.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Only missing properties from the second object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as _ from 'lodash'\nimport { Angular2Csv } from 'angular2-csv'\n\n/**\n * Describe differences between two object\n */\nexport interface differences {\n  /**\n   * Only when two same prop have not same values\n   */\n  different: Array,\n  /**\n   * Only missing properties from the first object\n   */\n  missing_from_first: Array,\n  /**\n   * Only missing properties from the second object\n   */\n  missing_from_second: Array\n}\n\n/**\n * Share variable and function commonly use in the app\n */\n@Injectable()\nexport class CommonService {\n  /**\n   * Api URL\n   */\n  api: string\n  /**\n   * GraphQL URL\n   */\n  graphQL: string\n  /**\n   * Interval in ms between two refresh\n   */\n  refreshTokenInterval: number\n\n  /**\n   * Instanciate all members\n   */\n  constructor(){\n    this.api = \"http://localhost:3000\"\n    this.graphQL = this.api + '/graphql'\n    this.refreshTokenInterval = 4000\n  }\n\n  /**\n   * Test equality objects \n   */\n  equalityObjects(a,b){\n    const differences = this.differences(a,b)\n    const d = differences.different.length + differences.missing_from_first.length + differences.missing_from_second.length\n    return  d===0 ? true :false \n  }\n\n  /**\n   * Load all\n   */\n  differences(a, b): differences {\n    var result: differences = {\n      different: [],\n      missing_from_first: [],\n      missing_from_second: []\n    };\n\n    _.reduce(a, (result, value, key) => {\n      if (b.hasOwnProperty(key)) {\n        if (_.isEqual(value, b[key])) return result;\n        else {\n          if (typeof (a[key]) != typeof ({}) || typeof (b[key]) != typeof ({})) {\n            result.different.push(key);\n            return result;\n          } else {\n            var deeper = this.differences(a[key], b[key]);\n            result.different = result.different.concat(_.map(deeper.different, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_second = result.missing_from_second.concat(_.map(deeper.missing_from_second, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_first = result.missing_from_first.concat(_.map(deeper.missing_from_first, (sub_path) => key + \".\" + sub_path))\n            return result;\n          }\n        }\n      } else {\n        result.missing_from_second.push(key);\n        return result;\n      }\n    }, result);\n\n    _.reduce(b, function (result, value, key) {\n      if (a.hasOwnProperty(key)) return result;\n      else {\n        result.missing_from_first.push(key);\n        return result;\n      }\n    }, result);\n    return result;\n  }\n\n  /**\n   * Export a datable to an csv \n   */\n  // exportAsCSV(dataTable: DatatableComponent, filename: string = 'Export') {\n  //   const columns: TableColumn[] = dataTable.columns || dataTable._internalColumns;\n  //   const headers =\n  //     columns\n  //       .map((column: TableColumn) => column.name)\n  //       .filter((e) => e);  // remove column without name\n\n  //   const rows: any[] = dataTable.rows.map((row) => {\n  //     let r = {};\n  //     columns.forEach((column) => {\n  //       let prop = column.prop;\n  //       if (!column.name) return // ignore column without name\n  //       if (prop) {\n  //         if (row[prop] === null || row[prop] === undefined) \n  //           r[prop] = \"\"\n  //         else\n  //           r[prop] = row[prop]\n  //         if (typeof row[prop] === 'boolean')\n  //           r[prop] = (row[prop]) ? 'Oui' : 'Non'\n  //       }\n  //     })\n  //     return r;\n  //   });\n  //   return new Angular2Csv(rows, filename, {\n  //     fieldSeparator: ',',\n  //     quoteStrings: '\"',\n  //     decimalseparator: '.',\n  //     showLabels: true,\n  //     headers,\n  //     showTitle: false,\n  //     title: filename,\n  //     useBom: false,\n  //   });\n  // }\n  \n\n  /**\n   * Wait function\n   */\n  wait(ms){\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve()\n      }, ms);\n    });\n  }\n\n  /**\n   * Flat an object \n   */\n  flatten(obj){\n    const newObj = {}\n    function flat(obj){\n      Object.keys(obj).map(key => {\n        if(typeof obj[key] === \"object\") flat(obj[key])\n        else newObj[key]=obj[key]\n      })\n    }\n    flat(obj)\n    return newObj\n  }\n\n  /**\n   * stringifyWithoutPropertiesQuote\n   */\n  stringifyWithoutPropertiesQuote(obj){\n    return JSON.stringify(obj)\n            .replace(/\\\\\"/g, \"\\uFFFF\")\n            .replace(/\\\"([^\"]+)\\\":/g, \"$1:\")\n            .replace(/\\uFFFF/g, \"\\\\\\\"\");\n  }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-defi-core\n\n\nCore Module for Angular2+ based applications\nInstallation\nMake sure that you are allowed to access this repository and have your ssh agent started\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_rsa\nnpm i git@github.com:defi-informatique-team/ngx-defi-front.gitImport module in your RootModule\nimport { BrowserModule } from '@angular/platform-browser';\n...\nimport { CoreModule } from 'ngx-defi-core/dist';\n\n@NgModule({\n  declarations: [\n      ...\n  ],\n  imports: [\n    BrowserModule,\n    ... ,\n    CoreModule.forRoot(),\n  ],\n  providers: [\n      ...\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}All components are exported from top of ngx-defi-core/dist, you can import like import { BoxComponent } from 'ngx-defi-core/dist'\nDevelopment\nTo update and build this library, you can launch differents scripts from package json\n// Launch an instance of all sandboxed applications\nnpm run start// Generate documentaion folder with code coverage\nnpm run doc// Generate a specific version of the library with build and commit\n// Launch autoexport script that allow to automatically export all component on module\nnpm run patch | minor | major\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nCoreModule->SidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nFormErrorsComponent \n\nFormErrorsComponent \n\nFormErrorsComponent  -->\n\nCoreModule->FormErrorsComponent \n\n\n\n\n\nSidePanelComponent \n\nSidePanelComponent \n\nSidePanelComponent  -->\n\nCoreModule->SidePanelComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nCoreModule->NotificationsComponent \n\n\n\n\n\nBoxComponent \n\nBoxComponent \n\nBoxComponent  -->\n\nCoreModule->BoxComponent \n\n\n\n\n\nDebounceInputDirective \n\nDebounceInputDirective \n\nDebounceInputDirective  -->\n\nCoreModule->DebounceInputDirective \n\n\n\n\n\nSpinningIconDirective \n\nSpinningIconDirective \n\nSpinningIconDirective  -->\n\nCoreModule->SpinningIconDirective \n\n\n\n\n\nValidatorsDirective \n\nValidatorsDirective \n\nValidatorsDirective  -->\n\nCoreModule->ValidatorsDirective \n\n\n\n\n\nShowPasswordDirective \n\nShowPasswordDirective \n\nShowPasswordDirective  -->\n\nCoreModule->ShowPasswordDirective \n\n\n\n\n\nToId \n\nToId \n\nToId  -->\n\nCoreModule->ToId \n\n\n\n\n\nPopoverComponent \n\nPopoverComponent \n\nPopoverComponent  -->\n\nCoreModule->PopoverComponent \n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nCoreModule -->\n\nSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nFormErrorsComponent\n\nFormErrorsComponent\n\nCoreModule -->\n\nFormErrorsComponent->CoreModule\n\n\n\n\n\nBoxComponent\n\nBoxComponent\n\nCoreModule -->\n\nBoxComponent->CoreModule\n\n\n\n\n\nSidePanelComponent\n\nSidePanelComponent\n\nCoreModule -->\n\nSidePanelComponent->CoreModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nCoreModule -->\n\nNotificationsComponent->CoreModule\n\n\n\n\n\nDebounceInputDirective\n\nDebounceInputDirective\n\nCoreModule -->\n\nDebounceInputDirective->CoreModule\n\n\n\n\n\nClickStopPropagation\n\nClickStopPropagation\n\nCoreModule -->\n\nClickStopPropagation->CoreModule\n\n\n\n\n\nSpinningIconDirective\n\nSpinningIconDirective\n\nCoreModule -->\n\nSpinningIconDirective->CoreModule\n\n\n\n\n\nValidatorsDirective\n\nValidatorsDirective\n\nCoreModule -->\n\nValidatorsDirective->CoreModule\n\n\n\n\n\nShowPasswordDirective\n\nShowPasswordDirective\n\nCoreModule -->\n\nShowPasswordDirective->CoreModule\n\n\n\n\n\nToId\n\nToId\n\nCoreModule -->\n\nToId->CoreModule\n\n\n\n\n\nPopoverComponent\n\nPopoverComponent\n\nCoreModule -->\n\nPopoverComponent->CoreModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        8 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
