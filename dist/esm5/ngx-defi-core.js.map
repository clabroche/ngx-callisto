{
  "version": 3,
  "file": "ngx-defi-core.js",
  "sources": [
    "ng://ngx-defi-core/out/modules/core/validators/Password.validator.ts",
    "ng://ngx-defi-core/out/modules/core/core.module.ts",
    "ng://ngx-defi-core/out/modules/core/popover/popover.component.ts",
    "ng://ngx-defi-core/out/modules/core/pipe/toId.pipe.ts",
    "ng://ngx-defi-core/out/modules/core/directives/showPassword.directive.ts",
    "ng://ngx-defi-core/out/modules/core/directives/validators.directive.ts",
    "ng://ngx-defi-core/out/modules/core/directives/stopPropagation.directive.ts",
    "ng://ngx-defi-core/out/modules/core/directives/spinningIcon.directive.ts",
    "ng://ngx-defi-core/out/modules/core/directives/debounceInput.directive.ts",
    "ng://ngx-defi-core/out/modules/core/providers/common.service.ts",
    "ng://ngx-defi-core/out/modules/core/side-panel/side-panel.component.ts",
    "ng://ngx-defi-core/out/modules/core/providers/sidepanel.service.ts",
    "ng://ngx-defi-core/out/modules/core/notifications/notifications.component.ts",
    "ng://ngx-defi-core/out/modules/core/providers/notifications.service.ts",
    "ng://ngx-defi-core/out/modules/core/form-errors/form-errors.component.ts",
    "ng://ngx-defi-core/out/modules/core/navbar/navbar.component.ts",
    "ng://ngx-defi-core/out/modules/core/sidebar/sidebar.component.ts",
    "ng://ngx-defi-core/out/modules/core/providers/sidebar.service.ts",
    "ng://ngx-defi-core/out/modules/core/box/box.component.ts"
  ],
  "sourcesContent": [
    "import { AbstractControl } from '@angular/forms';\n\n/**\n * Check if passphrase are the same\n * @example \n *  fb.group({\n *      passphrase: [\"\",Validators.required],\n *      recheckPassphrase: [\"\",Validators.required],\n *  }, { validator: MatchPassword.MatchPassword })\n * \n *  <form [formGroup]=\"formPassphrases\">\n *  |  <div class=\"label\" for=\"passphrase\">Passphrase</div>\n *  |  <input type=\"password\" [formControlName]=\"'passphrase'\" />\n *  |\n *  |  <div class=\"label\" for=\"recheckPassphrase\">Recheck passphrase</div>\n *  |  <input type=\"password\" [formControlName]=\"'recheckPassphrase'\" />\n *  |\n *  |  <button [disabled]=\"formPassphrases.invalid\">Submit button</button>\n *  </form>\n *  MatchPassword: {{formPassphrases.valid}}\n */\nexport class Password {\n\n    /**\n     * check function\n     */\n    static MatchPassword(AC: AbstractControl) {\n        let confirmPassword = AC.value.passphrase\n        let password = AC.value.recheckPassphrase; // to get value in input tag\n        if (confirmPassword !== password) {\n            return { recheckPassphrase: true }\n        } else return null\n    }\n    /**\n     * Return a password\n     */\n    static GeneratePassword(length:number = 12):string {\n        const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]\\:;?><,./-=\"\n        let retVal = \"\";\n        for (var i = 0, n = charset.length; i < length; ++i) {\n            retVal += charset.charAt(Math.floor(Math.random() * n));\n        }\n        return retVal;\n    }\n}",
    "import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FormErrorsComponent } from './form-errors/form-errors.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidePanelComponent } from './side-panel/side-panel.component';\nimport { BoxComponent } from './box/box.component';\n\nimport { CommonService } from './providers/common.service';\nimport { SideBarService } from './providers/sidebar.service';\nimport { SidePanelService } from './providers/sidepanel.service';\nimport { NotificationsService } from './providers/notifications.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DebounceInputDirective } from './directives/debounceInput.directive';\nimport { SpinningIconDirective } from './directives/spinningIcon.directive';\nimport { ClickStopPropagation } from './directives/stopPropagation.directive';\nimport { ValidatorsDirective } from './directives/validators.directive';\nimport { ShowPasswordDirective } from './directives/showPassword.directive';\nimport { ToId } from './pipe/toId.pipe';\nimport { PopoverComponent } from './popover/popover.component';\nimport { Router, RouterModule, RouterLink } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    BoxComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    DebounceInputDirective,\n    ClickStopPropagation,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbModule.forRoot(),\n    BrowserAnimationsModule,\n  ],\n  exports: [\n    SidebarComponent,\n    NavbarComponent,\n    FormErrorsComponent,\n    SidePanelComponent,\n    NotificationsComponent,\n    BoxComponent,\n    DebounceInputDirective,\n    SpinningIconDirective,\n    ValidatorsDirective,\n    ShowPasswordDirective,\n    ToId,\n    PopoverComponent,\n  ]\n})\nexport class CoreModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommonService,\n        SideBarService,\n        NotificationsService,\n        SidePanelService,\n      ]\n    };\n  }\n}\n",
    "import { Component, Input, SimpleChange, OnInit, ViewChild, OnChanges } from '@angular/core';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Make a popoper around items\n * @example\n * <popover [open]=\"open()\" placement='right'>\n    |  <button (click)=\"toggle()\" style=\"width:100px;\">hey</button>\n    |  <div popover=\"content\">Hey to you! I'm on your right!</div>\n    </popover>\n */\n@Component({\n  selector: 'popover',\n  template: `<div id=\"popover\" [ngbPopover]=\"popTemplate\"  #popover=\"ngbPopover\" [placement]='placement'  triggers=\"manual\">\n    <ng-template #popTemplate>\n        <ng-content select=\"[popover=content]\"></ng-content>\n    </ng-template>\n\n    <ng-content></ng-content>\n</div>`,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}:host #popover{width:auto}:host ::ng-deep ul{list-style:none;margin:0;padding:0}`]\n})\nexport class PopoverComponent implements OnInit, OnChanges  {\n  /**\n   * Open or close popover;\n   * Default: close\n   */\n  @Input('open') open = false;\n  /**\n   * Define the placment of popover\n   */\n  @Input('placement') placement = 'right';\n  /**\n   * private boolean to watching open/close status\n   */\n  @ViewChild('popover') popover: NgbPopover;\n  /**\n   * Track changes on input open to reflect status on private keys\n   */\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.loadState(changes['open'].currentValue);\n  }\n  loadState(open) {\n    open ? this.popover.open() : this.popover.close();\n  }\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.loadState(this.open);\n    }, 100);\n  }\n}\n\n",
    "import { Inject, Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform string to be a valid HtmlID\n */\n@Pipe({ name: 'toId', pure: true })\nexport class ToId implements PipeTransform {\n\n    /**\n     * Transform function\n     * It remove special characters\n     */\n    transform(value: any) {\n        return value.split(' ').join('').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    }\n}",
    "import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2, OnInit} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * <input type=\"text\" [formControlName]=\"'hello'\" [validators]=\"form.controls['hello']\"/>\n */\n@Directive({\n  selector: '[show-password]',\n  host: {}\n})\nexport class ShowPasswordDirective implements OnInit{\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  ngOnInit(): void {\n    const div = this.renderer.createElement('i');\n    this.renderer.addClass(div, 'fa');\n    this.renderer.addClass(div, 'fa-eye-slash');\n    this.renderer.addClass(div, 'toggle-eye');\n    this.renderer.setStyle(div, 'position', 'absolute')\n    this.renderer.setStyle(div, 'display', 'inherit')\n    this.renderer.setStyle(div, 'cursor', 'pointer')\n    this.renderer.listen(div, 'click', event => {\n      const input = this.hostElement.nativeElement\n      if(input.type === 'password'){\n        input.type = 'text'\n        this.renderer.addClass(div, 'fa-eye');\n        this.renderer.removeClass(div, 'fa-eye-slash');\n      } else {\n        input.type = 'password'\n        this.renderer.removeClass(div, 'fa-eye');\n        this.renderer.addClass(div, 'fa-eye-slash');\n      }\n    })\n    \n    this.renderer.setStyle(this.hostElement.nativeElement, 'padding-left', '2em')\n    \n    const parent = this.hostElement.nativeElement.parentNode;\n    this.renderer.insertBefore(parent, div, this.hostElement.nativeElement)\n  }\n\n}\n",
    "import { Directive, OnDestroy, Input, AfterViewChecked, ElementRef, Renderer2} from '@angular/core';\n\n/**\n * Load differents directive with an array of key value\n * @example\n * <input type=\"text\" [formControlName]=\"'hello'\" [validators]=\"form.controls['hello']\"/>\n */\n@Directive({\n  selector: '[validators]',\n  host: {\n    \"(input)\": 'onInputChange($event)'\n  }\n})\nexport class ValidatorsDirective implements AfterViewChecked{\n  /**\n   * Array of key value that describe all directive to put on the element\n   */\n  @Input() validators;\n\n  /**\n   * Load some dependencies\n   */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef){}\n  \n  /**\n   * Launch validator check for the first time init\n   */\n  ngAfterViewChecked(){\n    this.onInputChange()\n  }\n\n  /**\n   * Change appearance of input with goodInput/badInout class\n   */\n  onInputChange() {\n    if (this.validators.valid) {\n      this.renderer.addClass(this.hostElement.nativeElement, 'goodInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'badInput');\n    } else {\n      this.renderer.addClass(this.hostElement.nativeElement, 'badInput');\n      this.renderer.removeClass(this.hostElement.nativeElement, 'goodInput');\n    }  \n  }\n}\n",
    "import { Directive, HostListener } from \"@angular/core\";\n\n/**\n * Prevent bubbling of events\n * @example \n *  <div (click)=\"doSomething()\"> // not call when click happenned on child\n *  | <div click-stop-propagation></div>\n *  </div>\n */\n@Directive({\n  selector: \"[click-stop-propagation]\"\n})\nexport class ClickStopPropagation {\n  /**\n   * Trigger click event to stop propagation\n   */\n  @HostListener(\"click\", [\"$event\"])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n}\n",
    "import { Directive, HostListener, Renderer2, ElementRef } from \"@angular/core\";\n\n/**\n * spin an icon\n * @example \n * <button (click)=\"icon.start()\">Click to start</button>\n * <button>\n * | <i class=\"fa fa-minus-circle\" aria-hidden=\"true\" spinning-icon #icon=\"spinning\"></i>\n * </button>\n * <button (click)=\"icon.stop()\">Click to stop</button>\n */\n@Directive({\n  selector: \"[spinning-icon]\",\n  exportAs:'spinning'\n})\nexport class SpinningIconDirective {\n\n  /**\n  * Load some dependencies\n  */\n  constructor(private renderer: Renderer2, private hostElement: ElementRef) { }\n\n  start(event: any): void {\n    this.renderer.addClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.addClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n\n  stop(){\n    this.renderer.removeClass(this.hostElement.nativeElement, 'spin-animation');\n    this.renderer.removeClass(this.hostElement.nativeElement, 'fa-spinner');\n  }\n}\n",
    "import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\n\n/**\n * Directive that debounce an element that supports keyListener\n * @example \n * <input type=\"text\" debounce-input (debounce)=\"doSomething($event.target.value)\" [debounceTime]=\"200\" />\n */\n@Directive({\n  selector: '[debounce-input]'\n})\nexport class DebounceInputDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Describe the debounce time; Default: 500ms\n   */\n  @Input() debounceTime = 500;\n  /**\n   * Emit and call function after the debounce time\n   */\n  @Output() debounce = new EventEmitter();\n  /**\n   * Observable that register the flow\n   */\n  private subject = new Subject();\n  /**\n   * Instance of the observable to close when component die\n   */\n  private subscription: Subscription;\n\n  \n\n  /**\n   * Register observable pipe that describe the flow of the debounce directive\n   */\n  ngOnInit() {\n    this.createSubsription()\n  }\n  createSubsription(){\n    this.subscription = this.subject.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounce.emit(e));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.debounceTime && this.subject.observers[0]) this.subject.observers[0]['dueTime'] = changes.debounceTime.currentValue\n  }\n  /**\n   * Unregister observable on the component destruct\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Trigger keyup event and inject it to the pipe of the debounce \n   */\n  @HostListener('keyup', ['$event'])\n  keyupEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.subject.next(event);\n  }\n}\n",
    "import { Injectable } from \"@angular/core\";\nimport * as _ from 'lodash'\nimport { Angular2Csv } from 'angular2-csv'\n\n/**\n * Describe differences between two object\n */\nexport interface differences {\n  /**\n   * Only when two same prop have not same values\n   */\n  different: Array<string>,\n  /**\n   * Only missing properties from the first object\n   */\n  missing_from_first: Array<string>,\n  /**\n   * Only missing properties from the second object\n   */\n  missing_from_second: Array<string>\n}\n\n/**\n * Share variable and function commonly use in the app\n */\n@Injectable()\nexport class CommonService {\n  /**\n   * Api URL\n   */\n  api: string\n  /**\n   * GraphQL URL\n   */\n  graphQL: string\n  /**\n   * Interval in ms between two refresh\n   */\n  refreshTokenInterval: number\n\n  /**\n   * Instanciate all members\n   */\n  constructor(){\n    this.api = \"http://localhost:3000\"\n    this.graphQL = this.api + '/graphql'\n    this.refreshTokenInterval = 4000\n  }\n\n  /**\n   * Test equality objects \n   */\n  equalityObjects(a,b){\n    const differences = this.differences(a,b)\n    const d = differences.different.length + differences.missing_from_first.length + differences.missing_from_second.length\n    return  d===0 ? true :false \n  }\n\n  /**\n   * Load all\n   */\n  differences(a, b): differences {\n    var result: differences = {\n      different: [],\n      missing_from_first: [],\n      missing_from_second: []\n    };\n\n    _.reduce(a, (result, value, key) => {\n      if (b.hasOwnProperty(key)) {\n        if (_.isEqual(value, b[key])) return result;\n        else {\n          if (typeof (a[key]) != typeof ({}) || typeof (b[key]) != typeof ({})) {\n            result.different.push(key);\n            return result;\n          } else {\n            var deeper = this.differences(a[key], b[key]);\n            result.different = result.different.concat(_.map(deeper.different, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_second = result.missing_from_second.concat(_.map(deeper.missing_from_second, (sub_path) => key + \".\" + sub_path));\n            result.missing_from_first = result.missing_from_first.concat(_.map(deeper.missing_from_first, (sub_path) => key + \".\" + sub_path))\n            return result;\n          }\n        }\n      } else {\n        result.missing_from_second.push(key);\n        return result;\n      }\n    }, result);\n\n    _.reduce(b, function (result, value, key) {\n      if (a.hasOwnProperty(key)) return result;\n      else {\n        result.missing_from_first.push(key);\n        return result;\n      }\n    }, result);\n    return result;\n  }\n\n  /**\n   * Export a datable to an csv \n   */\n  // exportAsCSV(dataTable: DatatableComponent, filename: string = 'Export') {\n  //   const columns: TableColumn[] = dataTable.columns || dataTable._internalColumns;\n  //   const headers =\n  //     columns\n  //       .map((column: TableColumn) => column.name)\n  //       .filter((e) => e);  // remove column without name\n\n  //   const rows: any[] = dataTable.rows.map((row) => {\n  //     let r = {};\n  //     columns.forEach((column) => {\n  //       let prop = column.prop;\n  //       if (!column.name) return // ignore column without name\n  //       if (prop) {\n  //         if (row[prop] === null || row[prop] === undefined) \n  //           r[prop] = \"\"\n  //         else\n  //           r[prop] = row[prop]\n  //         if (typeof row[prop] === 'boolean')\n  //           r[prop] = (row[prop]) ? 'Oui' : 'Non'\n  //       }\n  //     })\n  //     return r;\n  //   });\n  //   return new Angular2Csv(rows, filename, {\n  //     fieldSeparator: ',',\n  //     quoteStrings: '\"',\n  //     decimalseparator: '.',\n  //     showLabels: true,\n  //     headers,\n  //     showTitle: false,\n  //     title: filename,\n  //     useBom: false,\n  //   });\n  // }\n  \n\n  /**\n   * Wait function\n   */\n  wait(ms){\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve()\n      }, ms);\n    });\n  }\n\n  /**\n   * Flat an object \n   */\n  flatten(obj){\n    const newObj = {}\n    function flat(obj){\n      Object.keys(obj).map(key => {\n        if(typeof obj[key] === \"object\") flat(obj[key])\n        else newObj[key]=obj[key]\n      })\n    }\n    flat(obj)\n    return newObj\n  }\n\n  /**\n   * stringifyWithoutPropertiesQuote\n   */\n  stringifyWithoutPropertiesQuote(obj){\n    return JSON.stringify(obj)\n            .replace(/\\\\\"/g, \"\\uFFFF\")\n            .replace(/\\\"([^\"]+)\\\":/g, \"$1:\")\n            .replace(/\\uFFFF/g, \"\\\\\\\"\");\n  }\n}",
    "import { Component } from \"@angular/core\";\nimport { SidePanelService } from \"../providers/sidepanel.service\";\n\n/**\n * SidePanel Component\n * @example\n * const sp = new SidePanelService()\n * const open = (template, context = {})=>sp.open(template, context)\n * \n * <div style=\"display:flex;\">\n * |  <div>\n * |  |  <button (click)=\"open(template)\">Open with template</button>\n * |  |  <br/>\n * |  |  <br/>\n * |  |  <input type=\"text\" #inputContext placeholder=\"Enter a name here\"/>\n * |  |  <button (click)=\"open(template, {value: inputContext.value})\">Open with context</button>\n * |  </div>\n * |  <sidePanel></sidePanel>\n * </div>\n * <ng-template #template let-value=\"value\"> Hey {{value}} !</ng-template>\n */\n@Component({\n  selector: \"sidePanel\",\n  template: `<div id=\"sidePanelClose\" [ngClass]=\"{'openSidePanel':sidepanel._open, 'closeSidePanel':!sidepanel._open}\" (click)=\"sidepanel._open=false\">\n    <i class='fa fa-chevron-right'></i>\n    <div id=\"sidePanelContainer\" click-stop-propagation>\n        <ng-container *ngTemplateOutlet=\"sidepanel.template; context: sidepanel.context\"></ng-container>\n    </div>\n</div>\n `,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}@-webkit-keyframes openSidePanel{0%{max-width:0;padding-left:0}100%{padding-left:10%;max-width:100vw}}@keyframes openSidePanel{0%{max-width:0;padding-left:0}100%{padding-left:10%;max-width:100vw}}@-webkit-keyframes closeSidePanel{0%{padding-left:10%;max-width:100vw}100%{padding-left:0;max-width:0}}@keyframes closeSidePanel{0%{padding-left:10%;max-width:100vw}100%{padding-left:0;max-width:0}}:host{height:100%}:host #sidePanelClose{position:absolute;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;right:0;width:100vw;height:100%;background-color:rgba(0,0,0,.7);max-width:0;overflow-x:hidden}:host #sidePanelClose i{color:#fff;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#343a40;padding-left:10px;padding-right:10px}:host #sidePanelClose ::ng-deep #sideHeader{background-color:#343a40;color:#fff;text-align:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:10px}:host #sidePanelClose ::ng-deep #sideContainer{padding:20px}:host #sidePanelClose #sidePanelContainer{background-color:#fff;height:100%}:host #sidePanelClose.closeSidePanel{-webkit-animation-name:closeSidePanel;animation-name:closeSidePanel;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}:host #sidePanelClose.openSidePanel{-webkit-animation-name:openSidePanel;animation-name:openSidePanel;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}`]\n})\nexport class SidePanelComponent {\n  /**\n   * Load dependencies\n   */\n  constructor(public sidepanel: SidePanelService){}\n}\n ",
    "import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidePanel outside the component\n */\n@Injectable()\nexport class SidePanelService {\n  /**\n   * Component watch this variable to open/close the sidePanel\n   */\n  _open = false\n  template\n  context\n  /**\n   * Open sidePanel\n   */\n  open(template?, context?) {\n    if (template) this.template = template\n    if (context) this.context = context\n    this._open = true\n  }\n\n  /**\n   * Close sidePanel\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidePanel\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}",
    "import { Component, Renderer2, ViewChildren, ElementRef, QueryList } from \"@angular/core\";\nimport { NotificationsService } from \"../providers/notifications.service\";\nimport * as bluebird from 'bluebird'\nimport { Observable } from \"rxjs/Observable\";\n\n/**\n * Display an mini-popup \n * @example\n * const ns= new NotificationsService()\n * const getFirstNotifId = _=>ns.notifications[0].id\n * const random=_=>Math.random()\n *\n * <button (click)=\"ns.add('add','test')\">Add notif</button>\n * <button (click)=\"ns.delete(getFirstNotifId())\">delete notif</button>\n * <button (click)=\"ns.deleteAll()\">delete all notif</button>\n * <button (click)=\"ns.updateNotif(getFirstNotifId(),{title:random(),msg: random()})\">Update notif</button>\n * <notifications></notifications>\n */\n@Component({\n  selector: \"notifications\",\n  template: `<div id=\"notifications\">\n    <div id=\"closeAll\" *ngIf='_notifications.length' (click)=\"deleteAll()\">\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n    </div>\n    <div class=\"notifsWrapper\">\n        <div class=\"notifWrapper\" (click)=\"ns.delete(notif.id)\" #notifModel *ngFor=\"let notif of _notifications\" [id]=\"notif.id\">\n            <div class=\"notifContainer\">\n                <div class=\"title\">\n                    {{notif.title}}\n                </div>\n                <div class=\"msg\">\n                    {{notif.msg}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>`,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}@-webkit-keyframes openNotif{0%{max-height:0}to{max-height:400px}}@keyframes openNotif{0%{max-height:0}to{max-height:400px}}@-webkit-keyframes closeNotif{0%{max-height:400px}to{max-height:0}}@keyframes closeNotif{0%{max-height:400px}to{max-height:0}}#notifications{z-index:100000;position:fixed;bottom:20px;right:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}#notifications #closeAll{text-align:right}#notifications #closeAll i{font-size:1.7em;background-color:#343a40;color:#fff;padding:10px;-webkit-box-shadow:0 0 10px grey;box-shadow:0 0 10px grey}#notifications .notifWrapper{-webkit-animation-name:openNotif;animation-name:openNotif;-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;overflow-y:hidden;-webkit-box-shadow:0 0 10px grey;box-shadow:0 0 10px grey;margin-top:10px;background-color:#343a40;color:#fff}#notifications .notifWrapper.deleteNotif{-webkit-animation-name:closeNotif;animation-name:closeNotif;-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#notifications .notifWrapper .notifContainer{padding:10px;width:400px}#notifications .notifWrapper .notifContainer .title{width:100%;border-bottom:1px solid #fff}#notifications .notifWrapper .notifContainer .msg{width:100%;padding-top:10px}`]\n})\nexport class NotificationsComponent {\n\n  @ViewChildren('notifModel') htmlNotifications:Iterable<ElementRef>\n\n  _notifications = []\n\n  /**\n   * Load dependencies instances\n   */\n  constructor(public ns: NotificationsService, private renderer2: Renderer2) {\n    this.ns.addEvent.subscribe(data => this._notifications.push(data))\n    this.ns.removeEvent.subscribe((id:any) => this.deleteNotif(id))\n  }\n\n  /**\n   * launch css animations and delete notification from id \n   */\n  deleteNotif(id){\n    return new Promise(async (resolve, reject) => {\n      const htmlNotif = await this.getHtmlNotif(id)\n      if(!htmlNotif) return\n      this.renderer2.addClass(htmlNotif,\"deleteNotif\")\n      setTimeout(() => {\n        this._notifications = this._notifications.filter(notif => notif.id !== id)\n        resolve()\n      }, 500);\n    });\n  }\n\n  /**\n   * delete All notifications\n   */\n  deleteAll(){\n\n    return bluebird.each(this.htmlNotifications, htmlNotif=>{\n      this.deleteNotif(htmlNotif.nativeElement.id)\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve()\n        }, 50);  \n      });\n    })\n  }\n\n  /**\n   * Get HTML ref of the concern id\n   */\n  async getHtmlNotif(id) {\n    let htmlNotif = await bluebird.filter(this.htmlNotifications, htmlNotif => htmlNotif.nativeElement.id === id)\n    if (htmlNotif.length) return htmlNotif.pop().nativeElement\n  }\n}\n ",
    "import { Injectable, IterableDiffers } from \"@angular/core\";\nimport * as uuid from 'uuid'\nimport { Observable, Subject } from \"rxjs\";\n\n/**\n * Describe a notification\n */\nexport interface Notification {\n  /**\n   * ID of the notification\n   */\n  id?: string;\n  /**\n   * Header on notification\n   */\n  title?: string;\n  /**\n   * Content on notification\n   */\n  msg?: string;\n  /**\n   * Timeout function \n   */\n  timeout?: any;\n}\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class NotificationsService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  notifications: Array<Notification> = [];\n  /**\n   * Emit event that contains complete notification on add\n   */\n  addEvent: Subject<any> = new Subject();\n  /**\n   * Emit event that contains id on remove \n   */\n  removeEvent: Subject<any> = new Subject();\n\n  /**\n   * Fetch delay from localStorage \n   */\n  constructor() {\n    let notificationsDelay = +localStorage.getItem(\"notificationsDelay\");\n    if (notificationsDelay < 500) {\n      notificationsDelay = 6000;\n      localStorage.setItem(\"notificationsDelay\", \"6000\");\n    }\n  }\n\n  /**\n   * Open sidebar\n   */\n  add(title, msg) {\n    const notif: Notification = {\n      id: uuid.v4(),\n      title: title || \"\",\n      msg: msg || \"\"\n    };\n    this.addEvent.next(notif);\n    notif.timeout = this.defaultTimeout(notif);\n    this.notifications.push(notif);\n    return notif;\n  }\n\n  /**\n   * Time to display notification on screen. (Localstorage key: notificationsDelay)\n   */\n  defaultTimeout(notif) {\n    return setTimeout(() => {\n      this.delete(notif.id);\n    }, +localStorage.getItem(\"notificationsDelay\"));\n  }\n\n  /**\n   * update notification from id \n   */\n  updateNotif(id, _notif: Notification) {\n    this.notifications.map(notif => {\n      if (notif.id === id) {\n        if (_notif.msg) notif.msg = _notif.msg;\n        if (_notif.title) notif.title = _notif.title;\n        clearTimeout(notif.timeout);\n        notif.timeout = this.defaultTimeout(notif);\n      }\n    });\n  }\n  /**\n   * delete a notification\n   */\n  delete(id) {\n    this.removeEvent.next(id);\n    this.notifications = this.notifications.filter(notif => notif.id !== id);\n  }\n\n  /**\n   * Delete all notifications \n   */\n  deleteAll() {\n    this.notifications.map(notif => this.delete(notif.id));\n  }\n}",
    "import { Component,Input} from \"@angular/core\";\nimport { FormControl, Validators, NgModel, Validator } from \"@angular/forms\";\n\n\n/**\n * Encapsule an input and all validators attached\n * @example\n * \n *  <form (submit)=\"\" [formGroup]=\"form\">\n    | <input type=\"text\" [formControlName]=\"'email'\" placeholder=\"Email\">\n    | <formErrors [model]=\"form.controls['email']\"></formErrors>\n    </form>\n */\n@Component({\n  selector: \"formErrors\",\n  template: `<!-- {{model.errors | json}} -->\n\n<ul *ngIf=\"model && model.errors\">\n    <li *ngIf=\"model.errors.pattern\" class=\"hint\">\n         <ng-container *ngIf=\"patternName; else notPatternName\">\n            {{patternName}}\n        </ng-container>\n        <ng-template #notPatternName>\n            Pattern: {{model.errors.pattern.requiredPattern}}\n        </ng-template>\n    </li>\n    <li *ngIf=\"model.errors.required\" class=\"hint\">\n        Obligatoire\n    </li>\n    <li *ngIf=\"model.errors.minlength\" class=\"hint\">\n        Contient au moins {{model.errors.minlength.requiredLength}} caractères\n    </li>\n    <li *ngIf=\"model.errors.maxlength\" class=\"hint\">\n        Contient au plus {{model.errors.maxlength.requiredLength}} caractères\n    </li>\n    <li *ngIf=\"model.errors.recheckPassphrase\" class=\"hint\">\n        Doit correspondre à la phrase de passe\n    </li>\n    <li *ngIf=\"model.errors.email\" class=\"hint\">\n        Doit être un email\n    </li>\n</ul>\n`,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}`]\n})\nexport class FormErrorsComponent {\n  /**\n   * NgModel to tracks invalid status\n   */\n  @Input('model') model: any\n  /**\n   * Override pattern display\n   */\n  @Input('patternName') patternName :string\n\n}\n ",
    "import { Component, Input } from \"@angular/core\";\n\n/**\n * Navbar Component\n * \n * ng-content: \n *  - [logo] element on the left\n *  - [actions] element on the right\n * @example\n *  <navbar name=\"Hygisoft Web\">\n    |  <div logo>\n    |  |  <img src=\"assets/img/logo.png\" alt=\"\">\n    |  </div>\n    |  <div actions>\n    |  |  <div class=\"icon\">\n    |  |  | <i class=\"fa fa-user\"></i>\n    |  |  </div>\n    |  </div>\n    </navbar>\n */\n@Component({\n  selector: \"navbar\",\n  template: `<div id=\"navbar\">\n  <div id=\"leftRight\">\n    <div id=\"left\">\n      <div id=\"logoContainer\">\n        <ng-content select=\"[logo]\"></ng-content>\n      </div>\n      <div id=\"description\">\n        {{name}}\n      </div>\n    </div>\n\n    <div id=\"right\">\n      <div id=\"actions\">\n        <ng-content selector=\"[action]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>`,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}#navbar{height:40px;background-color:#343a40;color:#fff;max-height:40px;background-image:url(../../../assets/img/nav.png);background-size:100%}#navbar #leftRight{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%}#navbar #leftRight #left{height:100%;padding-left:5px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#navbar #leftRight #left #logoContainer{height:80%}#navbar #leftRight #left #logoContainer ::ng-deep [logo]{height:100%;border-radius:100%;overflow:hidden}#navbar #leftRight #left #logoContainer ::ng-deep [logo] img{height:100%}#navbar #leftRight #left #description{margin-left:10px;color:#fff;font-size:1.2em}#navbar #leftRight #right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;margin-right:10px}#navbar #leftRight #right #actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#navbar #leftRight #right #actions ::ng-deep .icon{font-size:1.7em}`]\n})\nexport class NavbarComponent {\n  /**\n   * Name displaying on left after icon\n   */\n  @Input('name') name = \"\"\n\n  /**\n   * Load dependencies instances\n   */\n  constructor(){}\n}\n ",
    "import { Component, Input, EventEmitter, Output} from '@angular/core';\nimport { SideBarService } from '../providers/sidebar.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n\n/**\n * Item present in sidebar\n */\nexport interface Item {\n  /**\n   * icon class (e-g: fa fa-home)\n   */\n  icon?: string;\n  /**\n   * id of icon\n   */\n  id?: string;\n  /**\n   * Description displat when sidebar is open\n   */\n  description?: string;\n  /**\n   * click function to interact outside of the component\n   */\n  click?: Array<any>|string | Function;\n  /**\n   * Url to redirect with router\n   */\n  externalUrl?: string;\n  /**\n   * possibilities to add an other list: Not implemented yet\n   */\n  list?: Configuration;\n}\n\n/**\n * Configuration object of the sidebar\n */\nexport interface Configuration {\n  /**\n   * List of all icons display on the main area\n   */\n  list?: Array<Item>;\n\n  /**\n   * List of all icons display on the bottom area\n   */\n  bottom?: Array<Item>;\n}\n\n/**\n * Display Sidebar on the app component\n * @example\n * const conf: Configuration = {\n * | list: [{\n * | | icon: \"fa fa-home\",\n * | | description: \"Accueil\",\n * | | click: [\"/home\"]\n * | }],\n * | bottom: [{\n * | | icon: \"fa fa-cog\",\n * | | description: \"Settings\",\n * | | click: [\"/settings\"]\n * | }]\n * };\n * <div style=\"display:flex\">\n * | <sidebar [conf]=\"conf\" (router)='click($event)'></sidebar>\n * | <div>I want to go to {{route()}}</div>\n * </div>\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'sidebar',\n  template: `<div class=\"openSidebar\" [ngClass]=\"{'openSidebar':sidebar._open, 'closeSidebar':!sidebar._open}\" id=\"sidebar\">\n    <div class=\"list\">\n        <div *ngFor='let item of conf.list'>\n            <ng-container *ngTemplateOutlet=\"linkTemplate;context:{$implicit:item}\"></ng-container>  \n        </div>\n    </div>\n    <div class=\"bottomList\">\n        <div *ngFor='let item of conf.bottom'>\n            <ng-container *ngTemplateOutlet=\"linkTemplate;context:{$implicit:item}\"></ng-container>\n        </div>\n        <div id=\"toggleSidebar\" class=\"item\" (click)=\"toggleSidebar();\" [ngClass]=\"{'openSidebar':sidebar._open, 'closeSidebar':!sidebar._open}\">\n            <div class=\"icon\" >\n                <i class=\"fa fa-arrow-right\"></i>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #linkTemplate let-item>\n    <div id=\"{{item.id}}\" class=\"item\" (click)=\"goTo(item)\" (auxclick)=\"newWindow(item)\" (mouseover)=\"toggleHint($event)\" (mouseleave)=\"toggleHint($event)\">\n        <div class=\"icon\">\n            <i class=\"{{item.icon}}\"></i>\n        </div>\n        <div class=\"description\" [ngClass]=\"{'openSidebar':sidebar._open, 'closeSidebar':!sidebar._open}\">\n            {{item.description}}\n        </div>\n        <div id=\"hint-{{item.id}}\" class=\"hintContainer\"  [@hintState]=\"hintState\">\n            <div class=\"hint\">{{item.description}}</div>\n        </div>\n    </div>\n</ng-template>\n`,\n  styles: [`.formGroup{margin-bottom:10px}.formGroup label{width:100%}@-webkit-keyframes openSidebar{0%{width:40px}to{width:175px}}@keyframes openSidebar{0%{width:40px}to{width:175px}}@-webkit-keyframes closeSidebar{0%{width:175px}to{width:40px}}@keyframes closeSidebar{0%{width:175px}to{width:40px}}@-webkit-keyframes openSidebarDescription{0%{width:0}to{width:40px}}@keyframes openSidebarDescription{0%{width:0}to{width:40px}}@-webkit-keyframes closeSidebarDescription{0%{width:40px}to{width:0}}@keyframes closeSidebarDescription{0%{width:40px}to{width:0}}@-webkit-keyframes openSidebarIcon{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(-1);transform:scale(-1)}}@keyframes openSidebarIcon{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(-1);transform:scale(-1)}}@-webkit-keyframes closeSidebarIcon{0%{-webkit-transform:scale(-1);transform:scale(-1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes closeSidebarIcon{0%{-webkit-transform:scale(-1);transform:scale(-1)}to{-webkit-transform:scale(1);transform:scale(1)}}#sidebar{color:#fff;height:100%;overflow-x:hidden;width:40px;background-color:#343a40;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background-size:auto 100%;background-image:url(../../../assets/img/side.png)}#sidebar.openSidebar{-webkit-animation-name:openSidebar;animation-name:openSidebar;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#sidebar.closeSidebar{-webkit-animation-name:closeSidebar;animation-name:closeSidebar;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#sidebar .bottomList,#sidebar .list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}#sidebar .bottomList.list,#sidebar .list.list{height:100%}#sidebar .bottomList .item,#sidebar .list .item{-webkit-box-shadow:none;box-shadow:none;-webkit-box-pack:left;-ms-flex-pack:left;justify-content:left;margin:0;border:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;padding-bottom:15px;padding-top:15px}#sidebar .bottomList .item:hover,#sidebar .list .item:hover{background-color:rgba(0,0,0,.5)}#sidebar .bottomList .item .hintContainer,#sidebar .list .item .hintContainer{position:absolute;overflow:hidden;left:40px;max-width:0;background-color:#1d2124}#sidebar .bottomList .item .hintContainer .hint,#sidebar .list .item .hintContainer .hint{color:#fff;padding:10px}#sidebar .bottomList .item .icon,#sidebar .list .item .icon{width:40px;text-align:center;font-size:1.5em}#sidebar .bottomList .item .description.openSidebar,#sidebar .list .item .description.openSidebar{-webkit-animation-name:openSidebarDescription;animation-name:openSidebarDescription;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#sidebar .bottomList .item .description.closeSidebar,#sidebar .list .item .description.closeSidebar{-webkit-animation-name:closeSidebarDescription;animation-name:closeSidebarDescription;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#sidebar .bottomList #toggleSidebar,#sidebar .list #toggleSidebar{background-color:rgba(0,0,0,.5)}#sidebar .bottomList #toggleSidebar .icon,#sidebar .list #toggleSidebar .icon{font-size:1em}#sidebar .bottomList #toggleSidebar.openSidebar,#sidebar .list #toggleSidebar.openSidebar{-webkit-animation-name:openSidebarIcon;animation-name:openSidebarIcon;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}#sidebar .bottomList #toggleSidebar.closeSidebar,#sidebar .list #toggleSidebar.closeSidebar{-webkit-animation-name:closeSidebarIcon;animation-name:closeSidebarIcon;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}`],\n  animations: [\n    trigger('hintState', [\n      state('open', style({\n        'max-width': '200px'\n      })),\n      state('close', style({\n        'max-width': '0'\n\n      })),\n      transition('open => close', animate('100ms ease-in')),\n      transition('close => open', animate('100ms ease-out'))\n    ])\n  ]\n})\nexport class SidebarComponent {\n  /**\n   * control css class that open/close sidebar: openHint/closeHint\n   */\n  hintState = 'close';\n  /**\n   * Get the configuration from outside\n   */\n  @Input('conf') conf: Configuration = { list: [], bottom: [] };\n\n  /**\n   * import dependencies\n   */\n  constructor(public sidebar: SideBarService) {}\n  /**\n   * Go to Home route\n   */\n  goTo(data) {\n    data.click();\n  }\n\n  newWindow(data) {\n    if (data.externalUrl) { window.open(data.externalUrl); }\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggleSidebar() {\n    this.sidebar.toggle();\n  }\n\n  /**\n   * Toggle hint beside links icons on hover\n   */\n  toggleHint($event) {\n    this.hintState =\n      $event.type === 'mouseover' && !this.sidebar._open\n        ? 'open'\n        : 'close';\n  }\n}\n\n",
    "import { Injectable } from \"@angular/core\";\n\n/**\n * Control the sidebar outside the component\n */\n@Injectable()\nexport class SideBarService {\n  /**\n   * Component watch this variable to open/close the sidebar\n   */\n  _open = false\n  \n  /**\n   * Open sidebar\n   */\n  open() {\n    this._open = true\n  }\n\n  /**\n   * Close sidebar\n   */\n  close() {\n    this._open = false\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  toggle() {\n    this._open = !this._open\n  }\n}",
    "import { Component, Input } from \"@angular/core\";\n\n/**\n * Display Box Container\n * @example \n *  <box title=\"Box title\">\n *  |  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n *  </box>\n */\n@Component({\n  selector: \"box\",\n  template: `<div id=\"box\">\n    <div id=\"box-title\">\n        {{title}}\n    </div>\n    <div class=\"box-container\">\n        <ng-content></ng-content>\n    </div>\n\n</div>`,\n  styles: [`:host{width:100%}:host #box{width:100%}:host #box .box-title{font-size:1.2rem}:host #box .box-container{background-color:#fff;-webkit-box-shadow:1px 1px 9px 0 grey;box-shadow:1px 1px 9px 0 grey}`]\n})\nexport class BoxComponent {\n\n  @Input() title:String\n\n\n\n}\n "
  ],
  "names": [
    "Subject",
    "_.reduce",
    "_.map",
    "_.isEqual",
    "bluebird.filter",
    "bluebird.each",
    "tslib_1.__awaiter",
    "uuid.v4"
  ],
  "mappings": "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"
}
