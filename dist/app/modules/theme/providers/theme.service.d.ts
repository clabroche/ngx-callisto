export declare class CltThemeService {
    rootElement: Element;
    themes: ({
        name: string;
        theme: {
            "--fontSize": string;
            "--borderRadius": string;
            "--headerBorderWidth": string;
            "--headerBorderColor": string;
            "--headerBgColor": string;
            "--headerBgColorAccent": string;
            "--headerTextColor": string;
            "--headerFontWeight": string;
            "--headerIconTextColor": string;
            "--contentBorderWidth": string;
            "--contentBorderColor": string;
            "--contentBgColor": string;
            "--contentTextColor": string;
            "--stateDefaultBorderWidth": string;
            "--stateDefaultBorderColor": string;
            "--stateDefaultBgColor": string;
            "--stateDefaultTextColor": string;
            "--stateActiveBorderColor": string;
            "--stateActiveBgColor": string;
            "--stateActiveTextColor": string;
            "--stateHighlightBorderColor": string;
            "--stateHighlightBgColor": string;
            "--stateHighlightTextColor": string;
            "--stateFocusBorderColor": string;
            "--stateFocusBgColor": string;
            "--stateFocusTextColor": string;
            "--stateErrorBorderColor": string;
            "--stateErrorBgColor": string;
            "--stateErrorTextColor": string;
            "--stateHoverBorderColor": string;
            "--stateHoverBgColor": string;
            "--stateHoverTextColor": string;
            "--inputBgColor": string;
            "--inputTextColor": string;
            "--invalidInputBorderColor": string;
            "--inputGroupTextColor": string;
            "--inputDefaultBorderWidth": string;
            "--inputDefaultBorderColor": string;
            "--inputDefaultBgColor": string;
            "--inputDefaultTextColor": string;
        };
    } | {
        name: string;
        theme: {
            "--headerBgColor": string;
            "--headerBgColorAccent": string;
            "--stateDefaultBgColor": string;
            --fontSize?: undefined;
            --borderRadius?: undefined;
            --headerBorderWidth?: undefined;
            --headerBorderColor?: undefined;
            --headerTextColor?: undefined;
            --headerFontWeight?: undefined;
            --headerIconTextColor?: undefined;
            --contentBorderWidth?: undefined;
            --contentBorderColor?: undefined;
            --contentBgColor?: undefined;
            --contentTextColor?: undefined;
            --stateDefaultBorderWidth?: undefined;
            --stateDefaultBorderColor?: undefined;
            --stateDefaultTextColor?: undefined;
            --stateActiveBorderColor?: undefined;
            --stateActiveBgColor?: undefined;
            --stateActiveTextColor?: undefined;
            --stateHighlightBorderColor?: undefined;
            --stateHighlightBgColor?: undefined;
            --stateHighlightTextColor?: undefined;
            --stateFocusBorderColor?: undefined;
            --stateFocusBgColor?: undefined;
            --stateFocusTextColor?: undefined;
            --stateErrorBorderColor?: undefined;
            --stateErrorBgColor?: undefined;
            --stateErrorTextColor?: undefined;
            --stateHoverBorderColor?: undefined;
            --stateHoverBgColor?: undefined;
            --stateHoverTextColor?: undefined;
            --inputBgColor?: undefined;
            --inputTextColor?: undefined;
            --invalidInputBorderColor?: undefined;
            --inputGroupTextColor?: undefined;
            --inputDefaultBorderWidth?: undefined;
            --inputDefaultBorderColor?: undefined;
            --inputDefaultBgColor?: undefined;
            --inputDefaultTextColor?: undefined;
        };
    })[];
    theme: any;
    constructor();
    reload(theme?: any): void;
    setStyle(property: any, value: any): void;
}
