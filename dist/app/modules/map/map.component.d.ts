import { EventEmitter, ElementRef, AfterViewChecked, QueryList, ComponentFactoryResolver, AfterContentInit, Renderer2 } from '@angular/core';
import Map from 'ol/map';
import Layer from 'ol/layer/layer';
import { Subject } from 'rxjs';
import { CltMapLayerComponent } from './map-layer/map-layer.component';
import { CltMapMapService } from './providers/map.service';
export declare class CltMapComponent implements AfterViewChecked, AfterContentInit {
    private mapService;
    private componentFactoryResolver;
    private renderer;
    map: Map;
    initialized: boolean;
    is_init: Subject<{}>;
    geocoderControl: any;
    id: string;
    height: string;
    center: {
        longitude?;
        latitude?;
    };
    points: Array<any>;
    defaultLayer: Layer;
    zoom: number;
    olclick: EventEmitter<{}>;
    olchange: EventEmitter<{}>;
    oldblclick: EventEmitter<{}>;
    olmoveend: EventEmitter<{}>;
    olmovestart: EventEmitter<{}>;
    olpointerdrag: EventEmitter<{}>;
    olpointermove: EventEmitter<{}>;
    olpostcompose: EventEmitter<{}>;
    olpostrender: EventEmitter<{}>;
    olprecompose: EventEmitter<{}>;
    olpropertychange: EventEmitter<{}>;
    olsingleclick: EventEmitter<{}>;
    geocoder: EventEmitter<{}>;
    featuremove: EventEmitter<{}>;
    mapElement: ElementRef;
    mapContainer: ElementRef;
    layersContainer: any;
    layersComponent: QueryList<CltMapLayerComponent>;
    constructor(mapService: CltMapMapService, componentFactoryResolver: ComponentFactoryResolver, renderer: Renderer2);
    ngAfterContentInit(): void;
    ngAfterViewChecked(): Promise<{}>;
    getView(): any;
    getCenter(): any;
    getCenterToLonLat(): any;
    setCenter(coordinate: any, zoom?: any): any;
    setCenterFromLonLat(coordinate: any): any;
    addLayer(component?: CltMapLayerComponent): any;
    initGeocoder(featureStyle?: any): any;
    removeGeocoder(): void;
    init(): Promise<{}>;
    eventManager(): void;
}
